from ctypes import CFUNCTYPE, POINTER, Structure, Union, c_char, c_long, c_short, sizeof
from ctypes.wintypes import BYTE, DWORD, HANDLE, WCHAR, WORD

from .. import CEnum, windll
from ..km.crt.excpt import EXCEPTION_DISPOSITION
from ..shared.basetsd import DWORD64, KAFFINITY, PDWORD64, ULONG_PTR
from ..shared.guiddef import GUID
from ..shared.ntdef import CHAR, LONGLONG, PVOID, PVOID64, ULONGLONG

SHORT = c_short
LONG = c_long

CPOINTER = POINTER

ANYSIZE_ARRAY = 1

PWCHAR = POINTER(WCHAR)
LPWCH = POINTER(WCHAR)
PWCH = POINTER(WCHAR)

LPCWCH = POINTER(WCHAR)  # const
PCWCH = POINTER(WCHAR)  # const

NWPSTR = POINTER(WCHAR)
LPWSTR = POINTER(WCHAR)
PWSTR = POINTER(WCHAR)

LPCWCH = CPOINTER(WCHAR)
PCWCH = CPOINTER(WCHAR)

PCHAR = POINTER(CHAR)
LPCH = POINTER(CHAR)
PCH = POINTER(CHAR)

LPCCH = CPOINTER(CHAR)
PCCH = CPOINTER(CHAR)

PHANDLE = POINTER(HANDLE)

HRESULT = LONG

PLONGLONG = POINTER(LONGLONG)
PULONGLONG = POINTER(ULONGLONG)

# moved


class _IMAGE_RUNTIME_FUNCTION_ENTRY_UNION(Union):
    _fields_ = [
        ("UnwindInfoAddress", DWORD),
        ("UnwindData", DWORD),
    ]


class _IMAGE_RUNTIME_FUNCTION_ENTRY(Union):
    _anonymous_ = ("u",)
    _fields_ = [
        ("BeginAddress", DWORD),
        ("EndAddress", DWORD),
        ("u", _IMAGE_RUNTIME_FUNCTION_ENTRY_UNION),
    ]


EXCEPTION_MAXIMUM_PARAMETERS = 15


class _EXCEPTION_RECORD(Structure):
    pass


_EXCEPTION_RECORD._fields_ = [
    ("ExceptionCode", DWORD),
    ("ExceptionFlags", DWORD),
    ("ExceptionRecord", POINTER(_EXCEPTION_RECORD)),
    ("ExceptionAddress", PVOID),
    ("NumberParameters", DWORD),
    ("ExceptionInformation", ULONG_PTR * EXCEPTION_MAXIMUM_PARAMETERS),
]

EXCEPTION_RECORD = _EXCEPTION_RECORD


class M128A(Structure):
    _fields_ = [
        ("Low", ULONGLONG),
        ("High", LONGLONG),
    ]


class XSAVE_FORMAT(Structure):
    _fields_ = [
        ("ControlWord", WORD),
        ("StatusWord", WORD),
        ("TagWord", BYTE),
        ("Reserved1", BYTE),
        ("ErrorOpcode", WORD),
        ("ErrorOffset", DWORD),
        ("ErrorSelector", WORD),
        ("Reserved2", WORD),
        ("DataOffset", DWORD),
        ("DataSelector", WORD),
        ("Reserved3", WORD),
        ("MxCsr", DWORD),
        ("MxCsr_Mask", DWORD),
        ("FloatRegisters", M128A * 8),
        # if defined(_WIN64)
        ("XmmRegisters", M128A * 16),
        ("Reserved4", BYTE * 96),
        # else
        ("XmmRegisters", M128A * 8),
        ("Reserved4", BYTE * 224),
        # endif
    ]


XMM_SAVE_AREA32 = XSAVE_FORMAT


class _CONTEXT_STRUCT(Structure):
    _fields_ = [
        ("Header", M128A * 2),
        ("Legacy", M128A * 8),
        ("Xmm0", M128A),
        ("Xmm1", M128A),
        ("Xmm2", M128A),
        ("Xmm3", M128A),
        ("Xmm4", M128A),
        ("Xmm5", M128A),
        ("Xmm6", M128A),
        ("Xmm7", M128A),
        ("Xmm8", M128A),
        ("Xmm9", M128A),
        ("Xmm10", M128A),
        ("Xmm11", M128A),
        ("Xmm12", M128A),
        ("Xmm13", M128A),
        ("Xmm14", M128A),
        ("Xmm15", M128A),
    ]


class _CONTEXT_UNION(Union):
    _anonymous_ = ("u",)
    _fields_ = [
        ("FltSave", XMM_SAVE_AREA32),
        ("u", _CONTEXT_STRUCT),
    ]


class _CONTEXT(Structure):
    _anonymous_ = ("u",)
    _fields_ = [
        ("P1Home", DWORD64),
        ("P2Home", DWORD64),
        ("P3Home", DWORD64),
        ("P4Home", DWORD64),
        ("P5Home", DWORD64),
        ("P6Home", DWORD64),
        ("ContextFlags", DWORD),
        ("MxCsr", DWORD),
        ("SegCs", WORD),
        ("SegDs", WORD),
        ("SegEs", WORD),
        ("SegFs", WORD),
        ("SegGs", WORD),
        ("SegSs", WORD),
        ("EFlags", DWORD),
        ("Dr0", DWORD64),
        ("Dr1", DWORD64),
        ("Dr2", DWORD64),
        ("Dr3", DWORD64),
        ("Dr6", DWORD64),
        ("Dr7", DWORD64),
        ("Rax", DWORD64),
        ("Rcx", DWORD64),
        ("Rdx", DWORD64),
        ("Rbx", DWORD64),
        ("Rsp", DWORD64),
        ("Rbp", DWORD64),
        ("Rsi", DWORD64),
        ("Rdi", DWORD64),
        ("R8", DWORD64),
        ("R9", DWORD64),
        ("R10", DWORD64),
        ("R11", DWORD64),
        ("R12", DWORD64),
        ("R13", DWORD64),
        ("R14", DWORD64),
        ("R15", DWORD64),
        ("Rip", DWORD64),
        ("u", _CONTEXT_UNION),
        ("VectorRegister", M128A * 26),
        ("VectorControl", DWORD64),
        ("DebugControl", DWORD64),
        ("LastBranchToRip", DWORD64),
        ("LastBranchFromRip", DWORD64),
        ("LastExceptionToRip", DWORD64),
        ("LastExceptionFromRip", DWORD64),
    ]


CONTEXT = _CONTEXT


class SID_IDENTIFIER_AUTHORITY(Structure):
    _fields_ = [
        ("Value", BYTE * 6),
    ]


class SID(Structure):
    _fields_ = [
        ("Revision", BYTE),
        ("SubAuthorityCount", BYTE),
        ("IdentifierAuthority", SID_IDENTIFIER_AUTHORITY),
        ("SubAuthority", DWORD * ANYSIZE_ARRAY),
    ]


PSID = POINTER(SID)

# /moved

CCHAR = c_char
LCID = DWORD
LANGID = WORD

ALL_PROCESSOR_GROUPS = 0xFFFF


class PROCESSOR_NUMBER(Structure):
    _fields_ = [
        ("Group", WORD),
        ("Number", BYTE),
        ("Reserved", BYTE),
    ]


class GROUP_AFFINITY(Structure):
    _fields_ = [
        ("Mask", KAFFINITY),
        ("Group", WORD),
        ("Reserved", WORD * 3),
    ]


# if defined(_WIN64)
MAXIMUM_PROC_PER_GROUP = 64
# else
MAXIMUM_PROC_PER_GROUP = 32
# endif

MAXIMUM_PROCESSORS = MAXIMUM_PROC_PER_GROUP


class COMPARTMENT_ID(CEnum):
    UNSPECIFIED_COMPARTMENT_ID = 0
    DEFAULT_COMPARTMENT_ID = 1


APPLICATION_ERROR_MASK = 0x20000000
ERROR_SEVERITY_SUCCESS = 0x00000000
ERROR_SEVERITY_INFORMATIONAL = 0x40000000
ERROR_SEVERITY_WARNING = 0x80000000
ERROR_SEVERITY_ERROR = 0xC0000000

MAXLONGLONG = 0x7FFFFFFFFFFFFFFF


class LARGE_INTEGER_STRUCT(Structure):
    _fields_ = [
        ("LowPart", DWORD),
        ("HighPart", LONG),
    ]


class LARGE_INTEGER(Union):
    _anonymous_ = ("u",)
    _fields_ = [
        ("u", LARGE_INTEGER_STRUCT),
        ("QuadPart", LONGLONG),
    ]


class ULARGE_INTEGER_STRUCT(Structure):
    _fields_ = [
        ("LowPart", DWORD),
        ("HighPart", DWORD),
    ]


class ULARGE_INTEGER(Union):
    _anonymous_ = ("u",)
    _fields_ = [
        ("u", ULARGE_INTEGER_STRUCT),
        ("QuadPart", ULONGLONG),
    ]


class LUID(Structure):
    _fields_ = [
        ("LowPart", DWORD),
        ("HighPart", LONG),
    ]


DWORDLONG = ULONGLONG
PDWORDLONG = POINTER(DWORDLONG)


class OBJECTID(Structure):
    _fields_ = [
        ("Lineage", GUID),
        ("Uniquifier", DWORD),
    ]


MINCHAR = 0x80
MAXCHAR = 0x7F
MINSHORT = 0x8000
MAXSHORT = 0x7FFF
MINLONG = 0x80000000
MAXLONG = 0x7FFFFFFF
MAXBYTE = 0xFF
MAXWORD = 0xFFFF
MAXDWORD = 0xFFFFFFFF

EXCEPTION_ROUTINE = CFUNCTYPE(EXCEPTION_DISPOSITION, POINTER(_EXCEPTION_RECORD), PVOID, POINTER(_CONTEXT), PVOID)

VER_SERVER_NT = 0x80000000
VER_WORKSTATION_NT = 0x40000000
VER_SUITE_SMALLBUSINESS = 0x00000001
VER_SUITE_ENTERPRISE = 0x00000002
VER_SUITE_BACKOFFICE = 0x00000004
VER_SUITE_COMMUNICATIONS = 0x00000008
VER_SUITE_TERMINAL = 0x00000010
VER_SUITE_SMALLBUSINESS_RESTRICTED = 0x00000020
VER_SUITE_EMBEDDEDNT = 0x00000040
VER_SUITE_DATACENTER = 0x00000080
VER_SUITE_SINGLEUSERTS = 0x00000100
VER_SUITE_PERSONAL = 0x00000200
VER_SUITE_BLADE = 0x00000400
VER_SUITE_EMBEDDED_RESTRICTED = 0x00000800
VER_SUITE_SECURITY_APPLIANCE = 0x00001000
VER_SUITE_STORAGE_SERVER = 0x00002000
VER_SUITE_COMPUTE_SERVER = 0x00004000
VER_SUITE_WH_SERVER = 0x00008000
VER_SUITE_MULTIUSERTS = 0x00020000

PRODUCT_UNDEFINED = 0x00000000
PRODUCT_ULTIMATE = 0x00000001
PRODUCT_HOME_BASIC = 0x00000002
PRODUCT_HOME_PREMIUM = 0x00000003
PRODUCT_ENTERPRISE = 0x00000004
PRODUCT_HOME_BASIC_N = 0x00000005
PRODUCT_BUSINESS = 0x00000006
PRODUCT_STANDARD_SERVER = 0x00000007
PRODUCT_DATACENTER_SERVER = 0x00000008
PRODUCT_SMALLBUSINESS_SERVER = 0x00000009
PRODUCT_ENTERPRISE_SERVER = 0x0000000A
PRODUCT_STARTER = 0x0000000B
PRODUCT_DATACENTER_SERVER_CORE = 0x0000000C
PRODUCT_STANDARD_SERVER_CORE = 0x0000000D
PRODUCT_ENTERPRISE_SERVER_CORE = 0x0000000E
PRODUCT_ENTERPRISE_SERVER_IA64 = 0x0000000F
PRODUCT_BUSINESS_N = 0x00000010
PRODUCT_WEB_SERVER = 0x00000011
PRODUCT_CLUSTER_SERVER = 0x00000012
PRODUCT_HOME_SERVER = 0x00000013
PRODUCT_STORAGE_EXPRESS_SERVER = 0x00000014
PRODUCT_STORAGE_STANDARD_SERVER = 0x00000015
PRODUCT_STORAGE_WORKGROUP_SERVER = 0x00000016
PRODUCT_STORAGE_ENTERPRISE_SERVER = 0x00000017
PRODUCT_SERVER_FOR_SMALLBUSINESS = 0x00000018
PRODUCT_SMALLBUSINESS_SERVER_PREMIUM = 0x00000019
PRODUCT_HOME_PREMIUM_N = 0x0000001A
PRODUCT_ENTERPRISE_N = 0x0000001B
PRODUCT_ULTIMATE_N = 0x0000001C
PRODUCT_WEB_SERVER_CORE = 0x0000001D
PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT = 0x0000001E
PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY = 0x0000001F
PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING = 0x00000020
PRODUCT_SERVER_FOUNDATION = 0x00000021
PRODUCT_HOME_PREMIUM_SERVER = 0x00000022
PRODUCT_SERVER_FOR_SMALLBUSINESS_V = 0x00000023
PRODUCT_STANDARD_SERVER_V = 0x00000024
PRODUCT_DATACENTER_SERVER_V = 0x00000025
PRODUCT_ENTERPRISE_SERVER_V = 0x00000026
PRODUCT_DATACENTER_SERVER_CORE_V = 0x00000027
PRODUCT_STANDARD_SERVER_CORE_V = 0x00000028
PRODUCT_ENTERPRISE_SERVER_CORE_V = 0x00000029
PRODUCT_HYPERV = 0x0000002A
PRODUCT_STORAGE_EXPRESS_SERVER_CORE = 0x0000002B
PRODUCT_STORAGE_STANDARD_SERVER_CORE = 0x0000002C
PRODUCT_STORAGE_WORKGROUP_SERVER_CORE = 0x0000002D
PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE = 0x0000002E
PRODUCT_STARTER_N = 0x0000002F
PRODUCT_PROFESSIONAL = 0x00000030
PRODUCT_PROFESSIONAL_N = 0x00000031
PRODUCT_SB_SOLUTION_SERVER = 0x00000032
PRODUCT_SERVER_FOR_SB_SOLUTIONS = 0x00000033
PRODUCT_STANDARD_SERVER_SOLUTIONS = 0x00000034
PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE = 0x00000035
PRODUCT_SB_SOLUTION_SERVER_EM = 0x00000036
PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM = 0x00000037
PRODUCT_SOLUTION_EMBEDDEDSERVER = 0x00000038
PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE = 0x00000039
PRODUCT_PROFESSIONAL_EMBEDDED = 0x0000003A
PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT = 0x0000003B
PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL = 0x0000003C
PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC = 0x0000003D
PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC = 0x0000003E
PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE = 0x0000003F
PRODUCT_CLUSTER_SERVER_V = 0x00000040
PRODUCT_EMBEDDED = 0x00000041
PRODUCT_STARTER_E = 0x00000042
PRODUCT_HOME_BASIC_E = 0x00000043
PRODUCT_HOME_PREMIUM_E = 0x00000044
PRODUCT_PROFESSIONAL_E = 0x00000045
PRODUCT_ENTERPRISE_E = 0x00000046
PRODUCT_ULTIMATE_E = 0x00000047
PRODUCT_ENTERPRISE_EVALUATION = 0x00000048
PRODUCT_MULTIPOINT_STANDARD_SERVER = 0x0000004C
PRODUCT_MULTIPOINT_PREMIUM_SERVER = 0x0000004D
PRODUCT_STANDARD_EVALUATION_SERVER = 0x0000004F
PRODUCT_DATACENTER_EVALUATION_SERVER = 0x00000050
PRODUCT_ENTERPRISE_N_EVALUATION = 0x00000054
PRODUCT_EMBEDDED_AUTOMOTIVE = 0x00000055
PRODUCT_EMBEDDED_INDUSTRY_A = 0x00000056
PRODUCT_THINPC = 0x00000057
PRODUCT_EMBEDDED_A = 0x00000058
PRODUCT_EMBEDDED_INDUSTRY = 0x00000059
PRODUCT_EMBEDDED_E = 0x0000005A
PRODUCT_EMBEDDED_INDUSTRY_E = 0x0000005B
PRODUCT_EMBEDDED_INDUSTRY_A_E = 0x0000005C
PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER = 0x0000005F
PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER = 0x00000060
PRODUCT_CORE_ARM = 0x00000061
PRODUCT_CORE_N = 0x00000062
PRODUCT_CORE_COUNTRYSPECIFIC = 0x00000063
PRODUCT_CORE_SINGLELANGUAGE = 0x00000064
PRODUCT_CORE = 0x00000065
PRODUCT_PROFESSIONAL_WMC = 0x00000067
PRODUCT_EMBEDDED_INDUSTRY_EVAL = 0x00000069
PRODUCT_EMBEDDED_INDUSTRY_E_EVAL = 0x0000006A
PRODUCT_EMBEDDED_EVAL = 0x0000006B
PRODUCT_EMBEDDED_E_EVAL = 0x0000006C
PRODUCT_NANO_SERVER = 0x0000006D
PRODUCT_CLOUD_STORAGE_SERVER = 0x0000006E
PRODUCT_CORE_CONNECTED = 0x0000006F
PRODUCT_PROFESSIONAL_STUDENT = 0x00000070
PRODUCT_CORE_CONNECTED_N = 0x00000071
PRODUCT_PROFESSIONAL_STUDENT_N = 0x00000072
PRODUCT_CORE_CONNECTED_SINGLELANGUAGE = 0x00000073
PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC = 0x00000074
PRODUCT_CONNECTED_CAR = 0x00000075
PRODUCT_INDUSTRY_HANDHELD = 0x00000076
PRODUCT_PPI_PRO = 0x00000077
PRODUCT_ARM64_SERVER = 0x00000078
PRODUCT_EDUCATION = 0x00000079
PRODUCT_EDUCATION_N = 0x0000007A
PRODUCT_IOTUAP = 0x0000007B
PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER = 0x0000007C
PRODUCT_ENTERPRISE_S = 0x0000007D
PRODUCT_ENTERPRISE_S_N = 0x0000007E
PRODUCT_PROFESSIONAL_S = 0x0000007F
PRODUCT_PROFESSIONAL_S_N = 0x00000080
PRODUCT_ENTERPRISE_S_EVALUATION = 0x00000081
PRODUCT_ENTERPRISE_S_N_EVALUATION = 0x00000082
PRODUCT_HOLOGRAPHIC = 0x00000087
PRODUCT_PRO_SINGLE_LANGUAGE = 0x0000008A
PRODUCT_PRO_CHINA = 0x0000008B
PRODUCT_ENTERPRISE_SUBSCRIPTION = 0x0000008C
PRODUCT_ENTERPRISE_SUBSCRIPTION_N = 0x0000008D
PRODUCT_DATACENTER_NANO_SERVER = 0x0000008F
PRODUCT_STANDARD_NANO_SERVER = 0x00000090
PRODUCT_DATACENTER_A_SERVER_CORE = 0x00000091
PRODUCT_STANDARD_A_SERVER_CORE = 0x00000092
PRODUCT_DATACENTER_WS_SERVER_CORE = 0x00000093
PRODUCT_STANDARD_WS_SERVER_CORE = 0x00000094
PRODUCT_UTILITY_VM = 0x00000095
PRODUCT_DATACENTER_EVALUATION_SERVER_CORE = 0x0000009F
PRODUCT_STANDARD_EVALUATION_SERVER_CORE = 0x000000A0
PRODUCT_PRO_WORKSTATION = 0x000000A1
PRODUCT_PRO_WORKSTATION_N = 0x000000A2
PRODUCT_PRO_FOR_EDUCATION = 0x000000A4
PRODUCT_PRO_FOR_EDUCATION_N = 0x000000A5
PRODUCT_AZURE_SERVER_CORE = 0x000000A8
PRODUCT_AZURE_NANO_SERVER = 0x000000A9
PRODUCT_ENTERPRISEG = 0x000000AB
PRODUCT_ENTERPRISEGN = 0x000000AC
PRODUCT_SERVERRDSH = 0x000000AF
PRODUCT_CLOUD = 0x000000B2
PRODUCT_CLOUDN = 0x000000B3
PRODUCT_HUBOS = 0x000000B4
PRODUCT_ONECOREUPDATEOS = 0x000000B6
PRODUCT_CLOUDE = 0x000000B7
PRODUCT_ANDROMEDA = 0x000000B8
PRODUCT_IOTOS = 0x000000B9
PRODUCT_CLOUDEN = 0x000000BA
PRODUCT_UNLICENSED = 0xABCDABCD

LANG_NEUTRAL = 0x00
LANG_INVARIANT = 0x7F

LANG_AFRIKAANS = 0x36
LANG_ALBANIAN = 0x1C
LANG_ALSATIAN = 0x84
LANG_AMHARIC = 0x5E
LANG_ARABIC = 0x01
LANG_ARMENIAN = 0x2B
LANG_ASSAMESE = 0x4D
LANG_AZERI = 0x2C
LANG_AZERBAIJANI = 0x2C
LANG_BANGLA = 0x45
LANG_BASHKIR = 0x6D
LANG_BASQUE = 0x2D
LANG_BELARUSIAN = 0x23
LANG_BENGALI = 0x45
LANG_BRETON = 0x7E
LANG_BOSNIAN = 0x1A
LANG_BOSNIAN_NEUTRAL = 0x781A
LANG_BULGARIAN = 0x02
LANG_CATALAN = 0x03
LANG_CENTRAL_KURDISH = 0x92
LANG_CHEROKEE = 0x5C
LANG_CHINESE = 0x04
LANG_CHINESE_SIMPLIFIED = 0x04
LANG_CHINESE_TRADITIONAL = 0x7C04
LANG_CORSICAN = 0x83
LANG_CROATIAN = 0x1A
LANG_CZECH = 0x05
LANG_DANISH = 0x06
LANG_DARI = 0x8C
LANG_DIVEHI = 0x65
LANG_DUTCH = 0x13
LANG_ENGLISH = 0x09
LANG_ESTONIAN = 0x25
LANG_FAEROESE = 0x38
LANG_FARSI = 0x29
LANG_FILIPINO = 0x64
LANG_FINNISH = 0x0B
LANG_FRENCH = 0x0C
LANG_FRISIAN = 0x62
LANG_FULAH = 0x67
LANG_GALICIAN = 0x56
LANG_GEORGIAN = 0x37
LANG_GERMAN = 0x07
LANG_GREEK = 0x08
LANG_GREENLANDIC = 0x6F
LANG_GUJARATI = 0x47
LANG_HAUSA = 0x68
LANG_HAWAIIAN = 0x75
LANG_HEBREW = 0x0D
LANG_HINDI = 0x39
LANG_HUNGARIAN = 0x0E
LANG_ICELANDIC = 0x0F
LANG_IGBO = 0x70
LANG_INDONESIAN = 0x21
LANG_INUKTITUT = 0x5D
LANG_IRISH = 0x3C
LANG_ITALIAN = 0x10
LANG_JAPANESE = 0x11
LANG_KANNADA = 0x4B
LANG_KASHMIRI = 0x60
LANG_KAZAK = 0x3F
LANG_KHMER = 0x53
LANG_KICHE = 0x86
LANG_KINYARWANDA = 0x87
LANG_KONKANI = 0x57
LANG_KOREAN = 0x12
LANG_KYRGYZ = 0x40
LANG_LAO = 0x54
LANG_LATVIAN = 0x26
LANG_LITHUANIAN = 0x27
LANG_LOWER_SORBIAN = 0x2E
LANG_LUXEMBOURGISH = 0x6E
LANG_MACEDONIAN = 0x2F
LANG_MALAY = 0x3E
LANG_MALAYALAM = 0x4C
LANG_MALTESE = 0x3A
LANG_MANIPURI = 0x58
LANG_MAORI = 0x81
LANG_MAPUDUNGUN = 0x7A
LANG_MARATHI = 0x4E
LANG_MOHAWK = 0x7C
LANG_MONGOLIAN = 0x50
LANG_NEPALI = 0x61
LANG_NORWEGIAN = 0x14
LANG_OCCITAN = 0x82
LANG_ODIA = 0x48
LANG_ORIYA = 0x48
LANG_PASHTO = 0x63
LANG_PERSIAN = 0x29
LANG_POLISH = 0x15
LANG_PORTUGUESE = 0x16
LANG_PULAR = 0x67
LANG_PUNJABI = 0x46
LANG_QUECHUA = 0x6B
LANG_ROMANIAN = 0x18
LANG_ROMANSH = 0x17
LANG_RUSSIAN = 0x19
LANG_SAKHA = 0x85
LANG_SAMI = 0x3B
LANG_SANSKRIT = 0x4F
LANG_SCOTTISH_GAELIC = 0x91
LANG_SERBIAN = 0x1A
LANG_SERBIAN_NEUTRAL = 0x7C1A
LANG_SINDHI = 0x59
LANG_SINHALESE = 0x5B
LANG_SLOVAK = 0x1B
LANG_SLOVENIAN = 0x24
LANG_SOTHO = 0x6C
LANG_SPANISH = 0x0A
LANG_SWAHILI = 0x41
LANG_SWEDISH = 0x1D
LANG_SYRIAC = 0x5A
LANG_TAJIK = 0x28
LANG_TAMAZIGHT = 0x5F
LANG_TAMIL = 0x49
LANG_TATAR = 0x44
LANG_TELUGU = 0x4A
LANG_THAI = 0x1E
LANG_TIBETAN = 0x51
LANG_TIGRIGNA = 0x73
LANG_TIGRINYA = 0x73
LANG_TSWANA = 0x32
LANG_TURKISH = 0x1F
LANG_TURKMEN = 0x42
LANG_UIGHUR = 0x80
LANG_UKRAINIAN = 0x22
LANG_UPPER_SORBIAN = 0x2E
LANG_URDU = 0x20
LANG_UZBEK = 0x43
LANG_VALENCIAN = 0x03
LANG_VIETNAMESE = 0x2A
LANG_WELSH = 0x52
LANG_WOLOF = 0x88
LANG_XHOSA = 0x34
LANG_YAKUT = 0x85
LANG_YI = 0x78
LANG_YORUBA = 0x6A
LANG_ZULU = 0x35

SUBLANG_NEUTRAL = 0x00
SUBLANG_DEFAULT = 0x01
SUBLANG_SYS_DEFAULT = 0x02
SUBLANG_CUSTOM_DEFAULT = 0x03
SUBLANG_CUSTOM_UNSPECIFIED = 0x04
SUBLANG_UI_CUSTOM_DEFAULT = 0x05

SUBLANG_AFRIKAANS_SOUTH_AFRICA = 0x01
SUBLANG_ALBANIAN_ALBANIA = 0x01
SUBLANG_ALSATIAN_FRANCE = 0x01
SUBLANG_AMHARIC_ETHIOPIA = 0x01
SUBLANG_ARABIC_SAUDI_ARABIA = 0x01
SUBLANG_ARABIC_IRAQ = 0x02
SUBLANG_ARABIC_EGYPT = 0x03
SUBLANG_ARABIC_LIBYA = 0x04
SUBLANG_ARABIC_ALGERIA = 0x05
SUBLANG_ARABIC_MOROCCO = 0x06
SUBLANG_ARABIC_TUNISIA = 0x07
SUBLANG_ARABIC_OMAN = 0x08
SUBLANG_ARABIC_YEMEN = 0x09
SUBLANG_ARABIC_SYRIA = 0x0A
SUBLANG_ARABIC_JORDAN = 0x0B
SUBLANG_ARABIC_LEBANON = 0x0C
SUBLANG_ARABIC_KUWAIT = 0x0D
SUBLANG_ARABIC_UAE = 0x0E
SUBLANG_ARABIC_BAHRAIN = 0x0F
SUBLANG_ARABIC_QATAR = 0x10
SUBLANG_ARMENIAN_ARMENIA = 0x01
SUBLANG_ASSAMESE_INDIA = 0x01
SUBLANG_AZERI_LATIN = 0x01
SUBLANG_AZERI_CYRILLIC = 0x02
SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN = 0x01
SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC = 0x02
SUBLANG_BANGLA_INDIA = 0x01
SUBLANG_BANGLA_BANGLADESH = 0x02
SUBLANG_BASHKIR_RUSSIA = 0x01
SUBLANG_BASQUE_BASQUE = 0x01
SUBLANG_BELARUSIAN_BELARUS = 0x01
SUBLANG_BENGALI_INDIA = 0x01
SUBLANG_BENGALI_BANGLADESH = 0x02
SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN = 0x05
SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 0x08
SUBLANG_BRETON_FRANCE = 0x01
SUBLANG_BULGARIAN_BULGARIA = 0x01
SUBLANG_CATALAN_CATALAN = 0x01
SUBLANG_CENTRAL_KURDISH_IRAQ = 0x01
SUBLANG_CHEROKEE_CHEROKEE = 0x01
SUBLANG_CHINESE_TRADITIONAL = 0x01
SUBLANG_CHINESE_SIMPLIFIED = 0x02
SUBLANG_CHINESE_HONGKONG = 0x03
SUBLANG_CHINESE_SINGAPORE = 0x04
SUBLANG_CHINESE_MACAU = 0x05
SUBLANG_CORSICAN_FRANCE = 0x01
SUBLANG_CZECH_CZECH_REPUBLIC = 0x01
SUBLANG_CROATIAN_CROATIA = 0x01
SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN = 0x04
SUBLANG_DANISH_DENMARK = 0x01
SUBLANG_DARI_AFGHANISTAN = 0x01
SUBLANG_DIVEHI_MALDIVES = 0x01
SUBLANG_DUTCH = 0x01
SUBLANG_DUTCH_BELGIAN = 0x02
SUBLANG_ENGLISH_US = 0x01
SUBLANG_ENGLISH_UK = 0x02
SUBLANG_ENGLISH_AUS = 0x03
SUBLANG_ENGLISH_CAN = 0x04
SUBLANG_ENGLISH_NZ = 0x05
SUBLANG_ENGLISH_EIRE = 0x06
SUBLANG_ENGLISH_SOUTH_AFRICA = 0x07
SUBLANG_ENGLISH_JAMAICA = 0x08
SUBLANG_ENGLISH_CARIBBEAN = 0x09
SUBLANG_ENGLISH_BELIZE = 0x0A
SUBLANG_ENGLISH_TRINIDAD = 0x0B
SUBLANG_ENGLISH_ZIMBABWE = 0x0C
SUBLANG_ENGLISH_PHILIPPINES = 0x0D
SUBLANG_ENGLISH_INDIA = 0x10
SUBLANG_ENGLISH_MALAYSIA = 0x11
SUBLANG_ENGLISH_SINGAPORE = 0x12
SUBLANG_ESTONIAN_ESTONIA = 0x01
SUBLANG_FAEROESE_FAROE_ISLANDS = 0x01
SUBLANG_FILIPINO_PHILIPPINES = 0x01
SUBLANG_FINNISH_FINLAND = 0x01
SUBLANG_FRENCH = 0x01
SUBLANG_FRENCH_BELGIAN = 0x02
SUBLANG_FRENCH_CANADIAN = 0x03
SUBLANG_FRENCH_SWISS = 0x04
SUBLANG_FRENCH_LUXEMBOURG = 0x05
SUBLANG_FRENCH_MONACO = 0x06
SUBLANG_FRISIAN_NETHERLANDS = 0x01
SUBLANG_FULAH_SENEGAL = 0x02
SUBLANG_GALICIAN_GALICIAN = 0x01
SUBLANG_GEORGIAN_GEORGIA = 0x01
SUBLANG_GERMAN = 0x01
SUBLANG_GERMAN_SWISS = 0x02
SUBLANG_GERMAN_AUSTRIAN = 0x03
SUBLANG_GERMAN_LUXEMBOURG = 0x04
SUBLANG_GERMAN_LIECHTENSTEIN = 0x05
SUBLANG_GREEK_GREECE = 0x01
SUBLANG_GREENLANDIC_GREENLAND = 0x01
SUBLANG_GUJARATI_INDIA = 0x01
SUBLANG_HAUSA_NIGERIA_LATIN = 0x01
SUBLANG_HAWAIIAN_US = 0x01
SUBLANG_HEBREW_ISRAEL = 0x01
SUBLANG_HINDI_INDIA = 0x01
SUBLANG_HUNGARIAN_HUNGARY = 0x01
SUBLANG_ICELANDIC_ICELAND = 0x01
SUBLANG_IGBO_NIGERIA = 0x01
SUBLANG_INDONESIAN_INDONESIA = 0x01
SUBLANG_INUKTITUT_CANADA = 0x01
SUBLANG_INUKTITUT_CANADA_LATIN = 0x02
SUBLANG_IRISH_IRELAND = 0x02
SUBLANG_ITALIAN = 0x01
SUBLANG_ITALIAN_SWISS = 0x02
SUBLANG_JAPANESE_JAPAN = 0x01
SUBLANG_KANNADA_INDIA = 0x01
SUBLANG_KASHMIRI_SASIA = 0x02
SUBLANG_KASHMIRI_INDIA = 0x02
SUBLANG_KAZAK_KAZAKHSTAN = 0x01
SUBLANG_KHMER_CAMBODIA = 0x01
SUBLANG_KICHE_GUATEMALA = 0x01
SUBLANG_KINYARWANDA_RWANDA = 0x01
SUBLANG_KONKANI_INDIA = 0x01
SUBLANG_KOREAN = 0x01
SUBLANG_KYRGYZ_KYRGYZSTAN = 0x01
SUBLANG_LAO_LAO = 0x01
SUBLANG_LATVIAN_LATVIA = 0x01
SUBLANG_LITHUANIAN = 0x01
SUBLANG_LOWER_SORBIAN_GERMANY = 0x02
SUBLANG_LUXEMBOURGISH_LUXEMBOURG = 0x01
SUBLANG_MACEDONIAN_MACEDONIA = 0x01
SUBLANG_MALAY_MALAYSIA = 0x01
SUBLANG_MALAY_BRUNEI_DARUSSALAM = 0x02
SUBLANG_MALAYALAM_INDIA = 0x01
SUBLANG_MALTESE_MALTA = 0x01
SUBLANG_MAORI_NEW_ZEALAND = 0x01
SUBLANG_MAPUDUNGUN_CHILE = 0x01
SUBLANG_MARATHI_INDIA = 0x01
SUBLANG_MOHAWK_MOHAWK = 0x01
SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA = 0x01
SUBLANG_MONGOLIAN_PRC = 0x02
SUBLANG_NEPALI_INDIA = 0x02
SUBLANG_NEPALI_NEPAL = 0x01
SUBLANG_NORWEGIAN_BOKMAL = 0x01
SUBLANG_NORWEGIAN_NYNORSK = 0x02
SUBLANG_OCCITAN_FRANCE = 0x01
SUBLANG_ODIA_INDIA = 0x01
SUBLANG_ORIYA_INDIA = 0x01
SUBLANG_PASHTO_AFGHANISTAN = 0x01
SUBLANG_PERSIAN_IRAN = 0x01
SUBLANG_POLISH_POLAND = 0x01
SUBLANG_PORTUGUESE = 0x02
SUBLANG_PORTUGUESE_BRAZILIAN = 0x01
SUBLANG_PULAR_SENEGAL = 0x02
SUBLANG_PUNJABI_INDIA = 0x01
SUBLANG_PUNJABI_PAKISTAN = 0x02
SUBLANG_QUECHUA_BOLIVIA = 0x01
SUBLANG_QUECHUA_ECUADOR = 0x02
SUBLANG_QUECHUA_PERU = 0x03
SUBLANG_ROMANIAN_ROMANIA = 0x01
SUBLANG_ROMANSH_SWITZERLAND = 0x01
SUBLANG_RUSSIAN_RUSSIA = 0x01
SUBLANG_SAKHA_RUSSIA = 0x01
SUBLANG_SAMI_NORTHERN_NORWAY = 0x01
SUBLANG_SAMI_NORTHERN_SWEDEN = 0x02
SUBLANG_SAMI_NORTHERN_FINLAND = 0x03
SUBLANG_SAMI_LULE_NORWAY = 0x04
SUBLANG_SAMI_LULE_SWEDEN = 0x05
SUBLANG_SAMI_SOUTHERN_NORWAY = 0x06
SUBLANG_SAMI_SOUTHERN_SWEDEN = 0x07
SUBLANG_SAMI_SKOLT_FINLAND = 0x08
SUBLANG_SAMI_INARI_FINLAND = 0x09
SUBLANG_SANSKRIT_INDIA = 0x01
SUBLANG_SCOTTISH_GAELIC = 0x01
SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN = 0x06
SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC = 0x07
SUBLANG_SERBIAN_MONTENEGRO_LATIN = 0x0B
SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC = 0x0C
SUBLANG_SERBIAN_SERBIA_LATIN = 0x09
SUBLANG_SERBIAN_SERBIA_CYRILLIC = 0x0A
SUBLANG_SERBIAN_CROATIA = 0x01
SUBLANG_SERBIAN_LATIN = 0x02
SUBLANG_SERBIAN_CYRILLIC = 0x03
SUBLANG_SINDHI_INDIA = 0x01
SUBLANG_SINDHI_PAKISTAN = 0x02
SUBLANG_SINDHI_AFGHANISTAN = 0x02
SUBLANG_SINHALESE_SRI_LANKA = 0x01
SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA = 0x01
SUBLANG_SLOVAK_SLOVAKIA = 0x01
SUBLANG_SLOVENIAN_SLOVENIA = 0x01
SUBLANG_SPANISH = 0x01
SUBLANG_SPANISH_MEXICAN = 0x02
SUBLANG_SPANISH_MODERN = 0x03
SUBLANG_SPANISH_GUATEMALA = 0x04
SUBLANG_SPANISH_COSTA_RICA = 0x05
SUBLANG_SPANISH_PANAMA = 0x06
SUBLANG_SPANISH_DOMINICAN_REPUBLIC = 0x07
SUBLANG_SPANISH_VENEZUELA = 0x08
SUBLANG_SPANISH_COLOMBIA = 0x09
SUBLANG_SPANISH_PERU = 0x0A
SUBLANG_SPANISH_ARGENTINA = 0x0B
SUBLANG_SPANISH_ECUADOR = 0x0C
SUBLANG_SPANISH_CHILE = 0x0D
SUBLANG_SPANISH_URUGUAY = 0x0E
SUBLANG_SPANISH_PARAGUAY = 0x0F
SUBLANG_SPANISH_BOLIVIA = 0x10
SUBLANG_SPANISH_EL_SALVADOR = 0x11
SUBLANG_SPANISH_HONDURAS = 0x12
SUBLANG_SPANISH_NICARAGUA = 0x13
SUBLANG_SPANISH_PUERTO_RICO = 0x14
SUBLANG_SPANISH_US = 0x15
SUBLANG_SWAHILI_KENYA = 0x01
SUBLANG_SWEDISH = 0x01
SUBLANG_SWEDISH_FINLAND = 0x02
SUBLANG_SYRIAC_SYRIA = 0x01
SUBLANG_TAJIK_TAJIKISTAN = 0x01
SUBLANG_TAMAZIGHT_ALGERIA_LATIN = 0x02
SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH = 0x04
SUBLANG_TAMIL_INDIA = 0x01
SUBLANG_TAMIL_SRI_LANKA = 0x02
SUBLANG_TATAR_RUSSIA = 0x01
SUBLANG_TELUGU_INDIA = 0x01
SUBLANG_THAI_THAILAND = 0x01
SUBLANG_TIBETAN_PRC = 0x01
SUBLANG_TIGRIGNA_ERITREA = 0x02
SUBLANG_TIGRINYA_ERITREA = 0x02
SUBLANG_TIGRINYA_ETHIOPIA = 0x01
SUBLANG_TSWANA_BOTSWANA = 0x02
SUBLANG_TSWANA_SOUTH_AFRICA = 0x01
SUBLANG_TURKISH_TURKEY = 0x01
SUBLANG_TURKMEN_TURKMENISTAN = 0x01
SUBLANG_UIGHUR_PRC = 0x01
SUBLANG_UKRAINIAN_UKRAINE = 0x01
SUBLANG_UPPER_SORBIAN_GERMANY = 0x01
SUBLANG_URDU_PAKISTAN = 0x01
SUBLANG_URDU_INDIA = 0x02
SUBLANG_UZBEK_LATIN = 0x01
SUBLANG_UZBEK_CYRILLIC = 0x02
SUBLANG_VALENCIAN_VALENCIA = 0x02
SUBLANG_VIETNAMESE_VIETNAM = 0x01
SUBLANG_WELSH_UNITED_KINGDOM = 0x01
SUBLANG_WOLOF_SENEGAL = 0x01
SUBLANG_XHOSA_SOUTH_AFRICA = 0x01
SUBLANG_YAKUT_RUSSIA = 0x01
SUBLANG_YI_PRC = 0x01
SUBLANG_YORUBA_NIGERIA = 0x01
SUBLANG_ZULU_SOUTH_AFRICA = 0x01

SORT_DEFAULT = 0x0
SORT_INVARIANT_MATH = 0x1
SORT_JAPANESE_XJIS = 0x0
SORT_JAPANESE_UNICODE = 0x1
SORT_JAPANESE_RADICALSTROKE = 0x4
SORT_CHINESE_BIG5 = 0x0
SORT_CHINESE_PRCP = 0x0
SORT_CHINESE_UNICODE = 0x1
SORT_CHINESE_PRC = 0x2
SORT_CHINESE_BOPOMOFO = 0x3
SORT_CHINESE_RADICALSTROKE = 0x4
SORT_KOREAN_KSC = 0x0
SORT_KOREAN_UNICODE = 0x1
SORT_GERMAN_PHONE_BOOK = 0x1
SORT_HUNGARIAN_DEFAULT = 0x0
SORT_HUNGARIAN_TECHNICAL = 0x1
SORT_GEORGIAN_TRADITIONAL = 0x0
SORT_GEORGIAN_MODERN = 0x1


def MAKELANGID(p, s):
    return (s << 10) | p


def MAKELCID(lgid, srtid):
    return (srtid << 16) | lgid


LOCALE_CUSTOM_DEFAULT = MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_CUSTOM_DEFAULT), SORT_DEFAULT)
LOCALE_CUSTOM_UNSPECIFIED = MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_CUSTOM_UNSPECIFIED), SORT_DEFAULT)
LOCALE_CUSTOM_UI_DEFAULT = MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_UI_CUSTOM_DEFAULT), SORT_DEFAULT)
LOCALE_NEUTRAL = MAKELCID(MAKELANGID(LANG_NEUTRAL, SUBLANG_NEUTRAL), SORT_DEFAULT)
LOCALE_INVARIANT = MAKELCID(MAKELANGID(LANG_INVARIANT, SUBLANG_NEUTRAL), SORT_DEFAULT)

LOCALE_TRANSIENT_KEYBOARD1 = 0x2000
LOCALE_TRANSIENT_KEYBOARD2 = 0x2400
LOCALE_TRANSIENT_KEYBOARD3 = 0x2800
LOCALE_TRANSIENT_KEYBOARD4 = 0x2C00

LOCALE_UNASSIGNED_LCID = LOCALE_CUSTOM_UNSPECIFIED

STATUS_WAIT_0 = 0x00000000
STATUS_ABANDONED_WAIT_0 = 0x00000080
STATUS_USER_APC = 0x000000C0
STATUS_TIMEOUT = 0x00000102
STATUS_PENDING = 0x00000103
DBG_EXCEPTION_HANDLED = 0x00010001
DBG_CONTINUE = 0x00010002
STATUS_SEGMENT_NOTIFICATION = 0x40000005
STATUS_FATAL_APP_EXIT = 0x40000015
DBG_REPLY_LATER = 0x40010001
DBG_TERMINATE_THREAD = 0x40010003
DBG_TERMINATE_PROCESS = 0x40010004
DBG_CONTROL_C = 0x40010005
DBG_PRINTEXCEPTION_C = 0x40010006
DBG_RIPEXCEPTION = 0x40010007
DBG_CONTROL_BREAK = 0x40010008
DBG_COMMAND_EXCEPTION = 0x40010009
DBG_PRINTEXCEPTION_WIDE_C = 0x4001000A
STATUS_GUARD_PAGE_VIOLATION = 0x80000001
STATUS_DATATYPE_MISALIGNMENT = 0x80000002
STATUS_BREAKPOINT = 0x80000003
STATUS_SINGLE_STEP = 0x80000004
STATUS_LONGJUMP = 0x80000026
STATUS_UNWIND_CONSOLIDATE = 0x80000029
DBG_EXCEPTION_NOT_HANDLED = 0x80010001
STATUS_ACCESS_VIOLATION = 0xC0000005
STATUS_IN_PAGE_ERROR = 0xC0000006
STATUS_INVALID_HANDLE = 0xC0000008
STATUS_INVALID_PARAMETER = 0xC000000D
STATUS_NO_MEMORY = 0xC0000017
STATUS_ILLEGAL_INSTRUCTION = 0xC000001D
STATUS_NONCONTINUABLE_EXCEPTION = 0xC0000025
STATUS_INVALID_DISPOSITION = 0xC0000026
STATUS_ARRAY_BOUNDS_EXCEEDED = 0xC000008C
STATUS_FLOAT_DENORMAL_OPERAND = 0xC000008D
STATUS_FLOAT_DIVIDE_BY_ZERO = 0xC000008E
STATUS_FLOAT_INEXACT_RESULT = 0xC000008F
STATUS_FLOAT_INVALID_OPERATION = 0xC0000090
STATUS_FLOAT_OVERFLOW = 0xC0000091
STATUS_FLOAT_STACK_CHECK = 0xC0000092
STATUS_FLOAT_UNDERFLOW = 0xC0000093
STATUS_INTEGER_DIVIDE_BY_ZERO = 0xC0000094
STATUS_INTEGER_OVERFLOW = 0xC0000095
STATUS_PRIVILEGED_INSTRUCTION = 0xC0000096
STATUS_STACK_OVERFLOW = 0xC00000FD
STATUS_DLL_NOT_FOUND = 0xC0000135
STATUS_ORDINAL_NOT_FOUND = 0xC0000138
STATUS_ENTRYPOINT_NOT_FOUND = 0xC0000139
STATUS_CONTROL_C_EXIT = 0xC000013A
STATUS_DLL_INIT_FAILED = 0xC0000142
STATUS_FLOAT_MULTIPLE_FAULTS = 0xC00002B4
STATUS_FLOAT_MULTIPLE_TRAPS = 0xC00002B5
STATUS_REG_NAT_CONSUMPTION = 0xC00002C9
STATUS_HEAP_CORRUPTION = 0xC0000374
STATUS_STACK_BUFFER_OVERRUN = 0xC0000409
STATUS_INVALID_CRUNTIME_PARAMETER = 0xC0000417
STATUS_ASSERTION_FAILURE = 0xC0000420
STATUS_ENCLAVE_VIOLATION = 0xC00004A2
STATUS_SXS_EARLY_DEACTIVATION = 0xC015000F
STATUS_SXS_INVALID_DEACTIVATION = 0xC0150010

MAXIMUM_WAIT_OBJECTS = 64

MAXIMUM_SUSPEND_COUNT = MAXCHAR


class XSAVE_CET_U_FORMAT(Structure):
    _fields_ = [
        ("Ia32CetUMsr", DWORD64),
        ("Ia32Pl3SspMsr", DWORD64),
    ]


class XSAVE_AREA_HEADER(Structure):
    _fields_ = [
        ("Mask", DWORD64),
        ("CompactionMask", DWORD64),
        ("Reserved2", DWORD64 * 6),
    ]


class XSAVE_AREA(Structure):
    _fields_ = [
        ("LegacyState", XSAVE_FORMAT),
        ("Header", XSAVE_AREA_HEADER),
    ]


class XSTATE_CONTEXT(Structure):
    _fields_ = [
        ("Mask", DWORD64),
        ("Length", DWORD),
        ("Reserved1", DWORD),
        ("Area", POINTER(XSAVE_AREA)),
        # if defined(_X86_)
        ("Reserved2", DWORD),
        # endif
        ("Buffer", PVOID),
        # if defined(_X86_)
        ("Reserved3", DWORD),
        # endif
    ]


class _SCOPE_RECORD(Structure):
    _fields_ = [
        ("BeginAddress", DWORD),
        ("EndAddress", DWORD),
        ("HandlerAddress", DWORD),
        ("JumpTarget", DWORD),
    ]


class SCOPE_TABLE_AMD64(Structure):
    _fields_ = [
        ("Count", DWORD),
        ("ScopeRecord", _SCOPE_RECORD * 1),
    ]


_MM_HINT_T0 = 1
_MM_HINT_T1 = 2
_MM_HINT_T2 = 3
_MM_HINT_NTA = 0

PF_TEMPORAL_LEVEL_1 = _MM_HINT_T0
PF_TEMPORAL_LEVEL_2 = _MM_HINT_T1
PF_TEMPORAL_LEVEL_3 = _MM_HINT_T2
PF_NON_TEMPORAL_LEVEL_ALL = _MM_HINT_NTA

EXCEPTION_READ_FAULT = 0
EXCEPTION_WRITE_FAULT = 1
EXCEPTION_EXECUTE_FAULT = 8

CONTEXT_AMD64 = 0x00100000
CONTEXT_CONTROL = CONTEXT_AMD64 | 0x00000001
CONTEXT_INTEGER = CONTEXT_AMD64 | 0x00000002
CONTEXT_SEGMENTS = CONTEXT_AMD64 | 0x00000004
CONTEXT_FLOATING_POINT = CONTEXT_AMD64 | 0x00000008
CONTEXT_DEBUG_REGISTERS = CONTEXT_AMD64 | 0x00000010
CONTEXT_FULL = CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_FLOATING_POINT
CONTEXT_ALL = CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_SEGMENTS | CONTEXT_FLOATING_POINT | CONTEXT_DEBUG_REGISTERS
CONTEXT_XSTATE = CONTEXT_AMD64 | 0x00000040
CONTEXT_KERNEL_DEBUGGER = 0x04000000
CONTEXT_EXCEPTION_ACTIVE = 0x08000000
CONTEXT_SERVICE_ACTIVE = 0x10000000
CONTEXT_EXCEPTION_REQUEST = 0x40000000
CONTEXT_EXCEPTION_REPORTING = 0x80000000

INITIAL_MXCSR = 0x1F80
INITIAL_FPCSR = 0x027F

RUNTIME_FUNCTION_INDIRECT = 0x1

RUNTIME_FUNCTION = _IMAGE_RUNTIME_FUNCTION_ENTRY
SCOPE_TABLE = SCOPE_TABLE_AMD64

UNW_FLAG_NHANDLER = 0x0
UNW_FLAG_EHANDLER = 0x1
UNW_FLAG_UHANDLER = 0x2
UNW_FLAG_CHAININFO = 0x4
UNW_FLAG_NO_EPILOGUE = 0x80000000

UNWIND_HISTORY_TABLE_SIZE = 12


class UNWIND_HISTORY_TABLE_ENTRY(Structure):
    _fields_ = [
        ("ImageBase", DWORD64),
        ("FunctionEntry", POINTER(RUNTIME_FUNCTION)),
    ]


class UNWIND_HISTORY_TABLE(Structure):
    _fields_ = [
        ("Count", DWORD),
        ("LocalHint", BYTE),
        ("GlobalHint", BYTE),
        ("Search", BYTE),
        ("Once", BYTE),
        ("LowAddress", DWORD64),
        ("HighAddress", DWORD64),
        ("Entry", UNWIND_HISTORY_TABLE_ENTRY * UNWIND_HISTORY_TABLE_SIZE),
    ]


class DISPATCHER_CONTEXT(Structure):
    _fields_ = [
        ("ControlPc", DWORD64),
        ("ImageBase", DWORD64),
        ("FunctionEntry", POINTER(RUNTIME_FUNCTION)),
        ("EstablisherFrame", DWORD64),
        ("TargetIp", DWORD64),
        ("ContextRecord", POINTER(CONTEXT)),
        ("LanguageHandler", POINTER(EXCEPTION_ROUTINE)),
        ("HandlerData", PVOID),
        ("HistoryTable", POINTER(UNWIND_HISTORY_TABLE)),
        ("ScopeIndex", DWORD),
        ("Fill0", DWORD),
    ]


class _KNONVOLATILE_CONTEXT_POINTERS_STRUCT1(Union):
    _fields_ = [
        ("Xmm0", POINTER(M128A)),
        ("Xmm1", POINTER(M128A)),
        ("Xmm2", POINTER(M128A)),
        ("Xmm3", POINTER(M128A)),
        ("Xmm4", POINTER(M128A)),
        ("Xmm5", POINTER(M128A)),
        ("Xmm6", POINTER(M128A)),
        ("Xmm7", POINTER(M128A)),
        ("Xmm8", POINTER(M128A)),
        ("Xmm9", POINTER(M128A)),
        ("Xmm10", POINTER(M128A)),
        ("Xmm11", POINTER(M128A)),
        ("Xmm12", POINTER(M128A)),
        ("Xmm13", POINTER(M128A)),
        ("Xmm14", POINTER(M128A)),
        ("Xmm15", POINTER(M128A)),
    ]


class _KNONVOLATILE_CONTEXT_POINTERS_UNION1(Union):
    _anonymous_ = ("u",)
    _fields_ = [
        ("FloatingContext", POINTER(M128A) * 16),
        ("u", _KNONVOLATILE_CONTEXT_POINTERS_STRUCT1),
    ]


class _KNONVOLATILE_CONTEXT_POINTERS_STRUCT2(Structure):
    _fields_ = [
        ("Rax", PDWORD64),
        ("Rcx", PDWORD64),
        ("Rdx", PDWORD64),
        ("Rbx", PDWORD64),
        ("Rsp", PDWORD64),
        ("Rbp", PDWORD64),
        ("Rsi", PDWORD64),
        ("Rdi", PDWORD64),
        ("R8", PDWORD64),
        ("R9", PDWORD64),
        ("R10", PDWORD64),
        ("R11", PDWORD64),
        ("R12", PDWORD64),
        ("R13", PDWORD64),
        ("R14", PDWORD64),
        ("R15", PDWORD64),
    ]


class _KNONVOLATILE_CONTEXT_POINTERS_UNION2(Union):
    _anonymous_ = ("u",)
    _fields_ = [
        ("IntegerContext", PDWORD64 * 16),
        ("u", _KNONVOLATILE_CONTEXT_POINTERS_STRUCT2),
    ]


class KNONVOLATILE_CONTEXT_POINTERS(Structure):
    _anonymous_ = ("u", "v")
    _fields_ = [
        ("u", _KNONVOLATILE_CONTEXT_POINTERS_UNION1),
        ("v", _KNONVOLATILE_CONTEXT_POINTERS_UNION2),
    ]


class SCOPE_TABLE_ARM(Structure):
    _fields_ = [
        ("Count", DWORD),
        ("ScopeRecord", _SCOPE_RECORD * 1),
    ]


PF_TEMPORAL_LEVEL_1 = 0
PF_TEMPORAL_LEVEL_2 = 1
PF_TEMPORAL_LEVEL_3 = 2
PF_NON_TEMPORAL_LEVEL_ALL = 3

EXCEPTION_READ_FAULT = 0
EXCEPTION_WRITE_FAULT = 1
EXCEPTION_EXECUTE_FAULT = 8

CONTEXT_ARM = 0x00200000
CONTEXT_CONTROL = CONTEXT_ARM | 0x1
CONTEXT_INTEGER = CONTEXT_ARM | 0x2
CONTEXT_FLOATING_POINT = CONTEXT_ARM | 0x4
CONTEXT_DEBUG_REGISTERS = CONTEXT_ARM | 0x8
CONTEXT_FULL = CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_FLOATING_POINT
CONTEXT_ALL = CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_FLOATING_POINT | CONTEXT_DEBUG_REGISTERS
CONTEXT_EXCEPTION_ACTIVE = 0x8000000
CONTEXT_SERVICE_ACTIVE = 0x10000000
CONTEXT_EXCEPTION_REQUEST = 0x40000000
CONTEXT_EXCEPTION_REPORTING = 0x80000000
CONTEXT_UNWOUND_TO_CALL = 0x20000000

INITIAL_CPSR = 0x10
INITIAL_FPSCR = 0

ARM_MAX_BREAKPOINTS = 8
ARM_MAX_WATCHPOINTS = 1


class NEON128(Structure):
    _fields_ = [
        ("Low", ULONGLONG),
        ("High", LONGLONG),
    ]


class _CONTEXT_UNION(Union):
    _fields_ = [
        ("Q", NEON128 * 16),
        ("D", ULONGLONG * 32),
        ("S", DWORD * 32),
    ]


class CONTEXT(Structure):
    _anonymous_ = ("u",)
    _fields_ = [
        ("ContextFlags", DWORD),
        ("R0", DWORD),
        ("R1", DWORD),
        ("R2", DWORD),
        ("R3", DWORD),
        ("R4", DWORD),
        ("R5", DWORD),
        ("R6", DWORD),
        ("R7", DWORD),
        ("R8", DWORD),
        ("R9", DWORD),
        ("R10", DWORD),
        ("R11", DWORD),
        ("R12", DWORD),
        ("Sp", DWORD),
        ("Lr", DWORD),
        ("Pc", DWORD),
        ("Cpsr", DWORD),
        ("Fpscr", DWORD),
        ("Padding", DWORD),
        ("u", _CONTEXT_UNION),
        ("Bvr", DWORD * ARM_MAX_BREAKPOINTS),
        ("Bcr", DWORD * ARM_MAX_BREAKPOINTS),
        ("Wvr", DWORD * ARM_MAX_WATCHPOINTS),
        ("Wcr", DWORD * ARM_MAX_WATCHPOINTS),
        ("Padding2", DWORD * 2),
    ]


UNW_FLAG_NHANDLER = 0x0
UNW_FLAG_EHANDLER = 0x1
UNW_FLAG_UHANDLER = 0x2

UNWIND_HISTORY_TABLE_SIZE = 12

"""
class UNWIND_HISTORY_TABLE_ENTRY(Structure):
	_fields_ = [
		 ("ImageBase", DWORD),
		 ("FunctionEntry", PRUNTIME_FUNCTION),
	]

class UNWIND_HISTORY_TABLE(Structure):
	_fields_ = [
		 ("Count", DWORD),
		 ("LocalHint", BYTE),
		 ("GlobalHint", BYTE),
		 ("Search", BYTE),
		 ("Once", BYTE),
		 ("LowAddress", DWORD),
		 ("HighAddress", DWORD),
		 ("Entry", UNWIND_HISTORY_TABLE_ENTRY*UNWIND_HISTORY_TABLE_SIZE),
	]

typedef struct _DISPATCHER_CONTEXT {
 ("ControlPc", DWORD),
 ("ImageBase", DWORD),
 ("FunctionEntry", PRUNTIME_FUNCTION),
 ("EstablisherFrame", DWORD),
 ("TargetPc", DWORD),
 ("ContextRecord", PCONTEXT),
 ("LanguageHandler", PEXCEPTION_ROUTINE),
 ("HandlerData", PVOID),
 ("HistoryTable", PUNWIND_HISTORY_TABLE),
 ("ScopeIndex", DWORD),
 ("ControlPcIsUnwound", BOOLEAN),
 ("NonVolatileRegisters", PBYTE),
 ("Reserved", DWORD),
} DISPATCHER_CONTEXT, *PDISPATCHER_CONTEXT

typedef struct _KNONVOLATILE_CONTEXT_POINTERS {

 ("R4", PDWORD),
 ("R5", PDWORD),
 ("R6", PDWORD),
 ("R7", PDWORD),
 ("R8", PDWORD),
 ("R9", PDWORD),
 ("R10", PDWORD),
 ("R11", PDWORD),
 ("Lr", PDWORD),

 ("D8", PULONGLONG),
 ("D9", PULONGLONG),
 ("D10", PULONGLONG),
 ("D11", PULONGLONG),
 ("D12", PULONGLONG),
 ("D13", PULONGLONG),
 ("D14", PULONGLONG),
 ("D15", PULONGLONG),

} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS

def ARM64_SYSREG(op0, op1, crn, crm, op2):
	return ((op0 & 1) << 14) | ((op1 & 7) << 11) | ((crn & 15) << 7) | ((crm & 15) << 3) | ((op2 & 7) << 0)

def ARM64_SYSINSTR(op0, op1, crn, crm, op2):
	return ((op1 & 7) << 11) | ((crn & 15) << 7) | ((crm & 15) << 3) | ((op2 & 7) << 0)

ARM64_SYSREG_OP1(_Reg_) = ((_Reg_) >> 11) & 7
ARM64_SYSREG_CRN(_Reg_) = ((_Reg_) >> 7) & 15
ARM64_SYSREG_CRM(_Reg_) = ((_Reg_) >> 3) & 15
ARM64_SYSREG_OP2(_Reg_) = (_Reg_) & 7

ARM64_CNTVCT ARM64_SYSREG(3,3,14, 0,2)
ARM64_PMCCNTR_EL0 ARM64_SYSREG(3,3, 9,13,0)
ARM64_PMSELR_EL0 ARM64_SYSREG(3,3, 9,12,5)
ARM64_PMXEVCNTR_EL0 ARM64_SYSREG(3,3, 9,13,2)
ARM64_PMXEVCNTRn_EL0(n) ARM64_SYSREG(3,3,14, 8+(n/8), n%8)
ARM64_TPIDR_EL0 ARM64_SYSREG(3,3,13, 0,2)
ARM64_TPIDRRO_EL0 ARM64_SYSREG(3,3,13, 0,3)
ARM64_TPIDR_EL1 ARM64_SYSREG(3,0,13, 0,4)

PF_TEMPORAL_LEVEL_1 0
PF_TEMPORAL_LEVEL_2 1
PF_TEMPORAL_LEVEL_3 2
PF_NON_TEMPORAL_LEVEL_ALL 3

EXCEPTION_READ_FAULT 0
EXCEPTION_WRITE_FAULT 1
EXCEPTION_EXECUTE_FAULT 8

INITIAL_CPSR 0x10
INITIAL_FPSCR 0

CONTEXT_ARM64 0x00400000

CONTEXT_ARM64_CONTROL = CONTEXT_ARM64 | 0x1
CONTEXT_ARM64_INTEGER = CONTEXT_ARM64 | 0x2
CONTEXT_ARM64_FLOATING_POINT = CONTEXT_ARM64 | 0x4
CONTEXT_ARM64_DEBUG_REGISTERS = CONTEXT_ARM64 | 0x8
CONTEXT_ARM64_X18 = CONTEXT_ARM64 | 0x10

CONTEXT_ARM64_FULL = CONTEXT_ARM64_CONTROL | CONTEXT_ARM64_INTEGER | CONTEXT_ARM64_FLOATING_POINT
CONTEXT_ARM64_ALL = CONTEXT_ARM64_CONTROL | CONTEXT_ARM64_INTEGER | CONTEXT_ARM64_FLOATING_POINT | CONTEXT_ARM64_DEBUG_REGISTERS | CONTEXT_ARM64_X18

CONTEXT_CONTROL CONTEXT_ARM64_CONTROL
CONTEXT_INTEGER CONTEXT_ARM64_INTEGER
CONTEXT_FLOATING_POINT CONTEXT_ARM64_FLOATING_POINT
CONTEXT_DEBUG_REGISTERS CONTEXT_ARM64_DEBUG_REGISTERS
CONTEXT_FULL CONTEXT_ARM64_FULL
CONTEXT_ALL CONTEXT_ARM64_ALL

CONTEXT_EXCEPTION_ACTIVE 0x08000000
CONTEXT_SERVICE_ACTIVE 0x10000000
CONTEXT_EXCEPTION_REQUEST 0x40000000
CONTEXT_EXCEPTION_REPORTING 0x80000000

CONTEXT_UNWOUND_TO_CALL 0x20000000
CONTEXT_RET_TO_GUEST 0x04000000

ARM64_MAX_BREAKPOINTS 8
ARM64_MAX_WATCHPOINTS 2

class ARM64_NT_NEON128(Structure):
 struct {
 ("Low", ULONGLONG),
 ("High", LONGLONG),
 } DUMMYSTRUCTNAME
 ("D", double),[2]
 ("S", float),[4]
 ("H", WORD),[8]
 ("B", BYTE),[16]

class ARM64_NT_CONTEXT(Structure):

 ("ContextFlags", DWORD),

 ("Cpsr", DWORD),
 union {
 struct {
 ("X0", DWORD64),
 ("X1", DWORD64),
 ("X2", DWORD64),
 ("X3", DWORD64),
 ("X4", DWORD64),
 ("X5", DWORD64),
 ("X6", DWORD64),
 ("X7", DWORD64),
 ("X8", DWORD64),
 ("X9", DWORD64),
 ("X10", DWORD64),
 ("X11", DWORD64),
 ("X12", DWORD64),
 ("X13", DWORD64),
 ("X14", DWORD64),
 ("X15", DWORD64),
 ("X16", DWORD64),
 ("X17", DWORD64),
 ("X18", DWORD64),
 ("X19", DWORD64),
 ("X20", DWORD64),
 ("X21", DWORD64),
 ("X22", DWORD64),
 ("X23", DWORD64),
 ("X24", DWORD64),
 ("X25", DWORD64),
 ("X26", DWORD64),
 ("X27", DWORD64),
 ("X28", DWORD64),
 ("Fp", DWORD64),
 ("Lr", DWORD64),
 } DUMMYSTRUCTNAME
 ("X", DWORD64),[31]
 } DUMMYUNIONNAME
 ("Sp", DWORD64),
 ("Pc", DWORD64),

 ("V", ARM64_NT_NEON128),[32]
 ("Fpcr", DWORD),
 ("Fpsr", DWORD),

 ("Bcr", DWORD),[ARM64_MAX_BREAKPOINTS]
 ("Bvr", DWORD64),[ARM64_MAX_BREAKPOINTS]
 ("Wcr", DWORD),[ARM64_MAX_WATCHPOINTS]
 ("Wvr", DWORD64),[ARM64_MAX_WATCHPOINTS]
} ARM64_NT_CONTEXT, *PARM64_NT_CONTEXT

UNW_FLAG_NHANDLER 0x0
UNW_FLAG_EHANDLER 0x1
UNW_FLAG_UHANDLER 0x2

UNWIND_HISTORY_TABLE_SIZE 12

class UNWIND_HISTORY_TABLE_ENTRY(Structure):
 ("ImageBase", DWORD64),
 ("FunctionEntry", PARM64_RUNTIME_FUNCTION),

class UNWIND_HISTORY_TABLE(Structure):
 ("Count", DWORD),
 ("LocalHint", BYTE),
 ("GlobalHint", BYTE),
 ("Search", BYTE),
 ("Once", BYTE),
 ("LowAddress", DWORD64),
 ("HighAddress", DWORD64),
 ("Entry", UNWIND_HISTORY_TABLE_ENTRY),[UNWIND_HISTORY_TABLE_SIZE]

class DISPATCHER_CONTEXT_ARM64(Structure):
 ("ControlPc", ULONG_PTR),
 ("ImageBase", ULONG_PTR),
 ("FunctionEntry", PARM64_RUNTIME_FUNCTION),
 ("EstablisherFrame", ULONG_PTR),
 ("TargetPc", ULONG_PTR),
 ("ContextRecord", PARM64_NT_CONTEXT),
 ("LanguageHandler", PEXCEPTION_ROUTINE),
 ("HandlerData", PVOID),
 ("HistoryTable", PUNWIND_HISTORY_TABLE),
 ("ScopeIndex", DWORD),
 ("ControlPcIsUnwound", BOOLEAN),
 ("NonVolatileRegisters", PBYTE),

class KNONVOLATILE_CONTEXT_POINTERS_ARM64(Structure):

 ("X19", PDWORD64),
 ("X20", PDWORD64),
 ("X21", PDWORD64),
 ("X22", PDWORD64),
 ("X23", PDWORD64),
 ("X24", PDWORD64),
 ("X25", PDWORD64),
 ("X26", PDWORD64),
 ("X27", PDWORD64),
 ("X28", PDWORD64),
 ("Fp", PDWORD64),
 ("Lr", PDWORD64),

 ("D8", PDWORD64),
 ("D9", PDWORD64),
 ("D10", PDWORD64),
 ("D11", PDWORD64),
 ("D12", PDWORD64),
 ("D13", PDWORD64),
 ("D14", PDWORD64),
 ("D15", PDWORD64),

_MM_HINT_T0 1
_MM_HINT_T1 2
_MM_HINT_T2 3
_MM_HINT_NTA 0

PF_TEMPORAL_LEVEL_1 _MM_HINT_T0
PF_TEMPORAL_LEVEL_2 _MM_HINT_T1
PF_TEMPORAL_LEVEL_3 _MM_HINT_T2
PF_NON_TEMPORAL_LEVEL_ALL _MM_HINT_NTA

EXCEPTION_READ_FAULT 0
EXCEPTION_WRITE_FAULT 1
EXCEPTION_EXECUTE_FAULT 8

SIZE_OF_80387_REGISTERS 80

CONTEXT_i386 0x00010000
CONTEXT_i486 0x00010000

CONTEXT_CONTROL = CONTEXT_i386 | 0x00000001
CONTEXT_INTEGER = CONTEXT_i386 | 0x00000002
CONTEXT_SEGMENTS = CONTEXT_i386 | 0x00000004
CONTEXT_FLOATING_POINT = CONTEXT_i386 | 0x00000008
CONTEXT_DEBUG_REGISTERS = CONTEXT_i386 | 0x00000010
CONTEXT_EXTENDED_REGISTERS = CONTEXT_i386 | 0x00000020

CONTEXT_FULL = CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_SEGMENTS

CONTEXT_ALL = CONTEXT_CONTROL | CONTEXT_INTEGER | CONTEXT_SEGMENTS | CONTEXT_FLOATING_POINT | CONTEXT_DEBUG_REGISTERS | CONTEXT_EXTENDED_REGISTERS

CONTEXT_XSTATE = CONTEXT_i386 | 0x00000040

CONTEXT_EXCEPTION_ACTIVE 0x08000000
CONTEXT_SERVICE_ACTIVE 0x10000000
CONTEXT_EXCEPTION_REQUEST 0x40000000
CONTEXT_EXCEPTION_REPORTING 0x80000000

class FLOATING_SAVE_AREA(Structure):
 ("ControlWord", DWORD),
 ("StatusWord", DWORD),
 ("TagWord", DWORD),
 ("ErrorOffset", DWORD),
 ("ErrorSelector", DWORD),
 ("DataOffset", DWORD),
 ("DataSelector", DWORD),
 ("RegisterArea", BYTE),[SIZE_OF_80387_REGISTERS]
 ("Spare0", DWORD),

MAXIMUM_SUPPORTED_EXTENSION 512

class CONTEXT(Structure):
	_pack_ = 1

	("ContextFlags", DWORD),

	("Dr0", DWORD),
	("Dr1", DWORD),
	("Dr2", DWORD),
	("Dr3", DWORD),
	("Dr6", DWORD),
	("Dr7", DWORD),
	("FloatSave", FLOATING_SAVE_AREA),
	("SegGs", DWORD),
	("SegFs", DWORD),
	("SegEs", DWORD),
	("SegDs", DWORD),
	("Edi", DWORD),
	("Esi", DWORD),
	("Ebx", DWORD),
	("Edx", DWORD),
	("Ecx", DWORD),
	("Eax", DWORD),
	("Ebp", DWORD),
	("Eip", DWORD),
	("SegCs", DWORD),
	("EFlags", DWORD),
	("Esp", DWORD),
	("SegSs", DWORD),

	BYTE ExtendedRegisters[MAXIMUM_SUPPORTED_EXTENSION]

typedef struct _LDT_ENTRY {
 ("LimitLow", WORD),
 ("BaseLow", WORD),
 union {
 struct {
 ("BaseMid", BYTE),
 ("Flags1", BYTE),
 ("Flags2", BYTE),
 ("BaseHi", BYTE),
 } Bytes
 struct {
 ("BaseMid", DWORD), : 8
 ("Type", DWORD), : 5
 ("Dpl", DWORD), : 2
 ("Pres", DWORD), : 1
 ("LimitHi", DWORD), : 4
 ("Sys", DWORD), : 1
 ("Reserved_0", DWORD), : 1
 ("Default_Big", DWORD), : 1
 ("Granularity", DWORD), : 1
 ("BaseHi", DWORD), : 8
 } Bits
 } HighWord
} LDT_ENTRY, *PLDT_ENTRY

WOW64_CONTEXT_i386 0x00010000
WOW64_CONTEXT_i486 0x00010000

WOW64_CONTEXT_CONTROL = WOW64_CONTEXT_i386 | 0x00000001
WOW64_CONTEXT_INTEGER = WOW64_CONTEXT_i386 | 0x00000002
WOW64_CONTEXT_SEGMENTS = WOW64_CONTEXT_i386 | 0x00000004
WOW64_CONTEXT_FLOATING_POINT = WOW64_CONTEXT_i386 | 0x00000008
WOW64_CONTEXT_DEBUG_REGISTERS = WOW64_CONTEXT_i386 | 0x00000010
WOW64_CONTEXT_EXTENDED_REGISTERS = WOW64_CONTEXT_i386 | 0x00000020

WOW64_CONTEXT_FULL = WOW64_CONTEXT_CONTROL | WOW64_CONTEXT_INTEGER | WOW64_CONTEXT_SEGMENTS

WOW64_CONTEXT_ALL = WOW64_CONTEXT_CONTROL | WOW64_CONTEXT_INTEGER | WOW64_CONTEXT_SEGMENTS | WOW64_CONTEXT_FLOATING_POINT | WOW64_CONTEXT_DEBUG_REGISTERS | WOW64_CONTEXT_EXTENDED_REGISTERS

WOW64_CONTEXT_XSTATE = WOW64_CONTEXT_i386 | 0x00000040

WOW64_CONTEXT_EXCEPTION_ACTIVE 0x08000000
WOW64_CONTEXT_SERVICE_ACTIVE 0x10000000
WOW64_CONTEXT_EXCEPTION_REQUEST 0x40000000
WOW64_CONTEXT_EXCEPTION_REPORTING 0x80000000

WOW64_SIZE_OF_80387_REGISTERS 80

WOW64_MAXIMUM_SUPPORTED_EXTENSION 512

class WOW64_FLOATING_SAVE_AREA(Structure):
 ("ControlWord", DWORD),
 ("StatusWord", DWORD),
 ("TagWord", DWORD),
 ("ErrorOffset", DWORD),
 ("ErrorSelector", DWORD),
 ("DataOffset", DWORD),
 ("DataSelector", DWORD),
 ("RegisterArea", BYTE),[WOW64_SIZE_OF_80387_REGISTERS]
 ("Cr0NpxState", DWORD),

class WOW64_CONTEXT(Structure):

 ("ContextFlags", DWORD),

 ("Dr0", DWORD),
 ("Dr1", DWORD),
 ("Dr2", DWORD),
 ("Dr3", DWORD),
 ("Dr6", DWORD),
 ("Dr7", DWORD),
 ("FloatSave", WOW64_FLOATING_SAVE_AREA),
 ("SegGs", DWORD),
 ("SegFs", DWORD),
 ("SegEs", DWORD),
 ("SegDs", DWORD),
 ("Edi", DWORD),
 ("Esi", DWORD),
 ("Ebx", DWORD),
 ("Edx", DWORD),
 ("Ecx", DWORD),
 ("Eax", DWORD),
 ("Ebp", DWORD),
 ("Eip", DWORD),
 ("SegCs", DWORD),
 ("EFlags", DWORD),
 ("Esp", DWORD),
 ("SegSs", DWORD),

 ("ExtendedRegisters", BYTE),[WOW64_MAXIMUM_SUPPORTED_EXTENSION]

class WOW64_LDT_ENTRY(Structure):
 ("LimitLow", WORD),
 ("BaseLow", WORD),
 union {
 struct {
 ("BaseMid", BYTE),
 ("Flags1", BYTE),
 ("Flags2", BYTE),
 ("BaseHi", BYTE),
 } Bytes
 struct {
 ("BaseMid", DWORD), : 8
 ("Type", DWORD), : 5
 ("Dpl", DWORD), : 2
 ("Pres", DWORD), : 1
 ("LimitHi", DWORD), : 4
 ("Sys", DWORD), : 1
 ("Reserved_0", DWORD), : 1
 ("Default_Big", DWORD), : 1
 ("Granularity", DWORD), : 1
 ("BaseHi", DWORD), : 8
 } Bits
 } HighWord

class WOW64_DESCRIPTOR_TABLE_ENTRY(Structure):
 ("Selector", DWORD),
 ("Descriptor", WOW64_LDT_ENTRY),

EXCEPTION_NONCONTINUABLE 0x1
EXCEPTION_UNWINDING 0x2
EXCEPTION_EXIT_UNWIND 0x4
EXCEPTION_STACK_INVALID 0x8
EXCEPTION_NESTED_CALL 0x10
EXCEPTION_TARGET_UNWIND 0x20
EXCEPTION_COLLIDED_UNWIND 0x40

EXCEPTION_UNWIND = EXCEPTION_UNWINDING | EXCEPTION_EXIT_UNWIND | EXCEPTION_TARGET_UNWIND | EXCEPTION_COLLIDED_UNWIND

IS_UNWINDING(Flag) = (Flag & EXCEPTION_UNWIND) != 0
IS_DISPATCHING(Flag) = (Flag & EXCEPTION_UNWIND) == 0
IS_TARGET_UNWIND(Flag) = Flag & EXCEPTION_TARGET_UNWIND

class EXCEPTION_RECORD32(Structure):
 ("ExceptionCode", DWORD),
 ("ExceptionFlags", DWORD),
 ("ExceptionRecord", DWORD),
 ("ExceptionAddress", DWORD),
 ("NumberParameters", DWORD),
 ("ExceptionInformation", DWORD),[EXCEPTION_MAXIMUM_PARAMETERS]

class EXCEPTION_RECORD64(Structure):
 ("ExceptionCode", DWORD),
 ("ExceptionFlags", DWORD),
 ("ExceptionRecord", DWORD64),
 ("ExceptionAddress", DWORD64),
 ("NumberParameters", DWORD),
 ("__unusedAlignment", DWORD),
 ("ExceptionInformation", DWORD64),[EXCEPTION_MAXIMUM_PARAMETERS]

class EXCEPTION_POINTERS(Structure):
 ("ExceptionRecord", PEXCEPTION_RECORD),
 ("ContextRecord", PCONTEXT),
"""

ACCESS_MASK = DWORD

DELETE = 0x00010000
READ_CONTROL = 0x00020000
WRITE_DAC = 0x00040000
WRITE_OWNER = 0x00080000
SYNCHRONIZE = 0x00100000

STANDARD_RIGHTS_REQUIRED = 0x000F0000
STANDARD_RIGHTS_READ = READ_CONTROL
STANDARD_RIGHTS_WRITE = READ_CONTROL
STANDARD_RIGHTS_EXECUTE = READ_CONTROL
STANDARD_RIGHTS_ALL = 0x001F0000

SPECIFIC_RIGHTS_ALL = 0x0000FFFF
ACCESS_SYSTEM_SECURITY = 0x01000000
MAXIMUM_ALLOWED = 0x02000000

GENERIC_READ = 0x80000000
GENERIC_WRITE = 0x40000000
GENERIC_EXECUTE = 0x20000000
GENERIC_ALL = 0x10000000


class GENERIC_MAPPING(Structure):
    _fields_ = [
        ("GenericRead", ACCESS_MASK),
        ("GenericWrite", ACCESS_MASK),
        ("GenericExecute", ACCESS_MASK),
        ("GenericAll", ACCESS_MASK),
    ]


PGENERIC_MAPPING = POINTER(GENERIC_MAPPING)


class LUID_AND_ATTRIBUTES(Structure):
    _fields_ = [
        ("Luid", LUID),
        ("Attributes", DWORD),
    ]


SID_REVISION = 1
SID_MAX_SUB_AUTHORITIES = 15
SID_RECOMMENDED_SUB_AUTHORITIES = 1
SECURITY_MAX_SID_SIZE = sizeof(SID) - sizeof(DWORD) + (SID_MAX_SUB_AUTHORITIES * sizeof(DWORD))


def SECURITY_SID_SIZE(SubAuthorityCount_):
    return sizeof(SID) - sizeof(DWORD) + (SubAuthorityCount_) * sizeof(DWORD)


SECURITY_MAX_SID_STRING_CHARACTERS = 2 + 4 + 15 + (11 * SID_MAX_SUB_AUTHORITIES) + 1


class SE_SID(Union):
    _fields_ = [
        ("Sid", SID),
        ("Buffer", BYTE * SECURITY_MAX_SID_SIZE),
    ]


"""
class SID_NAME_USE(CEnum):
 SidTypeUser = 1,
 SidTypeGroup,
 SidTypeDomain,
 SidTypeAlias,
 SidTypeWellKnownGroup,
 SidTypeDeletedAccount,
 SidTypeInvalid,
 SidTypeUnknown,
 SidTypeComputer,
 SidTypeLabel,
 SidTypeLogonSession

typedef struct _SID_AND_ATTRIBUTES {
#ifdef MIDL_PASS
 ("Sid", PISID),
#else
 ("Sid", PSID),
#endif
 ("Attributes", DWORD),
 } SID_AND_ATTRIBUTES, * PSID_AND_ATTRIBUTES

typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[ANYSIZE_ARRAY]
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY

SID_HASH_SIZE 32
typedef ULONG_PTR SID_HASH_ENTRY, *PSID_HASH_ENTRY

typedef struct _SID_AND_ATTRIBUTES_HASH {
 ("SidCount", DWORD),
 ("SidAttr", PSID_AND_ATTRIBUTES),
 ("Hash", SID_HASH_ENTRY),[SID_HASH_SIZE]
} SID_AND_ATTRIBUTES_HASH, *PSID_AND_ATTRIBUTES_HASH



SECURITY_NULL_SID_AUTHORITY {0,0,0,0,0,0}
SECURITY_WORLD_SID_AUTHORITY {0,0,0,0,0,1}
SECURITY_LOCAL_SID_AUTHORITY {0,0,0,0,0,2}
SECURITY_CREATOR_SID_AUTHORITY {0,0,0,0,0,3}
SECURITY_NON_UNIQUE_AUTHORITY {0,0,0,0,0,4}
SECURITY_RESOURCE_MANAGER_AUTHORITY {0,0,0,0,0,9}

SECURITY_NULL_RID = 0x00000000
SECURITY_WORLD_RID = 0x00000000
SECURITY_LOCAL_RID = 0x00000000
SECURITY_LOCAL_LOGON_RID = 0x00000001

SECURITY_CREATOR_OWNER_RID = 0x00000000
SECURITY_CREATOR_GROUP_RID = 0x00000001

SECURITY_CREATOR_OWNER_SERVER_RID = 0x00000002
SECURITY_CREATOR_GROUP_SERVER_RID = 0x00000003

SECURITY_CREATOR_OWNER_RIGHTS_RID = 0x00000004

SECURITY_NT_AUTHORITY {0,0,0,0,0,5}

SECURITY_DIALUP_RID = 0x00000001
SECURITY_NETWORK_RID = 0x00000002
SECURITY_BATCH_RID = 0x00000003
SECURITY_INTERACTIVE_RID = 0x00000004
SECURITY_LOGON_IDS_RID = 0x00000005
SECURITY_LOGON_IDS_RID_COUNT = 3
SECURITY_SERVICE_RID = 0x00000006
SECURITY_ANONYMOUS_LOGON_RID = 0x00000007
SECURITY_PROXY_RID = 0x00000008
SECURITY_ENTERPRISE_CONTROLLERS_RID = 0x00000009
SECURITY_SERVER_LOGON_RID = SECURITY_ENTERPRISE_CONTROLLERS_RID
SECURITY_PRINCIPAL_SELF_RID = 0x0000000AL
SECURITY_AUTHENTICATED_USER_RID = 0x0000000BL
SECURITY_RESTRICTED_CODE_RID = 0x0000000CL
SECURITY_TERMINAL_SERVER_RID = 0x0000000DL
SECURITY_REMOTE_LOGON_RID = 0x0000000EL
SECURITY_THIS_ORGANIZATION_RID = 0x0000000FL
SECURITY_IUSER_RID = 0x00000011
SECURITY_LOCAL_SYSTEM_RID = 0x00000012
SECURITY_LOCAL_SERVICE_RID = 0x00000013
SECURITY_NETWORK_SERVICE_RID = 0x00000014

SECURITY_NT_NON_UNIQUE = 0x00000015
SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT = 3

SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID = 0x00000016

SECURITY_BUILTIN_DOMAIN_RID = 0x00000020
SECURITY_WRITE_RESTRICTED_CODE_RID = 0x00000021

SECURITY_PACKAGE_BASE_RID = 0x00000040
SECURITY_PACKAGE_RID_COUNT = 2
SECURITY_PACKAGE_NTLM_RID = 0x0000000AL
SECURITY_PACKAGE_SCHANNEL_RID = 0x0000000EL
SECURITY_PACKAGE_DIGEST_RID = 0x00000015

SECURITY_CRED_TYPE_BASE_RID = 0x00000041
SECURITY_CRED_TYPE_RID_COUNT = 2
SECURITY_CRED_TYPE_THIS_ORG_CERT_RID = 0x00000001

SECURITY_MIN_BASE_RID = 0x00000050

SECURITY_SERVICE_ID_BASE_RID = 0x00000050
SECURITY_SERVICE_ID_RID_COUNT = 6

SECURITY_RESERVED_ID_BASE_RID = 0x00000051

SECURITY_APPPOOL_ID_BASE_RID = 0x00000052
SECURITY_APPPOOL_ID_RID_COUNT = 6

SECURITY_VIRTUALSERVER_ID_BASE_RID = 0x00000053
SECURITY_VIRTUALSERVER_ID_RID_COUNT = 6

SECURITY_USERMODEDRIVERHOST_ID_BASE_RID = 0x00000054
SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT = 6

SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID = 0x00000055
SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT = 6

SECURITY_WMIHOST_ID_BASE_RID = 0x00000056
SECURITY_WMIHOST_ID_RID_COUNT = 6

SECURITY_TASK_ID_BASE_RID = 0x00000057

SECURITY_NFS_ID_BASE_RID = 0x00000058

SECURITY_COM_ID_BASE_RID = 0x00000059

SECURITY_WINDOW_MANAGER_BASE_RID = 0x0000005AL

SECURITY_RDV_GFX_BASE_RID = 0x0000005BL

SECURITY_DASHOST_ID_BASE_RID = 0x0000005CL
SECURITY_DASHOST_ID_RID_COUNT = 6

SECURITY_USERMANAGER_ID_BASE_RID = 0x0000005DL
SECURITY_USERMANAGER_ID_RID_COUNT = 6

SECURITY_WINRM_ID_BASE_RID = 0x0000005EL
SECURITY_WINRM_ID_RID_COUNT = 6

SECURITY_CCG_ID_BASE_RID = 0x0000005FL
SECURITY_UMFD_BASE_RID = 0x00000060

SECURITY_VIRTUALACCOUNT_ID_RID_COUNT = 6

SECURITY_MAX_BASE_RID = 0x0000006FL
SECURITY_MAX_ALWAYS_FILTERED = 0x000003E7
SECURITY_MIN_NEVER_FILTERED = 0x000003E8

SECURITY_OTHER_ORGANIZATION_RID = 0x000003E8

SECURITY_WINDOWSMOBILE_ID_BASE_RID = 0x00000070

SECURITY_INSTALLER_GROUP_CAPABILITY_BASE = 0x20
SECURITY_INSTALLER_GROUP_CAPABILITY_RID_COUNT = 9

SECURITY_INSTALLER_CAPABILITY_RID_COUNT = 10

SECURITY_LOCAL_ACCOUNT_RID = 0x00000071
SECURITY_LOCAL_ACCOUNT_AND_ADMIN_RID = 0x00000072

DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED = 0x000001F0
DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS = 0x000001F1
DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS = 0x000001F2

FOREST_USER_RID_MAX = 0x000001F3

DOMAIN_USER_RID_ADMIN = 0x000001F4
DOMAIN_USER_RID_GUEST = 0x000001F5
DOMAIN_USER_RID_KRBTGT = 0x000001F6
DOMAIN_USER_RID_DEFAULT_ACCOUNT = 0x000001F7
DOMAIN_USER_RID_WDAG_ACCOUNT = 0x000001F8

DOMAIN_USER_RID_MAX = 0x000003E7

DOMAIN_GROUP_RID_ADMINS = 0x00000200
DOMAIN_GROUP_RID_USERS = 0x00000201
DOMAIN_GROUP_RID_GUESTS = 0x00000202
DOMAIN_GROUP_RID_COMPUTERS = 0x00000203
DOMAIN_GROUP_RID_CONTROLLERS = 0x00000204
DOMAIN_GROUP_RID_CERT_ADMINS = 0x00000205
DOMAIN_GROUP_RID_SCHEMA_ADMINS = 0x00000206
DOMAIN_GROUP_RID_ENTERPRISE_ADMINS = 0x00000207
DOMAIN_GROUP_RID_POLICY_ADMINS = 0x00000208
DOMAIN_GROUP_RID_READONLY_CONTROLLERS = 0x00000209
DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS = 0x0000020AL
DOMAIN_GROUP_RID_CDC_RESERVED = 0x0000020CL
DOMAIN_GROUP_RID_PROTECTED_USERS = 0x0000020DL
DOMAIN_GROUP_RID_KEY_ADMINS = 0x0000020EL
DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS = 0x0000020FL

DOMAIN_ALIAS_RID_ADMINS = 0x00000220
DOMAIN_ALIAS_RID_USERS = 0x00000221
DOMAIN_ALIAS_RID_GUESTS = 0x00000222
DOMAIN_ALIAS_RID_POWER_USERS = 0x00000223

DOMAIN_ALIAS_RID_ACCOUNT_OPS = 0x00000224
DOMAIN_ALIAS_RID_SYSTEM_OPS = 0x00000225
DOMAIN_ALIAS_RID_PRINT_OPS = 0x00000226
DOMAIN_ALIAS_RID_BACKUP_OPS = 0x00000227

DOMAIN_ALIAS_RID_REPLICATOR = 0x00000228
DOMAIN_ALIAS_RID_RAS_SERVERS = 0x00000229
DOMAIN_ALIAS_RID_PREW2KCOMPACCESS = 0x0000022AL
DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS = 0x0000022BL
DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS = 0x0000022CL
DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS = 0x0000022DL

DOMAIN_ALIAS_RID_MONITORING_USERS = 0x0000022EL
DOMAIN_ALIAS_RID_LOGGING_USERS = 0x0000022FL
DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS = 0x00000230
DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS = 0x00000231
DOMAIN_ALIAS_RID_DCOM_USERS = 0x00000232
DOMAIN_ALIAS_RID_IUSERS = 0x00000238
DOMAIN_ALIAS_RID_CRYPTO_OPERATORS = 0x00000239
DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP = 0x0000023BL
DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP = 0x0000023CL
DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP = 0x0000023DL
DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP = 0x0000023EL
DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS = 0x0000023FL
DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS = 0x00000240
DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS = 0x00000241
DOMAIN_ALIAS_RID_HYPER_V_ADMINS = 0x00000242
DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS = 0x00000243
DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS = 0x00000244
DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT = 0x00000245
DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS = 0x00000246
DOMAIN_ALIAS_RID_DEVICE_OWNERS = 0x00000247

SECURITY_APP_PACKAGE_AUTHORITY {0,0,0,0,0,15}

SECURITY_APP_PACKAGE_BASE_RID = 0x00000002
SECURITY_BUILTIN_APP_PACKAGE_RID_COUNT = 2
SECURITY_APP_PACKAGE_RID_COUNT = 8
SECURITY_CAPABILITY_BASE_RID = 0x00000003
SECURITY_CAPABILITY_APP_RID = 0x000000400
SECURITY_BUILTIN_CAPABILITY_RID_COUNT = 2
SECURITY_CAPABILITY_RID_COUNT = 5
SECURITY_PARENT_PACKAGE_RID_COUNT = SECURITY_APP_PACKAGE_RID_COUNT
SECURITY_CHILD_PACKAGE_RID_COUNT = 12

SECURITY_BUILTIN_PACKAGE_ANY_PACKAGE 	(0x00000001L)
SECURITY_BUILTIN_PACKAGE_ANY_RESTRICTED_PACKAGE = 0x00000002

SECURITY_CAPABILITY_INTERNET_CLIENT = 0x00000001
SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER = 0x00000002
SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER = 0x00000003
SECURITY_CAPABILITY_PICTURES_LIBRARY = 0x00000004
SECURITY_CAPABILITY_VIDEOS_LIBRARY = 0x00000005
SECURITY_CAPABILITY_MUSIC_LIBRARY = 0x00000006
SECURITY_CAPABILITY_DOCUMENTS_LIBRARY = 0x00000007
SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION = 0x00000008
SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES = 0x00000009
SECURITY_CAPABILITY_REMOVABLE_STORAGE = 0x0000000AL
SECURITY_CAPABILITY_APPOINTMENTS = 0x0000000BL
SECURITY_CAPABILITY_CONTACTS = 0x0000000CL

SECURITY_CAPABILITY_INTERNET_EXPLORER = 0x00001000

SECURITY_MANDATORY_LABEL_AUTHORITY {0,0,0,0,0,16}
SECURITY_MANDATORY_UNTRUSTED_RID = 0x00000000
SECURITY_MANDATORY_LOW_RID = 0x00001000
SECURITY_MANDATORY_MEDIUM_RID = 0x00002000
SECURITY_MANDATORY_MEDIUM_PLUS_RID = SECURITY_MANDATORY_MEDIUM_RID + 0x100
SECURITY_MANDATORY_HIGH_RID = 0x00003000
SECURITY_MANDATORY_SYSTEM_RID = 0x00004000
SECURITY_MANDATORY_PROTECTED_PROCESS_RID = 0x00005000

SECURITY_MANDATORY_MAXIMUM_USER_RID SECURITY_MANDATORY_SYSTEM_RID

MANDATORY_LEVEL_TO_MANDATORY_RID(IL) = IL * 0x1000

SECURITY_SCOPED_POLICY_ID_AUTHORITY {0,0,0,0,0,17}

SECURITY_AUTHENTICATION_AUTHORITY {0,0,0,0,0,18}
SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT = 1
SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID = 0x00000001
SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID = 0x00000002
SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID = 0x00000003
SECURITY_AUTHENTICATION_KEY_TRUST_RID = 0x00000004
SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID = 0x00000005
SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID = 0x00000006

SECURITY_PROCESS_TRUST_AUTHORITY {0,0,0,0,0,19}
SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT = 2

SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID = 0x00000400
SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID = 0x00000200
SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID = 0x00000000

SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID = 0x00002000
SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID = 0x00001000
SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID = 0x00000800
SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID = 0x00000600
SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID = 0x00000400
SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID = 0x00000000

SECURITY_TRUSTED_INSTALLER_RID1 956008885
SECURITY_TRUSTED_INSTALLER_RID2 3418522649
SECURITY_TRUSTED_INSTALLER_RID3 1831038044
SECURITY_TRUSTED_INSTALLER_RID4 1853292631
SECURITY_TRUSTED_INSTALLER_RID5 2271478464

typedef enum {

 WinNullSid = 0,
 WinWorldSid = 1,
 WinLocalSid = 2,
 WinCreatorOwnerSid = 3,
 WinCreatorGroupSid = 4,
 WinCreatorOwnerServerSid = 5,
 WinCreatorGroupServerSid = 6,
 WinNtAuthoritySid = 7,
 WinDialupSid = 8,
 WinNetworkSid = 9,
 WinBatchSid = 10,
 WinInteractiveSid = 11,
 WinServiceSid = 12,
 WinAnonymousSid = 13,
 WinProxySid = 14,
 WinEnterpriseControllersSid = 15,
 WinSelfSid = 16,
 WinAuthenticatedUserSid = 17,
 WinRestrictedCodeSid = 18,
 WinTerminalServerSid = 19,
 WinRemoteLogonIdSid = 20,
 WinLogonIdsSid = 21,
 WinLocalSystemSid = 22,
 WinLocalServiceSid = 23,
 WinNetworkServiceSid = 24,
 WinBuiltinDomainSid = 25,
 WinBuiltinAdministratorsSid = 26,
 WinBuiltinUsersSid = 27,
 WinBuiltinGuestsSid = 28,
 WinBuiltinPowerUsersSid = 29,
 WinBuiltinAccountOperatorsSid = 30,
 WinBuiltinSystemOperatorsSid = 31,
 WinBuiltinPrintOperatorsSid = 32,
 WinBuiltinBackupOperatorsSid = 33,
 WinBuiltinReplicatorSid = 34,
 WinBuiltinPreWindows2000CompatibleAccessSid = 35,
 WinBuiltinRemoteDesktopUsersSid = 36,
 WinBuiltinNetworkConfigurationOperatorsSid = 37,
 WinAccountAdministratorSid = 38,
 WinAccountGuestSid = 39,
 WinAccountKrbtgtSid = 40,
 WinAccountDomainAdminsSid = 41,
 WinAccountDomainUsersSid = 42,
 WinAccountDomainGuestsSid = 43,
 WinAccountComputersSid = 44,
 WinAccountControllersSid = 45,
 WinAccountCertAdminsSid = 46,
 WinAccountSchemaAdminsSid = 47,
 WinAccountEnterpriseAdminsSid = 48,
 WinAccountPolicyAdminsSid = 49,
 WinAccountRasAndIasServersSid = 50,
 WinNTLMAuthenticationSid = 51,
 WinDigestAuthenticationSid = 52,
 WinSChannelAuthenticationSid = 53,
 WinThisOrganizationSid = 54,
 WinOtherOrganizationSid = 55,
 WinBuiltinIncomingForestTrustBuildersSid = 56,
 WinBuiltinPerfMonitoringUsersSid = 57,
 WinBuiltinPerfLoggingUsersSid = 58,
 WinBuiltinAuthorizationAccessSid = 59,
 WinBuiltinTerminalServerLicenseServersSid = 60,
 WinBuiltinDCOMUsersSid = 61,
 WinBuiltinIUsersSid = 62,
 WinIUserSid = 63,
 WinBuiltinCryptoOperatorsSid = 64,
 WinUntrustedLabelSid = 65,
 WinLowLabelSid = 66,
 WinMediumLabelSid = 67,
 WinHighLabelSid = 68,
 WinSystemLabelSid = 69,
 WinWriteRestrictedCodeSid = 70,
 WinCreatorOwnerRightsSid = 71,
 WinCacheablePrincipalsGroupSid = 72,
 WinNonCacheablePrincipalsGroupSid = 73,
 WinEnterpriseReadonlyControllersSid = 74,
 WinAccountReadonlyControllersSid = 75,
 WinBuiltinEventLogReadersGroup = 76,
 WinNewEnterpriseReadonlyControllersSid = 77,
 WinBuiltinCertSvcDComAccessGroup = 78,
 WinMediumPlusLabelSid = 79,
 WinLocalLogonSid = 80,
 WinConsoleLogonSid = 81,
 WinThisOrganizationCertificateSid = 82,
 WinApplicationPackageAuthoritySid = 83,
 WinBuiltinAnyPackageSid = 84,
 WinCapabilityInternetClientSid = 85,
 WinCapabilityInternetClientServerSid = 86,
 WinCapabilityPrivateNetworkClientServerSid = 87,
 WinCapabilityPicturesLibrarySid = 88,
 WinCapabilityVideosLibrarySid = 89,
 WinCapabilityMusicLibrarySid = 90,
 WinCapabilityDocumentsLibrarySid = 91,
 WinCapabilitySharedUserCertificatesSid = 92,
 WinCapabilityEnterpriseAuthenticationSid = 93,
 WinCapabilityRemovableStorageSid = 94,
 WinBuiltinRDSRemoteAccessServersSid = 95,
 WinBuiltinRDSEndpointServersSid = 96,
 WinBuiltinRDSManagementServersSid = 97,
 WinUserModeDriversSid = 98,
 WinBuiltinHyperVAdminsSid = 99,
 WinAccountCloneableControllersSid = 100,
 WinBuiltinAccessControlAssistanceOperatorsSid = 101,
 WinBuiltinRemoteManagementUsersSid = 102,
 WinAuthenticationAuthorityAssertedSid = 103,
 WinAuthenticationServiceAssertedSid = 104,
 WinLocalAccountSid = 105,
 WinLocalAccountAndAdministratorSid = 106,
 WinAccountProtectedUsersSid = 107,
 WinCapabilityAppointmentsSid = 108,
 WinCapabilityContactsSid = 109,
 WinAccountDefaultSystemManagedSid = 110,
 WinBuiltinDefaultSystemManagedGroupSid = 111,
 WinBuiltinStorageReplicaAdminsSid = 112,
 WinAccountKeyAdminsSid = 113,
 WinAccountEnterpriseKeyAdminsSid = 114,
 WinAuthenticationKeyTrustSid = 115,
 WinAuthenticationKeyPropertyMFASid = 116,
 WinAuthenticationKeyPropertyAttestationSid = 117,
 WinAuthenticationFreshKeyAuthSid = 118,
 WinBuiltinDeviceOwnersSid = 119,
} WELL_KNOWN_SID_TYPE

SYSTEM_LUID { 0x3e7, 0x0 }
ANONYMOUS_LOGON_LUID { 0x3e6, 0x0 }
LOCALSERVICE_LUID { 0x3e5, 0x0 }
NETWORKSERVICE_LUID { 0x3e4, 0x0 }
IUSER_LUID { 0x3e3, 0x0 }
PROTECTED_TO_SYSTEM_LUID { 0x3e2, 0x0 }

SE_GROUP_MANDATORY = 0x00000001
SE_GROUP_ENABLED_BY_DEFAULT = 0x00000002
SE_GROUP_ENABLED = 0x00000004
SE_GROUP_OWNER = 0x00000008
SE_GROUP_USE_FOR_DENY_ONLY = 0x00000010
SE_GROUP_INTEGRITY = 0x00000020
SE_GROUP_INTEGRITY_ENABLED = 0x00000040
SE_GROUP_LOGON_ID = 0xC0000000
SE_GROUP_RESOURCE = 0x20000000

SE_GROUP_VALID_ATTRIBUTES = SE_GROUP_MANDATORY | SE_GROUP_ENABLED_BY_DEFAULT | SE_GROUP_ENABLED | SE_GROUP_OWNER | SE_GROUP_USE_FOR_DENY_ONLY | SE_GROUP_LOGON_ID | SE_GROUP_RESOURCE | SE_GROUP_INTEGRITY | SE_GROUP_INTEGRITY_ENABLED

ACL_REVISION = 2
ACL_REVISION_DS = 4

ACL_REVISION1 = 1
MIN_ACL_REVISION = ACL_REVISION2
ACL_REVISION2 = 2
ACL_REVISION3 = 3
ACL_REVISION4 = 4
MAX_ACL_REVISION ACL_REVISION4
"""


class ACL(Structure):
    _fields_ = [
        ("AclRevision", BYTE),
        ("Sbz1", BYTE),
        ("AclSize", WORD),
        ("AceCount", WORD),
        ("Sbz2", WORD),
    ]


PACL = POINTER(ACL)

"""
typedef struct _ACE_HEADER {
 BYTE AceType
 BYTE AceFlags
 WORD AceSize
} ACE_HEADER
typedef ACE_HEADER *PACE_HEADER

ACCESS_MIN_MS_ACE_TYPE = 0x0
ACCESS_ALLOWED_ACE_TYPE = 0x0
ACCESS_DENIED_ACE_TYPE = 0x1
SYSTEM_AUDIT_ACE_TYPE = 0x2
SYSTEM_ALARM_ACE_TYPE = 0x3
ACCESS_MAX_MS_V2_ACE_TYPE = 0x3

ACCESS_ALLOWED_COMPOUND_ACE_TYPE = 0x4
ACCESS_MAX_MS_V3_ACE_TYPE = 0x4

ACCESS_MIN_MS_OBJECT_ACE_TYPE = 0x5
ACCESS_ALLOWED_OBJECT_ACE_TYPE = 0x5
ACCESS_DENIED_OBJECT_ACE_TYPE = 0x6
SYSTEM_AUDIT_OBJECT_ACE_TYPE = 0x7
SYSTEM_ALARM_OBJECT_ACE_TYPE = 0x8
ACCESS_MAX_MS_OBJECT_ACE_TYPE = 0x8

ACCESS_MAX_MS_V4_ACE_TYPE = 0x8
ACCESS_MAX_MS_ACE_TYPE = 0x8

ACCESS_ALLOWED_CALLBACK_ACE_TYPE = 0x9
ACCESS_DENIED_CALLBACK_ACE_TYPE = 0xA
ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE = 0xB
ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE = 0xC
SYSTEM_AUDIT_CALLBACK_ACE_TYPE = 0xD
SYSTEM_ALARM_CALLBACK_ACE_TYPE = 0xE
SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE = 0xF
SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE = 0x10

SYSTEM_MANDATORY_LABEL_ACE_TYPE = 0x11
SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE = 0x12
SYSTEM_SCOPED_POLICY_ID_ACE_TYPE = 0x13
SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE = 0x14
SYSTEM_ACCESS_FILTER_ACE_TYPE = 0x15
ACCESS_MAX_MS_V5_ACE_TYPE = 0x15

OBJECT_INHERIT_ACE = 0x1
CONTAINER_INHERIT_ACE = 0x2
NO_PROPAGATE_INHERIT_ACE = 0x4
INHERIT_ONLY_ACE = 0x8
INHERITED_ACE = 0x10
VALID_INHERIT_FLAGS = 0x1F

CRITICAL_ACE_FLAG = 0x20

SUCCESSFUL_ACCESS_ACE_FLAG = 0x40
FAILED_ACCESS_ACE_FLAG = 0x80

TRUST_PROTECTED_FILTER_ACE_FLAG = 0x40

typedef struct _ACCESS_ALLOWED_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart
} ACCESS_ALLOWED_ACE

typedef ACCESS_ALLOWED_ACE *PACCESS_ALLOWED_ACE

typedef struct _ACCESS_DENIED_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart
} ACCESS_DENIED_ACE
typedef ACCESS_DENIED_ACE *PACCESS_DENIED_ACE

typedef struct _SYSTEM_AUDIT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart
} SYSTEM_AUDIT_ACE
typedef SYSTEM_AUDIT_ACE *PSYSTEM_AUDIT_ACE

typedef struct _SYSTEM_ALARM_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart
} SYSTEM_ALARM_ACE
typedef SYSTEM_ALARM_ACE *PSYSTEM_ALARM_ACE

typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart

} SYSTEM_RESOURCE_ATTRIBUTE_ACE, *PSYSTEM_RESOURCE_ATTRIBUTE_ACE

typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart
} SYSTEM_SCOPED_POLICY_ID_ACE, *PSYSTEM_SCOPED_POLICY_ID_ACE

typedef struct _SYSTEM_MANDATORY_LABEL_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart
} SYSTEM_MANDATORY_LABEL_ACE, *PSYSTEM_MANDATORY_LABEL_ACE

typedef struct _SYSTEM_PROCESS_TRUST_LABEL_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart
} SYSTEM_PROCESS_TRUST_LABEL_ACE, *PSYSTEM_PROCESS_TRUST_LABEL_ACE

typedef struct _SYSTEM_ACCESS_FILTER_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart

} SYSTEM_ACCESS_FILTER_ACE, *PSYSTEM_ACCESS_FILTER_ACE

SYSTEM_MANDATORY_LABEL_NO_WRITE_UP 0x1
SYSTEM_MANDATORY_LABEL_NO_READ_UP 0x2
SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP 0x4

SYSTEM_MANDATORY_LABEL_VALID_MASK = SYSTEM_MANDATORY_LABEL_NO_WRITE_UP | SYSTEM_MANDATORY_LABEL_NO_READ_UP | SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP

SYSTEM_PROCESS_TRUST_LABEL_VALID_MASK 0x00ffffff
SYSTEM_PROCESS_TRUST_NOCONSTRAINT_MASK 0xffffffff
SYSTEM_ACCESS_FILTER_VALID_MASK 0x00ffffff
SYSTEM_ACCESS_FILTER_NOCONSTRAINT_MASK 0xffffffff

typedef struct _ACCESS_ALLOWED_OBJECT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD Flags
 GUID ObjectType
 GUID InheritedObjectType
 DWORD SidStart
} ACCESS_ALLOWED_OBJECT_ACE, *PACCESS_ALLOWED_OBJECT_ACE

typedef struct _ACCESS_DENIED_OBJECT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD Flags
 GUID ObjectType
 GUID InheritedObjectType
 DWORD SidStart
} ACCESS_DENIED_OBJECT_ACE, *PACCESS_DENIED_OBJECT_ACE

typedef struct _SYSTEM_AUDIT_OBJECT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD Flags
 GUID ObjectType
 GUID InheritedObjectType
 DWORD SidStart
} SYSTEM_AUDIT_OBJECT_ACE, *PSYSTEM_AUDIT_OBJECT_ACE

typedef struct _SYSTEM_ALARM_OBJECT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD Flags
 GUID ObjectType
 GUID InheritedObjectType
 DWORD SidStart
} SYSTEM_ALARM_OBJECT_ACE, *PSYSTEM_ALARM_OBJECT_ACE

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart

} ACCESS_ALLOWED_CALLBACK_ACE, *PACCESS_ALLOWED_CALLBACK_ACE

typedef struct _ACCESS_DENIED_CALLBACK_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart

} ACCESS_DENIED_CALLBACK_ACE, *PACCESS_DENIED_CALLBACK_ACE

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart

} SYSTEM_AUDIT_CALLBACK_ACE, *PSYSTEM_AUDIT_CALLBACK_ACE

typedef struct _SYSTEM_ALARM_CALLBACK_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD SidStart

} SYSTEM_ALARM_CALLBACK_ACE, *PSYSTEM_ALARM_CALLBACK_ACE

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD Flags
 GUID ObjectType
 GUID InheritedObjectType
 DWORD SidStart

} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD Flags
 GUID ObjectType
 GUID InheritedObjectType
 DWORD SidStart

} ACCESS_DENIED_CALLBACK_OBJECT_ACE, *PACCESS_DENIED_CALLBACK_OBJECT_ACE

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD Flags
 GUID ObjectType
 GUID InheritedObjectType
 DWORD SidStart

} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE {
 ACE_HEADER Header
 ACCESS_MASK Mask
 DWORD Flags
 GUID ObjectType
 GUID InheritedObjectType
 DWORD SidStart

} SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE

ACE_OBJECT_TYPE_PRESENT 0x1
ACE_INHERITED_OBJECT_TYPE_PRESENT 0x2

typedef enum _ACL_INFORMATION_CLASS {
 AclRevisionInformation = 1,
 AclSizeInformation
} ACL_INFORMATION_CLASS

typedef struct _ACL_REVISION_INFORMATION {
 DWORD AclRevision
} ACL_REVISION_INFORMATION
typedef ACL_REVISION_INFORMATION *PACL_REVISION_INFORMATION

typedef struct _ACL_SIZE_INFORMATION {
 DWORD AceCount
 DWORD AclBytesInUse
 DWORD AclBytesFree
} ACL_SIZE_INFORMATION
typedef ACL_SIZE_INFORMATION *PACL_SIZE_INFORMATION

SECURITY_DESCRIPTOR_REVISION = 1
SECURITY_DESCRIPTOR_REVISION1 = 1

SECURITY_DESCRIPTOR_MIN_LENGTH = sizeof(SECURITY_DESCRIPTOR)
"""

SECURITY_DESCRIPTOR_CONTROL = WORD

SE_OWNER_DEFAULTED = 0x0001
SE_GROUP_DEFAULTED = 0x0002
SE_DACL_PRESENT = 0x0004
SE_DACL_DEFAULTED = 0x0008
SE_SACL_PRESENT = 0x0010
SE_SACL_DEFAULTED = 0x0020
SE_DACL_AUTO_INHERIT_REQ = 0x0100
SE_SACL_AUTO_INHERIT_REQ = 0x0200
SE_DACL_AUTO_INHERITED = 0x0400
SE_SACL_AUTO_INHERITED = 0x0800
SE_DACL_PROTECTED = 0x1000
SE_SACL_PROTECTED = 0x2000
SE_RM_CONTROL_VALID = 0x4000
SE_SELF_RELATIVE = 0x8000


class SECURITY_DESCRIPTOR_RELATIVE(Structure):
    _fields_ = [
        ("Revision", BYTE),
        ("Sbz1", BYTE),
        ("Control", SECURITY_DESCRIPTOR_CONTROL),
        ("Owner", DWORD),
        ("Group", DWORD),
        ("Sacl", DWORD),
        ("Dacl", DWORD),
    ]


class SECURITY_DESCRIPTOR(Structure):
    _fields_ = [
        ("Revision", BYTE),
        ("Sbz1", BYTE),
        ("Control", SECURITY_DESCRIPTOR_CONTROL),
        ("Owner", PSID),
        ("Group", PSID),
        ("Sacl", PACL),
        ("Dacl", PACL),
    ]


PSECURITY_DESCRIPTOR = POINTER(SECURITY_DESCRIPTOR)


class SECURITY_OBJECT_AI_PARAMS(Structure):
    _fields_ = [
        ("Size", DWORD),
        ("ConstraintMask", DWORD),
    ]


class OBJECT_TYPE_LIST(Structure):
    _fields_ = [
        ("Level", WORD),
        ("Sbz", WORD),
        ("ObjectType", POINTER(GUID)),
    ]


POBJECT_TYPE_LIST = POINTER(OBJECT_TYPE_LIST)

ACCESS_OBJECT_GUID = 0
ACCESS_PROPERTY_SET_GUID = 1
ACCESS_PROPERTY_GUID = 2
ACCESS_MAX_LEVEL = 4


class AUDIT_EVENT_TYPE(CEnum):
    AuditEventObjectAccess = 0
    AuditEventDirectoryServiceAccess = 1


AUDIT_ALLOW_NO_PRIVILEGE = 0x1

ACCESS_DS_SOURCE_A = b"DS"
ACCESS_DS_SOURCE_W = "DS"
ACCESS_DS_OBJECT_TYPE_NAME_A = b"Directory Service Object"
ACCESS_DS_OBJECT_TYPE_NAME_W = "Directory Service Object"

SE_PRIVILEGE_ENABLED_BY_DEFAULT = 0x00000001
SE_PRIVILEGE_ENABLED = 0x00000002
SE_PRIVILEGE_REMOVED = 0x00000004
SE_PRIVILEGE_USED_FOR_ACCESS = 0x80000000
SE_PRIVILEGE_VALID_ATTRIBUTES = (
    SE_PRIVILEGE_ENABLED_BY_DEFAULT | SE_PRIVILEGE_ENABLED | SE_PRIVILEGE_REMOVED | SE_PRIVILEGE_USED_FOR_ACCESS
)

PRIVILEGE_SET_ALL_NECESSARY = 1


class PRIVILEGE_SET(Structure):
    _fields_ = [
        ("PrivilegeCount", DWORD),
        ("Control", DWORD),
        ("Privilege", LUID_AND_ATTRIBUTES * ANYSIZE_ARRAY),
    ]


PPRIVILEGE_SET = POINTER(PRIVILEGE_SET)

ACCESS_REASON_TYPE_MASK = 0x00FF0000
ACCESS_REASON_DATA_MASK = 0x0000FFFF

ACCESS_REASON_STAGING_MASK = 0x80000000
ACCESS_REASON_EXDATA_MASK = 0x7F000000

"""
typedef enum _ACCESS_REASON_TYPE{

 AccessReasonNone = 0x00000000,
 AccessReasonAllowedAce = 0x00010000,
 AccessReasonDeniedAce = 0x00020000,

 AccessReasonAllowedParentAce = 0x00030000,
 AccessReasonDeniedParentAce = 0x00040000,

 AccessReasonNotGrantedByCape = 0x00050000,
 AccessReasonNotGrantedByParentCape = 0x00060000,

 AccessReasonNotGrantedToAppContainer = 0x00070000,

 AccessReasonMissingPrivilege = 0x00100000,
 AccessReasonFromPrivilege = 0x00200000,

 AccessReasonIntegrityLevel = 0x00300000,

 AccessReasonOwnership = 0x00400000,

 AccessReasonNullDacl = 0x00500000,
 AccessReasonEmptyDacl = 0x00600000,

 AccessReasonNoSD = 0x00700000,
 AccessReasonNoGrant = 0x00800000,

 AccessReasonTrustLabel = 0x00900000,

 AccessReasonFilterAce = 0x00a00000
}
ACCESS_REASON_TYPE

typedef DWORD ACCESS_REASON

typedef struct _ACCESS_REASONS{
 ACCESS_REASON Data[32]
} ACCESS_REASONS, *PACCESS_REASONS

/*
The following data structures are defined to consolidate various falvors of
access check functions. In particular for Windows 7, the new access check
function will enable security attribute check, plus returning the reason
for a access check result.

The new access check function based on these data structures will
form the foundation to reimplement other flavors of access check
functions.

*/

SE_SECURITY_DESCRIPTOR_FLAG_NO_OWNER_ACE 0x00000001
SE_SECURITY_DESCRIPTOR_FLAG_NO_LABEL_ACE 0x00000002
SE_SECURITY_DESCRIPTOR_FLAG_NO_ACCESS_FILTER_ACE 0x00000004
SE_SECURITY_DESCRIPTOR_VALID_FLAGS 0x00000007

typedef struct _SE_SECURITY_DESCRIPTOR
{
 DWORD Size
 DWORD Flags
 PSECURITY_DESCRIPTOR SecurityDescriptor
} SE_SECURITY_DESCRIPTOR, *PSE_SECURITY_DESCRIPTOR

typedef struct _SE_ACCESS_REQUEST
{
 DWORD Size
 PSE_SECURITY_DESCRIPTOR SeSecurityDescriptor
 ACCESS_MASK DesiredAccess
 ACCESS_MASK PreviouslyGrantedAccess
 PSID PrincipalSelfSid
 PGENERIC_MAPPING GenericMapping
 DWORD ObjectTypeListCount
 POBJECT_TYPE_LIST ObjectTypeList
} SE_ACCESS_REQUEST, *PSE_ACCESS_REQUEST

typedef struct _SE_ACCESS_REPLY
{
 DWORD Size
 DWORD ResultListCount
 PACCESS_MASK GrantedAccess
 PDWORD AccessStatus
 PACCESS_REASONS AccessReason
 PPRIVILEGE_SET* Privileges
} SE_ACCESS_REPLY, *PSE_ACCESS_REPLY
"""
SE_CREATE_TOKEN_NAME = "SeCreateTokenPrivilege"
SE_ASSIGNPRIMARYTOKEN_NAME = "SeAssignPrimaryTokenPrivilege"
SE_LOCK_MEMORY_NAME = "SeLockMemoryPrivilege"
SE_INCREASE_QUOTA_NAME = "SeIncreaseQuotaPrivilege"
SE_UNSOLICITED_INPUT_NAME = "SeUnsolicitedInputPrivilege"
SE_MACHINE_ACCOUNT_NAME = "SeMachineAccountPrivilege"
SE_TCB_NAME = "SeTcbPrivilege"
SE_SECURITY_NAME = "SeSecurityPrivilege"
SE_TAKE_OWNERSHIP_NAME = "SeTakeOwnershipPrivilege"
SE_LOAD_DRIVER_NAME = "SeLoadDriverPrivilege"
SE_SYSTEM_PROFILE_NAME = "SeSystemProfilePrivilege"
SE_SYSTEMTIME_NAME = "SeSystemtimePrivilege"
SE_PROF_SINGLE_PROCESS_NAME = "SeProfileSingleProcessPrivilege"
SE_INC_BASE_PRIORITY_NAME = "SeIncreaseBasePriorityPrivilege"
SE_CREATE_PAGEFILE_NAME = "SeCreatePagefilePrivilege"
SE_CREATE_PERMANENT_NAME = "SeCreatePermanentPrivilege"
SE_BACKUP_NAME = "SeBackupPrivilege"
SE_RESTORE_NAME = "SeRestorePrivilege"
SE_SHUTDOWN_NAME = "SeShutdownPrivilege"
SE_DEBUG_NAME = "SeDebugPrivilege"
SE_AUDIT_NAME = "SeAuditPrivilege"
SE_SYSTEM_ENVIRONMENT_NAME = "SeSystemEnvironmentPrivilege"
SE_CHANGE_NOTIFY_NAME = "SeChangeNotifyPrivilege"
SE_REMOTE_SHUTDOWN_NAME = "SeRemoteShutdownPrivilege"
SE_UNDOCK_NAME = "SeUndockPrivilege"
SE_SYNC_AGENT_NAME = "SeSyncAgentPrivilege"
SE_ENABLE_DELEGATION_NAME = "SeEnableDelegationPrivilege"
SE_MANAGE_VOLUME_NAME = "SeManageVolumePrivilege"
SE_IMPERSONATE_NAME = "SeImpersonatePrivilege"
SE_CREATE_GLOBAL_NAME = "SeCreateGlobalPrivilege"
SE_TRUSTED_CREDMAN_ACCESS_NAME = "SeTrustedCredManAccessPrivilege"
SE_RELABEL_NAME = "SeRelabelPrivilege"
SE_INC_WORKING_SET_NAME = "SeIncreaseWorkingSetPrivilege"
SE_TIME_ZONE_NAME = "SeTimeZonePrivilege"
SE_CREATE_SYMBOLIC_LINK_NAME = "SeCreateSymbolicLinkPrivilege"
SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME = "SeDelegateSessionUserImpersonatePrivilege"

SE_ACTIVATE_AS_USER_CAPABILITY = "activateAsUser"
SE_CONSTRAINED_IMPERSONATION_CAPABILITY = "constrainedImpersonation"
SE_SESSION_IMPERSONATION_CAPABILITY = "sessionImpersonation"
SE_MUMA_CAPABILITY = "muma"
SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY = "developmentModeNetwork"


class SECURITY_IMPERSONATION_LEVEL(CEnum):
    SecurityAnonymous = 0
    SecurityIdentification = 1
    SecurityImpersonation = 2
    SecurityDelegation = 3


SECURITY_MAX_IMPERSONATION_LEVEL = SECURITY_IMPERSONATION_LEVEL.SecurityDelegation
SECURITY_MIN_IMPERSONATION_LEVEL = SECURITY_IMPERSONATION_LEVEL.SecurityAnonymous
DEFAULT_IMPERSONATION_LEVEL = SECURITY_IMPERSONATION_LEVEL.SecurityImpersonation


def VALID_IMPERSONATION_LEVEL(L):
    return (L >= SECURITY_MIN_IMPERSONATION_LEVEL) and (L <= SECURITY_MAX_IMPERSONATION_LEVEL)


TOKEN_ASSIGN_PRIMARY = 0x0001
TOKEN_DUPLICATE = 0x0002
TOKEN_IMPERSONATE = 0x0004
TOKEN_QUERY = 0x0008
TOKEN_QUERY_SOURCE = 0x0010
TOKEN_ADJUST_PRIVILEGES = 0x0020
TOKEN_ADJUST_GROUPS = 0x0040
TOKEN_ADJUST_DEFAULT = 0x0080
TOKEN_ADJUST_SESSIONID = 0x0100

TOKEN_ALL_ACCESS_P = (
    STANDARD_RIGHTS_REQUIRED
    | TOKEN_ASSIGN_PRIMARY
    | TOKEN_DUPLICATE
    | TOKEN_IMPERSONATE
    | TOKEN_QUERY
    | TOKEN_QUERY_SOURCE
    | TOKEN_ADJUST_PRIVILEGES
    | TOKEN_ADJUST_GROUPS
    | TOKEN_ADJUST_DEFAULT
)
TOKEN_ALL_ACCESS = TOKEN_ALL_ACCESS_P | TOKEN_ADJUST_SESSIONID
TOKEN_READ = STANDARD_RIGHTS_READ | TOKEN_QUERY
TOKEN_WRITE = STANDARD_RIGHTS_WRITE | TOKEN_ADJUST_PRIVILEGES | TOKEN_ADJUST_GROUPS | TOKEN_ADJUST_DEFAULT
TOKEN_EXECUTE = STANDARD_RIGHTS_EXECUTE
TOKEN_TRUST_CONSTRAINT_MASK = STANDARD_RIGHTS_READ | TOKEN_QUERY | TOKEN_QUERY_SOURCE
TOKEN_ACCESS_PSEUDO_HANDLE_WIN8 = TOKEN_QUERY | TOKEN_QUERY_SOURCE
TOKEN_ACCESS_PSEUDO_HANDLE = TOKEN_ACCESS_PSEUDO_HANDLE_WIN8
"""
typedef enum _TOKEN_TYPE {
 TokenPrimary = 1,
 TokenImpersonation
 } TOKEN_TYPE
typedef TOKEN_TYPE *PTOKEN_TYPE

typedef enum _TOKEN_ELEVATION_TYPE {
 TokenElevationTypeDefault = 1,
 TokenElevationTypeFull,
 TokenElevationTypeLimited,
} TOKEN_ELEVATION_TYPE, *PTOKEN_ELEVATION_TYPE

typedef enum _TOKEN_INFORMATION_CLASS {
 TokenUser = 1,
 TokenGroups,
 TokenPrivileges,
 TokenOwner,
 TokenPrimaryGroup,
 TokenDefaultDacl,
 TokenSource,
 TokenType,
 TokenImpersonationLevel,
 TokenStatistics,
 TokenRestrictedSids,
 TokenSessionId,
 TokenGroupsAndPrivileges,
 TokenSessionReference,
 TokenSandBoxInert,
 TokenAuditPolicy,
 TokenOrigin,
 TokenElevationType,
 TokenLinkedToken,
 TokenElevation,
 TokenHasRestrictions,
 TokenAccessInformation,
 TokenVirtualizationAllowed,
 TokenVirtualizationEnabled,
 TokenIntegrityLevel,
 TokenUIAccess,
 TokenMandatoryPolicy,
 TokenLogonSid,
 TokenIsAppContainer,
 TokenCapabilities,
 TokenAppContainerSid,
 TokenAppContainerNumber,
 TokenUserClaimAttributes,
 TokenDeviceClaimAttributes,
 TokenRestrictedUserClaimAttributes,
 TokenRestrictedDeviceClaimAttributes,
 TokenDeviceGroups,
 TokenRestrictedDeviceGroups,
 TokenSecurityAttributes,
 TokenIsRestricted,
 TokenProcessTrustLevel,
 TokenPrivateNameSpace,
 TokenSingletonAttributes,
 TokenBnoIsolation,
 TokenChildProcessFlags,
 TokenIsLessPrivilegedAppContainer,
 MaxTokenInfoClass
} TOKEN_INFORMATION_CLASS, *PTOKEN_INFORMATION_CLASS

typedef struct _TOKEN_USER {
 SID_AND_ATTRIBUTES User
} TOKEN_USER, *PTOKEN_USER

#ifndef MIDL_PASS

typedef struct _SE_TOKEN_USER {
 union {
 TOKEN_USER TokenUser
 SID_AND_ATTRIBUTES User
 } DUMMYUNIONNAME

 union {
 SID Sid
 BYTE Buffer[SECURITY_MAX_SID_SIZE]
 } DUMMYUNIONNAME2

} SE_TOKEN_USER , PSE_TOKEN_USER

TOKEN_USER_MAX_SIZE = sizeof(TOKEN_USER) + SECURITY_MAX_SID_SIZE

#endif

typedef struct _TOKEN_GROUPS {
 DWORD GroupCount
#ifdef MIDL_PASS
 [size_is(GroupCount)] SID_AND_ATTRIBUTES Groups[*]
#else
 SID_AND_ATTRIBUTES Groups[ANYSIZE_ARRAY]
#endif
} TOKEN_GROUPS, *PTOKEN_GROUPS
"""


class TOKEN_PRIVILEGES(Structure):
    _fields_ = [("PrivilegeCount", DWORD), ("Privileges", LUID_AND_ATTRIBUTES * ANYSIZE_ARRAY)]


PTOKEN_PRIVILEGES = POINTER(TOKEN_PRIVILEGES)


class TOKEN_OWNER(Structure):
    _fields_ = [
        ("Owner", PSID),
    ]


PTOKEN_OWNER = POINTER(TOKEN_OWNER)

"""
#ifndef MIDL_PASS
TOKEN_OWNER_MAX_SIZE = sizeof(TOKEN_OWNER) + SECURITY_MAX_SID_SIZE
#endif

typedef struct _TOKEN_PRIMARY_GROUP {
 PSID PrimaryGroup
} TOKEN_PRIMARY_GROUP, *PTOKEN_PRIMARY_GROUP

typedef struct _TOKEN_DEFAULT_DACL {
 PACL DefaultDacl
} TOKEN_DEFAULT_DACL, *PTOKEN_DEFAULT_DACL

typedef struct _TOKEN_USER_CLAIMS {
 PCLAIMS_BLOB UserClaims
} TOKEN_USER_CLAIMS, *PTOKEN_USER_CLAIMS

typedef struct _TOKEN_DEVICE_CLAIMS {
 PCLAIMS_BLOB DeviceClaims
} TOKEN_DEVICE_CLAIMS, *PTOKEN_DEVICE_CLAIMS

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES {
 DWORD SidCount
 DWORD SidLength
 PSID_AND_ATTRIBUTES Sids
 DWORD RestrictedSidCount
 DWORD RestrictedSidLength
 PSID_AND_ATTRIBUTES RestrictedSids
 DWORD PrivilegeCount
 DWORD PrivilegeLength
 PLUID_AND_ATTRIBUTES Privileges
 LUID AuthenticationId
} TOKEN_GROUPS_AND_PRIVILEGES, *PTOKEN_GROUPS_AND_PRIVILEGES

typedef struct _TOKEN_LINKED_TOKEN {
 HANDLE LinkedToken
} TOKEN_LINKED_TOKEN, *PTOKEN_LINKED_TOKEN

typedef struct _TOKEN_ELEVATION {
 DWORD TokenIsElevated
} TOKEN_ELEVATION, *PTOKEN_ELEVATION

typedef struct _TOKEN_MANDATORY_LABEL {
 SID_AND_ATTRIBUTES Label
} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL

TOKEN_MANDATORY_POLICY_OFF 0x0
TOKEN_MANDATORY_POLICY_NO_WRITE_UP 0x1
TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN 0x2

TOKEN_MANDATORY_POLICY_VALID_MASK = TOKEN_MANDATORY_POLICY_NO_WRITE_UP | TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN

#ifndef MIDL_PASS
TOKEN_INTEGRITY_LEVEL_MAX_SIZE = (((DWORD)(sizeof(TOKEN_MANDATORY_LABEL)) + sizeof(PVOID) - 1) & ~(sizeof(PVOID)-1)) + SECURITY_MAX_SID_SIZE
#endif

typedef struct _TOKEN_MANDATORY_POLICY {
 DWORD Policy
} TOKEN_MANDATORY_POLICY, *PTOKEN_MANDATORY_POLICY

typedef PVOID PSECURITY_ATTRIBUTES_OPAQUE

typedef struct _TOKEN_ACCESS_INFORMATION {
 PSID_AND_ATTRIBUTES_HASH SidHash
 PSID_AND_ATTRIBUTES_HASH RestrictedSidHash
 PTOKEN_PRIVILEGES Privileges
 LUID AuthenticationId
 TOKEN_TYPE TokenType
 SECURITY_IMPERSONATION_LEVEL ImpersonationLevel
 TOKEN_MANDATORY_POLICY MandatoryPolicy
 DWORD Flags
 DWORD AppContainerNumber
 PSID PackageSid
 PSID_AND_ATTRIBUTES_HASH CapabilitiesHash
 PSID TrustLevelSid
 PSECURITY_ATTRIBUTES_OPAQUE SecurityAttributes
} TOKEN_ACCESS_INFORMATION, *PTOKEN_ACCESS_INFORMATION

POLICY_AUDIT_SUBCATEGORY_COUNT = 59

typedef struct _TOKEN_AUDIT_POLICY {
 BYTE PerUserPolicy[((POLICY_AUDIT_SUBCATEGORY_COUNT) >> 1) + 1]
} TOKEN_AUDIT_POLICY, *PTOKEN_AUDIT_POLICY

TOKEN_SOURCE_LENGTH 8

typedef struct _TOKEN_SOURCE {
 CHAR SourceName[TOKEN_SOURCE_LENGTH]
 LUID SourceIdentifier
} TOKEN_SOURCE, *PTOKEN_SOURCE

typedef struct _TOKEN_STATISTICS {
 LUID TokenId
 LUID AuthenticationId
 LARGE_INTEGER ExpirationTime
 TOKEN_TYPE TokenType
 SECURITY_IMPERSONATION_LEVEL ImpersonationLevel
 DWORD DynamicCharged
 DWORD DynamicAvailable
 DWORD GroupCount
 DWORD PrivilegeCount
 LUID ModifiedId
} TOKEN_STATISTICS, *PTOKEN_STATISTICS

typedef struct _TOKEN_CONTROL {
 LUID TokenId
 LUID AuthenticationId
 LUID ModifiedId
 TOKEN_SOURCE TokenSource
} TOKEN_CONTROL, *PTOKEN_CONTROL

typedef struct _TOKEN_ORIGIN {
 LUID OriginatingLogonSession
} TOKEN_ORIGIN, * PTOKEN_ORIGIN

typedef enum _MANDATORY_LEVEL {
 MandatoryLevelUntrusted = 0,
 MandatoryLevelLow,
 MandatoryLevelMedium,
 MandatoryLevelHigh,
 MandatoryLevelSystem,
 MandatoryLevelSecureProcess,
 MandatoryLevelCount
} MANDATORY_LEVEL, *PMANDATORY_LEVEL

typedef struct _TOKEN_APPCONTAINER_INFORMATION {
 PSID TokenAppContainer
} TOKEN_APPCONTAINER_INFORMATION, *PTOKEN_APPCONTAINER_INFORMATION

#ifndef MIDL_PASS
TOKEN_APPCONTAINER_SID_MAX_SIZE = sizeof(TOKEN_APPCONTAINER_INFORMATION) + SECURITY_MAX_SID_SIZE
#endif

typedef struct _TOKEN_SID_INFORMATION {
 PSID Sid
} TOKEN_SID_INFORMATION, *PTOKEN_SID_INFORMATION

typedef struct _TOKEN_BNO_ISOLATION_INFORMATION {
 PWSTR IsolationPrefix
 BOOLEAN IsolationEnabled
} TOKEN_BNO_ISOLATION_INFORMATION, *PTOKEN_BNO_ISOLATION_INFORMATION

CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID 0x00

CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 0x01
CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 0x02

CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING 0x03

typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE {
 DWORD64 Version
 PWSTR Name
} CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE, *PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE

CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN 0x04

CLAIM_SECURITY_ATTRIBUTE_TYPE_SID 0x05

CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN 0x06

typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE {
 PVOID pValue
 DWORD ValueLength
} CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE,
 *PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE

CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING 0x10

CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE 0x0001

CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE 0x0002

CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY 0x0004

CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT 0x0008

CLAIM_SECURITY_ATTRIBUTE_DISABLED 0x0010

CLAIM_SECURITY_ATTRIBUTE_MANDATORY 0x0020

CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS = CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE | CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE | CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY | CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT | CLAIM_SECURITY_ATTRIBUTE_DISABLED | CLAIM_SECURITY_ATTRIBUTE_MANDATORY

CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS 0xFFFF0000

typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1 {
 PWSTR Name

 WORD ValueType
 WORD Reserved

 DWORD Flags

 DWORD ValueCount

 union {
 PLONG64 pInt64
 PDWORD64 pUint64
 PWSTR *ppString
 PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn
 PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString
 } Values
} CLAIM_SECURITY_ATTRIBUTE_V1, *PCLAIM_SECURITY_ATTRIBUTE_V1

typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 {
 DWORD Name

 WORD ValueType
 WORD Reserved

 DWORD Flags

 DWORD ValueCount

 union {
 DWORD pInt64[ANYSIZE_ARRAY]
 DWORD pUint64[ANYSIZE_ARRAY]
 DWORD ppString[ANYSIZE_ARRAY]
 DWORD pFqbn[ANYSIZE_ARRAY]
 DWORD pOctetString[ANYSIZE_ARRAY]
 } Values
} CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1, *PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1

CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 1

CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION CLAIM_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1

typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION {

 WORD Version

 WORD Reserved

 DWORD AttributeCount
 union {
 PCLAIM_SECURITY_ATTRIBUTE_V1 pAttributeV1
 } Attribute
} CLAIM_SECURITY_ATTRIBUTES_INFORMATION, *PCLAIM_SECURITY_ATTRIBUTES_INFORMATION

SECURITY_DYNAMIC_TRACKING = TRUE
SECURITY_STATIC_TRACKING = FALSE

typedef BOOLEAN SECURITY_CONTEXT_TRACKING_MODE,
 * PSECURITY_CONTEXT_TRACKING_MODE

typedef struct _SECURITY_QUALITY_OF_SERVICE {
 DWORD Length
 SECURITY_IMPERSONATION_LEVEL ImpersonationLevel
 SECURITY_CONTEXT_TRACKING_MODE ContextTrackingMode
 BOOLEAN EffectiveOnly
 } SECURITY_QUALITY_OF_SERVICE, * PSECURITY_QUALITY_OF_SERVICE

typedef struct _SE_IMPERSONATION_STATE {
 PACCESS_TOKEN Token
 BOOLEAN CopyOnOpen
 BOOLEAN EffectiveOnly
 SECURITY_IMPERSONATION_LEVEL Level
} SE_IMPERSONATION_STATE, *PSE_IMPERSONATION_STATE

DISABLE_MAX_PRIVILEGE 0x1
SANDBOX_INERT 0x2
LUA_TOKEN 0x4
WRITE_RESTRICTED 0x8

typedef DWORD SECURITY_INFORMATION, *PSECURITY_INFORMATION

OWNER_SECURITY_INFORMATION = 0x00000001
GROUP_SECURITY_INFORMATION = 0x00000002
DACL_SECURITY_INFORMATION = 0x00000004
SACL_SECURITY_INFORMATION = 0x00000008
LABEL_SECURITY_INFORMATION = 0x00000010
ATTRIBUTE_SECURITY_INFORMATION = 0x00000020
SCOPE_SECURITY_INFORMATION = 0x00000040
PROCESS_TRUST_LABEL_SECURITY_INFORMATION = 0x00000080
ACCESS_FILTER_SECURITY_INFORMATION = 0x00000100
BACKUP_SECURITY_INFORMATION = 0x00010000

PROTECTED_DACL_SECURITY_INFORMATION = 0x80000000
PROTECTED_SACL_SECURITY_INFORMATION = 0x40000000
UNPROTECTED_DACL_SECURITY_INFORMATION = 0x20000000
UNPROTECTED_SACL_SECURITY_INFORMATION = 0x10000000

typedef BYTE SE_SIGNING_LEVEL, *PSE_SIGNING_LEVEL

SE_SIGNING_LEVEL_UNCHECKED 0x00000000
SE_SIGNING_LEVEL_UNSIGNED 0x00000001
SE_SIGNING_LEVEL_ENTERPRISE 0x00000002
SE_SIGNING_LEVEL_CUSTOM_1 0x00000003
SE_SIGNING_LEVEL_DEVELOPER SE_SIGNING_LEVEL_CUSTOM_1
SE_SIGNING_LEVEL_AUTHENTICODE 0x00000004
SE_SIGNING_LEVEL_CUSTOM_2 0x00000005
SE_SIGNING_LEVEL_STORE 0x00000006
SE_SIGNING_LEVEL_CUSTOM_3 0x00000007
SE_SIGNING_LEVEL_ANTIMALWARE SE_SIGNING_LEVEL_CUSTOM_3
SE_SIGNING_LEVEL_MICROSOFT 0x00000008
SE_SIGNING_LEVEL_CUSTOM_4 0x00000009
SE_SIGNING_LEVEL_CUSTOM_5 0x0000000A
SE_SIGNING_LEVEL_DYNAMIC_CODEGEN 0x0000000B
SE_SIGNING_LEVEL_WINDOWS 0x0000000C
SE_SIGNING_LEVEL_CUSTOM_7 0x0000000D
SE_SIGNING_LEVEL_WINDOWS_TCB 0x0000000E
SE_SIGNING_LEVEL_CUSTOM_6 0x0000000F

typedef enum _SE_IMAGE_SIGNATURE_TYPE
{
 SeImageSignatureNone = 0,
 SeImageSignatureEmbedded,
 SeImageSignatureCache,
 SeImageSignatureCatalogCached,
 SeImageSignatureCatalogNotCached,
 SeImageSignatureCatalogHint,
 SeImageSignaturePackageCatalog,
} SE_IMAGE_SIGNATURE_TYPE, *PSE_IMAGE_SIGNATURE_TYPE

typedef enum _SE_LEARNING_MODE_DATA_TYPE {
 SeLearningModeInvalidType = 0,
 SeLearningModeSettings,
 SeLearningModeMax
} SE_LEARNING_MODE_DATA_TYPE

SE_LEARNING_MODE_FLAG_PERMISSIVE 0x00000001

typedef struct _SECURITY_CAPABILITIES {
#ifdef MIDL_PASS
 PISID AppContainerSid
 [size_is(CapabilityCount)] PSID_AND_ATTRIBUTES Capabilities
#else
 PSID AppContainerSid
 PSID_AND_ATTRIBUTES Capabilities
#endif
 DWORD CapabilityCount
 DWORD Reserved
} SECURITY_CAPABILITIES, *PSECURITY_CAPABILITIES, *LPSECURITY_CAPABILITIES

PROCESS_TERMINATE = 0x0001
PROCESS_CREATE_THREAD = 0x0002
PROCESS_SET_SESSIONID = 0x0004
PROCESS_VM_OPERATION = 0x0008
PROCESS_VM_READ = 0x0010
PROCESS_VM_WRITE = 0x0020
PROCESS_DUP_HANDLE = 0x0040
PROCESS_CREATE_PROCESS = 0x0080
PROCESS_SET_QUOTA = 0x0100
PROCESS_SET_INFORMATION = 0x0200
PROCESS_QUERY_INFORMATION = 0x0400
PROCESS_SUSPEND_RESUME = 0x0800
PROCESS_QUERY_LIMITED_INFORMATION = 0x1000
PROCESS_SET_LIMITED_INFORMATION = 0x2000
#if = NTDDI_VERSION >= NTDDI_VISTA
PROCESS_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0xFFFF
#else
PROCESS_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0xFFF
#endif

THREAD_TERMINATE = 0x0001
THREAD_SUSPEND_RESUME = 0x0002
THREAD_GET_CONTEXT = 0x0008
THREAD_SET_CONTEXT = 0x0010
THREAD_QUERY_INFORMATION = 0x0040
THREAD_SET_INFORMATION = 0x0020
THREAD_SET_THREAD_TOKEN = 0x0080
THREAD_IMPERSONATE = 0x0100
THREAD_DIRECT_IMPERSONATION = 0x0200

THREAD_SET_LIMITED_INFORMATION = 0x0400
THREAD_QUERY_LIMITED_INFORMATION = 0x0800
THREAD_RESUME = 0x1000
#if = NTDDI_VERSION >= NTDDI_VISTA
THREAD_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0xFFFF
#else
THREAD_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x3FF
#endif
JOB_OBJECT_ASSIGN_PROCESS = 0x0001
JOB_OBJECT_SET_ATTRIBUTES = 0x0002
JOB_OBJECT_QUERY = 0x0004
JOB_OBJECT_TERMINATE = 0x0008
JOB_OBJECT_SET_SECURITY_ATTRIBUTES = 0x0010
JOB_OBJECT_IMPERSONATE = 0x0020
JOB_OBJECT_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x3F

typedef struct _JOB_SET_ARRAY {
 HANDLE JobHandle
 DWORD MemberLevel
 DWORD Flags
} JOB_SET_ARRAY, *PJOB_SET_ARRAY

FLS_MAXIMUM_AVAILABLE 128
TLS_MINIMUM_AVAILABLE 64

typedef struct _EXCEPTION_REGISTRATION_RECORD {
 struct _EXCEPTION_REGISTRATION_RECORD *Next
 PEXCEPTION_ROUTINE Handler
} EXCEPTION_REGISTRATION_RECORD

typedef EXCEPTION_REGISTRATION_RECORD *PEXCEPTION_REGISTRATION_RECORD

typedef struct _NT_TIB {
 struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList
 PVOID StackBase
 PVOID StackLimit
 PVOID SubSystemTib
#if defined(_MSC_EXTENSIONS)
 union {
 PVOID FiberData
 DWORD Version
 }
#else
 PVOID FiberData
#endif
 PVOID ArbitraryUserPointer
 struct _NT_TIB *Self
} NT_TIB
typedef NT_TIB *PNT_TIB

typedef struct _NT_TIB32 {
 DWORD ExceptionList
 DWORD StackBase
 DWORD StackLimit
 DWORD SubSystemTib

#if defined(_MSC_EXTENSIONS)
 union {
 DWORD FiberData
 DWORD Version
 }
#else
 DWORD FiberData
#endif

 DWORD ArbitraryUserPointer
 DWORD Self
} NT_TIB32, *PNT_TIB32

typedef struct _NT_TIB64 {
 DWORD64 ExceptionList
 DWORD64 StackBase
 DWORD64 StackLimit
 DWORD64 SubSystemTib

#if defined(_MSC_EXTENSIONS)
 union {
 DWORD64 FiberData
 DWORD Version
 }

#else
 DWORD64 FiberData
#endif

 DWORD64 ArbitraryUserPointer
 DWORD64 Self
} NT_TIB64, *PNT_TIB64
"""
THREAD_DYNAMIC_CODE_ALLOW = 1

THREAD_BASE_PRIORITY_LOWRT = 15
THREAD_BASE_PRIORITY_MAX = 2
THREAD_BASE_PRIORITY_MIN = -2
THREAD_BASE_PRIORITY_IDLE = -15

"""
typedef struct _UMS_CREATE_THREAD_ATTRIBUTES {
 DWORD UmsVersion
 PVOID UmsContext
 PVOID UmsCompletionList
} UMS_CREATE_THREAD_ATTRIBUTES, *PUMS_CREATE_THREAD_ATTRIBUTES

typedef struct _WOW64_ARCHITECTURE_INFORMATION {
 DWORD Machine : 16
 DWORD KernelMode : 1
 DWORD UserMode : 1
 DWORD Native : 1
 DWORD Process : 1
 DWORD ReservedZero0 : 12
} WOW64_ARCHITECTURE_INFORMATION

MEMORY_PRIORITY_LOWEST 0
MEMORY_PRIORITY_VERY_LOW 1
MEMORY_PRIORITY_LOW 2
MEMORY_PRIORITY_MEDIUM 3
MEMORY_PRIORITY_BELOW_NORMAL 4
MEMORY_PRIORITY_NORMAL 5

typedef struct _QUOTA_LIMITS {
 SIZE_T PagedPoolLimit
 SIZE_T NonPagedPoolLimit
 SIZE_T MinimumWorkingSetSize
 SIZE_T MaximumWorkingSetSize
 SIZE_T PagefileLimit
 LARGE_INTEGER TimeLimit
} QUOTA_LIMITS, *PQUOTA_LIMITS

QUOTA_LIMITS_HARDWS_MIN_ENABLE 0x00000001
QUOTA_LIMITS_HARDWS_MIN_DISABLE 0x00000002
QUOTA_LIMITS_HARDWS_MAX_ENABLE 0x00000004
QUOTA_LIMITS_HARDWS_MAX_DISABLE 0x00000008
QUOTA_LIMITS_USE_DEFAULT_LIMITS 0x00000010

typedef union _RATE_QUOTA_LIMIT {
 DWORD RateData
 struct {
 DWORD RatePercent : 7
 DWORD Reserved0 : 25
 } DUMMYSTRUCTNAME
} RATE_QUOTA_LIMIT, *PRATE_QUOTA_LIMIT

typedef struct _QUOTA_LIMITS_EX {
 SIZE_T PagedPoolLimit
 SIZE_T NonPagedPoolLimit
 SIZE_T MinimumWorkingSetSize
 SIZE_T MaximumWorkingSetSize
 SIZE_T PagefileLimit
 LARGE_INTEGER TimeLimit
 SIZE_T WorkingSetLimit
 SIZE_T Reserved2
 SIZE_T Reserved3
 SIZE_T Reserved4
 DWORD Flags
 RATE_QUOTA_LIMIT CpuRateLimit
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX

typedef struct _IO_COUNTERS {
 ULONGLONG ReadOperationCount
 ULONGLONG WriteOperationCount
 ULONGLONG OtherOperationCount
 ULONGLONG ReadTransferCount
 ULONGLONG WriteTransferCount
 ULONGLONG OtherTransferCount
} IO_COUNTERS
typedef IO_COUNTERS *PIO_COUNTERS

MAX_HW_COUNTERS 16
THREAD_PROFILING_FLAG_DISPATCH 0x00000001

typedef enum _HARDWARE_COUNTER_TYPE {
 PMCCounter,
 MaxHardwareCounterType
} HARDWARE_COUNTER_TYPE, *PHARDWARE_COUNTER_TYPE
typedef enum _PROCESS_MITIGATION_POLICY {
 ProcessDEPPolicy,
 ProcessASLRPolicy,
 ProcessDynamicCodePolicy,
 ProcessStrictHandleCheckPolicy,
 ProcessSystemCallDisablePolicy,
 ProcessMitigationOptionsMask,
 ProcessExtensionPointDisablePolicy,
 ProcessControlFlowGuardPolicy,
 ProcessSignaturePolicy,
 ProcessFontDisablePolicy,
 ProcessImageLoadPolicy,
 ProcessSystemCallFilterPolicy,
 ProcessPayloadRestrictionPolicy,
 ProcessChildProcessPolicy,
 ProcessSideChannelIsolationPolicy,
 MaxProcessMitigationPolicy
} PROCESS_MITIGATION_POLICY, *PPROCESS_MITIGATION_POLICY

typedef struct _PROCESS_MITIGATION_ASLR_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD EnableBottomUpRandomization : 1
 DWORD EnableForceRelocateImages : 1
 DWORD EnableHighEntropy : 1
 DWORD DisallowStrippedImages : 1
 DWORD ReservedFlags : 28
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_ASLR_POLICY, *PPROCESS_MITIGATION_ASLR_POLICY

typedef struct _PROCESS_MITIGATION_DEP_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD Enable : 1
 DWORD DisableAtlThunkEmulation : 1
 DWORD ReservedFlags : 30
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
 BOOLEAN Permanent
} PROCESS_MITIGATION_DEP_POLICY, *PPROCESS_MITIGATION_DEP_POLICY

typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD RaiseExceptionOnInvalidHandleReference : 1
 DWORD HandleExceptionsPermanentlyEnabled : 1
 DWORD ReservedFlags : 30
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY, *PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD DisallowWin32kSystemCalls : 1
 DWORD AuditDisallowWin32kSystemCalls : 1
 DWORD ReservedFlags : 30
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY, *PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY

typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD DisableExtensionPoints : 1
 DWORD ReservedFlags : 31
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY, *PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY

typedef struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD ProhibitDynamicCode : 1
 DWORD AllowThreadOptOut : 1
 DWORD AllowRemoteDowngrade : 1
 DWORD AuditProhibitDynamicCode : 1
 DWORD ReservedFlags : 28
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_DYNAMIC_CODE_POLICY, *PPROCESS_MITIGATION_DYNAMIC_CODE_POLICY

typedef struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD EnableControlFlowGuard : 1
 DWORD EnableExportSuppression : 1
 DWORD StrictMode : 1
 DWORD ReservedFlags : 29
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY, *PPROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY

typedef struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD MicrosoftSignedOnly : 1
 DWORD StoreSignedOnly : 1
 DWORD MitigationOptIn : 1
 DWORD AuditMicrosoftSignedOnly : 1
 DWORD AuditStoreSignedOnly : 1
 DWORD ReservedFlags : 27
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY, *PPROCESS_MITIGATION_BINARY_SIGNATURE_POLICY

typedef struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD DisableNonSystemFonts : 1
 DWORD AuditNonSystemFontLoading : 1
 DWORD ReservedFlags : 30
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_FONT_DISABLE_POLICY, *PPROCESS_MITIGATION_FONT_DISABLE_POLICY

typedef struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD NoRemoteImages : 1
 DWORD NoLowMandatoryLabelImages : 1
 DWORD PreferSystem32Images : 1
 DWORD AuditNoRemoteImages : 1
 DWORD AuditNoLowMandatoryLabelImages : 1
 DWORD ReservedFlags : 27
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_IMAGE_LOAD_POLICY, *PPROCESS_MITIGATION_IMAGE_LOAD_POLICY

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD FilterId: 4
 DWORD ReservedFlags : 28
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY, *PPROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY

typedef struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD EnableExportAddressFilter : 1
 DWORD AuditExportAddressFilter : 1

 DWORD EnableExportAddressFilterPlus : 1
 DWORD AuditExportAddressFilterPlus : 1

 DWORD EnableImportAddressFilter : 1
 DWORD AuditImportAddressFilter : 1

 DWORD EnableRopStackPivot : 1
 DWORD AuditRopStackPivot : 1

 DWORD EnableRopCallerCheck : 1
 DWORD AuditRopCallerCheck : 1

 DWORD EnableRopSimExec : 1
 DWORD AuditRopSimExec : 1

 DWORD ReservedFlags : 20
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY, *PPROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY

typedef struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY {
 union {
 DWORD Flags
 struct {
 DWORD NoChildProcessCreation : 1
 DWORD AuditNoChildProcessCreation : 1
 DWORD AllowSecureProcessCreation : 1
 DWORD ReservedFlags : 29
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_CHILD_PROCESS_POLICY, *PPROCESS_MITIGATION_CHILD_PROCESS_POLICY

typedef struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY {
 union {
 DWORD Flags
 struct {

 DWORD SmtBranchTargetIsolation : 1

 DWORD IsolateSecurityDomain : 1
 DWORD DisablePageCombine : 1

 DWORD SpeculativeStoreBypassDisable : 1

 DWORD ReservedFlags : 28

 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY, *PPROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
 LARGE_INTEGER TotalUserTime
 LARGE_INTEGER TotalKernelTime
 LARGE_INTEGER ThisPeriodTotalUserTime
 LARGE_INTEGER ThisPeriodTotalKernelTime
 DWORD TotalPageFaultCount
 DWORD TotalProcesses
 DWORD ActiveProcesses
 DWORD TotalTerminatedProcesses
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
 LARGE_INTEGER PerProcessUserTimeLimit
 LARGE_INTEGER PerJobUserTimeLimit
 DWORD LimitFlags
 SIZE_T MinimumWorkingSetSize
 SIZE_T MaximumWorkingSetSize
 DWORD ActiveProcessLimit
 ULONG_PTR Affinity
 DWORD PriorityClass
 DWORD SchedulingClass
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
 JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation
 IO_COUNTERS IoInfo
 SIZE_T ProcessMemoryLimit
 SIZE_T JobMemoryLimit
 SIZE_T PeakProcessMemoryUsed
 SIZE_T PeakJobMemoryUsed
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
 DWORD NumberOfAssignedProcesses
 DWORD NumberOfProcessIdsInList
 ULONG_PTR ProcessIdList[1]
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
 DWORD UIRestrictionsClass
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
 DWORD SecurityLimitFlags
 HANDLE JobToken
 PTOKEN_GROUPS SidsToDisable
 PTOKEN_PRIVILEGES PrivilegesToDelete
 PTOKEN_GROUPS RestrictedSids
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
 DWORD EndOfJobTimeAction
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
 PVOID CompletionKey
 HANDLE CompletionPort
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
 JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo
 IO_COUNTERS IoInfo
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION

typedef struct _JOBOBJECT_JOBSET_INFORMATION {
 DWORD MemberLevel
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE {
 ToleranceLow = 1,
 ToleranceMedium,
 ToleranceHigh
} JOBOBJECT_RATE_CONTROL_TOLERANCE, *PJOBOBJECT_RATE_CONTROL_TOLERANCE

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL {
 ToleranceIntervalShort = 1,
 ToleranceIntervalMedium,
 ToleranceIntervalLong
} JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL,
 *PJOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL

typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION {
 DWORD64 IoReadBytesLimit
 DWORD64 IoWriteBytesLimit
 LARGE_INTEGER PerJobUserTimeLimit
 DWORD64 JobMemoryLimit
 JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance
 JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval
 DWORD LimitFlags
} JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION, *PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION

typedef struct JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2 {
 DWORD64 IoReadBytesLimit
 DWORD64 IoWriteBytesLimit
 LARGE_INTEGER PerJobUserTimeLimit
 union {
 DWORD64 JobHighMemoryLimit
 DWORD64 JobMemoryLimit
 } DUMMYUNIONNAME

 union {
 JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance
 JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance
 } DUMMYUNIONNAME2

 union {
 JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval
 JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
 CpuRateControlToleranceInterval
 } DUMMYUNIONNAME3

 DWORD LimitFlags
 JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance
 DWORD64 JobLowMemoryLimit
 JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL IoRateControlToleranceInterval
 JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance
 JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL NetRateControlToleranceInterval
} JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION {
 DWORD LimitFlags
 DWORD ViolationLimitFlags
 DWORD64 IoReadBytes
 DWORD64 IoReadBytesLimit
 DWORD64 IoWriteBytes
 DWORD64 IoWriteBytesLimit
 LARGE_INTEGER PerJobUserTime
 LARGE_INTEGER PerJobUserTimeLimit
 DWORD64 JobMemory
 DWORD64 JobMemoryLimit
 JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance
 JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit
} JOBOBJECT_LIMIT_VIOLATION_INFORMATION, *PJOBOBJECT_LIMIT_VIOLATION_INFORMATION

typedef struct JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2 {
 DWORD LimitFlags
 DWORD ViolationLimitFlags
 DWORD64 IoReadBytes
 DWORD64 IoReadBytesLimit
 DWORD64 IoWriteBytes
 DWORD64 IoWriteBytesLimit
 LARGE_INTEGER PerJobUserTime
 LARGE_INTEGER PerJobUserTimeLimit
 DWORD64 JobMemory
 union {
 DWORD64 JobHighMemoryLimit
 DWORD64 JobMemoryLimit
 } DUMMYUNIONNAME

 union {
 JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance
 JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance
 } DUMMYUNIONNAME2

 union {
 JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit
 JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlToleranceLimit
 } DUMMYUNIONNAME3

 DWORD64 JobLowMemoryLimit
 JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance
 JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlToleranceLimit
 JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance
 JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlToleranceLimit
} JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2

typedef struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION {
 DWORD ControlFlags
 union {
 DWORD CpuRate
 DWORD Weight
 struct {
 WORD MinRate
 WORD MaxRate
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} JOBOBJECT_CPU_RATE_CONTROL_INFORMATION, *PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION

typedef enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS {
 JOB_OBJECT_NET_RATE_CONTROL_ENABLE = 0x1,
 JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = 0x2,
 JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = 0x4,
 JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = 0x7
} JOB_OBJECT_NET_RATE_CONTROL_FLAGS

#if !defined(SORTPP_PASS) && !defined(MIDL_PASS) && !defined(RC_INVOKED)

DEFINE_ENUM_FLAG_OPERATORS(JOB_OBJECT_NET_RATE_CONTROL_FLAGS)
C_ASSERT(JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS ==
 (JOB_OBJECT_NET_RATE_CONTROL_ENABLE +
 JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH +
 JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG))

#endif

JOB_OBJECT_NET_RATE_CONTROL_MAX_DSCP_TAG 64

typedef struct JOBOBJECT_NET_RATE_CONTROL_INFORMATION {
 DWORD64 MaxBandwidth
 JOB_OBJECT_NET_RATE_CONTROL_FLAGS ControlFlags
 BYTE DscpTag
} JOBOBJECT_NET_RATE_CONTROL_INFORMATION

typedef enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS {
 JOB_OBJECT_IO_RATE_CONTROL_ENABLE = 0x1,
 JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = 0x2,
 JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = 0x4,
 JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = 0x8,
 JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = JOB_OBJECT_IO_RATE_CONTROL_ENABLE |
 JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME |
 JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL |
 JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP
} JOB_OBJECT_IO_RATE_CONTROL_FLAGS

#if !defined(SORTPP_PASS) && !defined(MIDL_PASS) && !defined(RC_INVOKED)

DEFINE_ENUM_FLAG_OPERATORS(JOB_OBJECT_IO_RATE_CONTROL_FLAGS)

#endif

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE {
 LONG64 MaxIops
 LONG64 MaxBandwidth
 LONG64 ReservationIops
 PWSTR VolumeName
 DWORD BaseIoSize
 JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags
 WORD VolumeNameLength
} JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE

typedef JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE
 JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V1

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2 {
 LONG64 MaxIops
 LONG64 MaxBandwidth
 LONG64 ReservationIops
 PWSTR VolumeName
 DWORD BaseIoSize
 JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags
 WORD VolumeNameLength
 LONG64 CriticalReservationIops
 LONG64 ReservationBandwidth
 LONG64 CriticalReservationBandwidth
 LONG64 MaxTimePercent
 LONG64 ReservationTimePercent
 LONG64 CriticalReservationTimePercent
} JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2

typedef struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3 {
 LONG64 MaxIops
 LONG64 MaxBandwidth
 LONG64 ReservationIops
 PWSTR VolumeName
 DWORD BaseIoSize
 JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags
 WORD VolumeNameLength
 LONG64 CriticalReservationIops
 LONG64 ReservationBandwidth
 LONG64 CriticalReservationBandwidth
 LONG64 MaxTimePercent
 LONG64 ReservationTimePercent
 LONG64 CriticalReservationTimePercent
 LONG64 SoftMaxIops
 LONG64 SoftMaxBandwidth
 LONG64 SoftMaxTimePercent
 LONG64 LimitExcessNotifyIops
 LONG64 LimitExcessNotifyBandwidth
 LONG64 LimitExcessNotifyTimePercent
} JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3

typedef enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS {
 JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = 0x1,
 JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = 0x2,
 JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = 0x3
} JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS

typedef struct _JOBOBJECT_IO_ATTRIBUTION_STATS {

 ULONG_PTR IoCount
 ULONGLONG TotalNonOverlappedQueueTime
 ULONGLONG TotalNonOverlappedServiceTime
 ULONGLONG TotalSize

} JOBOBJECT_IO_ATTRIBUTION_STATS, *PJOBOBJECT_IO_ATTRIBUTION_STATS

typedef struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION {
 DWORD ControlFlags

 JOBOBJECT_IO_ATTRIBUTION_STATS ReadStats
 JOBOBJECT_IO_ATTRIBUTION_STATS WriteStats

} JOBOBJECT_IO_ATTRIBUTION_INFORMATION, *PJOBOBJECT_IO_ATTRIBUTION_INFORMATION

JOB_OBJECT_TERMINATE_AT_END_OF_JOB 0
JOB_OBJECT_POST_AT_END_OF_JOB 1

JOB_OBJECT_MSG_END_OF_JOB_TIME 1
JOB_OBJECT_MSG_END_OF_PROCESS_TIME 2
JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT 3
JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO 4
JOB_OBJECT_MSG_NEW_PROCESS 6
JOB_OBJECT_MSG_EXIT_PROCESS 7
JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS 8
JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT 9
JOB_OBJECT_MSG_JOB_MEMORY_LIMIT 10
JOB_OBJECT_MSG_NOTIFICATION_LIMIT 11
JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT 12
JOB_OBJECT_MSG_SILO_TERMINATED 13

JOB_OBJECT_MSG_MINIMUM 1
JOB_OBJECT_MSG_MAXIMUM 13

JOB_OBJECT_VALID_COMPLETION_FILTER (((1UL << (JOB_OBJECT_MSG_MAXIMUM + 1)) - 1) - = (1UL << JOB_OBJECT_MSG_MINIMUM) - 1)

JOB_OBJECT_LIMIT_WORKINGSET 0x00000001
JOB_OBJECT_LIMIT_PROCESS_TIME 0x00000002
JOB_OBJECT_LIMIT_JOB_TIME 0x00000004
JOB_OBJECT_LIMIT_ACTIVE_PROCESS 0x00000008
JOB_OBJECT_LIMIT_AFFINITY 0x00000010
JOB_OBJECT_LIMIT_PRIORITY_CLASS 0x00000020
JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 0x00000040
JOB_OBJECT_LIMIT_SCHEDULING_CLASS 0x00000080

JOB_OBJECT_LIMIT_PROCESS_MEMORY 0x00000100
JOB_OBJECT_LIMIT_JOB_MEMORY 0x00000200
JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH JOB_OBJECT_LIMIT_JOB_MEMORY
JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 0x00000400
JOB_OBJECT_LIMIT_BREAKAWAY_OK 0x00000800
JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK 0x00001000
JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE 0x00002000
JOB_OBJECT_LIMIT_SUBSET_AFFINITY 0x00004000
JOB_OBJECT_LIMIT_JOB_MEMORY_LOW 0x00008000

JOB_OBJECT_LIMIT_JOB_READ_BYTES 0x00010000
JOB_OBJECT_LIMIT_JOB_WRITE_BYTES 0x00020000
JOB_OBJECT_LIMIT_RATE_CONTROL 0x00040000
JOB_OBJECT_LIMIT_CPU_RATE_CONTROL JOB_OBJECT_LIMIT_RATE_CONTROL
JOB_OBJECT_LIMIT_IO_RATE_CONTROL 0x00080000
JOB_OBJECT_LIMIT_NET_RATE_CONTROL 0x00100000

JOB_OBJECT_LIMIT_VALID_FLAGS 0x0007ffff
JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS 0x000000ff
JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS 0x00007fff
JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS = JOB_OBJECT_LIMIT_JOB_READ_BYTES | JOB_OBJECT_LIMIT_JOB_WRITE_BYTES | JOB_OBJECT_LIMIT_JOB_TIME | JOB_OBJECT_LIMIT_JOB_MEMORY_LOW | JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH | JOB_OBJECT_LIMIT_CPU_RATE_CONTROL | JOB_OBJECT_LIMIT_IO_RATE_CONTROL | JOB_OBJECT_LIMIT_NET_RATE_CONTROL

JOB_OBJECT_UILIMIT_NONE 0x00000000

JOB_OBJECT_UILIMIT_HANDLES 0x00000001
JOB_OBJECT_UILIMIT_READCLIPBOARD 0x00000002
JOB_OBJECT_UILIMIT_WRITECLIPBOARD 0x00000004
JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS 0x00000008
JOB_OBJECT_UILIMIT_DISPLAYSETTINGS 0x00000010
JOB_OBJECT_UILIMIT_GLOBALATOMS 0x00000020
JOB_OBJECT_UILIMIT_DESKTOP 0x00000040
JOB_OBJECT_UILIMIT_EXITWINDOWS 0x00000080

JOB_OBJECT_UILIMIT_ALL 0x000000FF

JOB_OBJECT_UI_VALID_FLAGS 0x000000FF

JOB_OBJECT_SECURITY_NO_ADMIN 0x00000001
JOB_OBJECT_SECURITY_RESTRICTED_TOKEN 0x00000002
JOB_OBJECT_SECURITY_ONLY_TOKEN 0x00000004
JOB_OBJECT_SECURITY_FILTER_TOKENS 0x00000008

JOB_OBJECT_SECURITY_VALID_FLAGS 0x0000000f

JOB_OBJECT_CPU_RATE_CONTROL_ENABLE 0x1
JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED 0x2
JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP 0x4
JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY 0x8
JOB_OBJECT_CPU_RATE_CONTROL_MIN_MAX_RATE 0x10
JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS 0x1f

typedef enum _JOBOBJECTINFOCLASS {
 JobObjectBasicAccountingInformation = 1,
 JobObjectBasicLimitInformation,
 JobObjectBasicProcessIdList,
 JobObjectBasicUIRestrictions,
 JobObjectSecurityLimitInformation,
 JobObjectEndOfJobTimeInformation,
 JobObjectAssociateCompletionPortInformation,
 JobObjectBasicAndIoAccountingInformation,
 JobObjectExtendedLimitInformation,
 JobObjectJobSetInformation,
 JobObjectGroupInformation,
 JobObjectNotificationLimitInformation,
 JobObjectLimitViolationInformation,
 JobObjectGroupInformationEx,
 JobObjectCpuRateControlInformation,
 JobObjectCompletionFilter,
 JobObjectCompletionCounter,
 JobObjectReserved1Information = 18,
 JobObjectReserved2Information,
 JobObjectReserved3Information,
 JobObjectReserved4Information,
 JobObjectReserved5Information,
 JobObjectReserved6Information,
 JobObjectReserved7Information,
 JobObjectReserved8Information,
 JobObjectReserved9Information,
 JobObjectReserved10Information,
 JobObjectReserved11Information,
 JobObjectReserved12Information,
 JobObjectReserved13Information,
 JobObjectReserved14Information = 31,
 JobObjectNetRateControlInformation,
 JobObjectNotificationLimitInformation2,
 JobObjectLimitViolationInformation2,
 JobObjectCreateSilo,
 JobObjectSiloBasicInformation,
 JobObjectReserved15Information = 37,
 JobObjectReserved16Information = 38,
 JobObjectReserved17Information = 39,
 JobObjectReserved18Information = 40,
 JobObjectReserved19Information = 41,
 JobObjectReserved20Information = 42,
 JobObjectReserved21Information = 43,
 JobObjectReserved22Information = 44,
 JobObjectReserved23Information = 45,
 JobObjectReserved24Information = 46,
 JobObjectReserved25Information = 47,
 MaxJobObjectInfoClass
} JOBOBJECTINFOCLASS

typedef struct _SILOOBJECT_BASIC_INFORMATION {
 DWORD SiloId
 DWORD SiloParentId
 DWORD NumberOfProcesses
 BOOLEAN IsInServerSilo
 BYTE Reserved[3]
} SILOOBJECT_BASIC_INFORMATION, *PSILOOBJECT_BASIC_INFORMATION

typedef enum _SERVERSILO_STATE {
 SERVERSILO_INITING = 0,
 SERVERSILO_STARTED,
 SERVERSILO_SHUTTING_DOWN,
 SERVERSILO_TERMINATING,
 SERVERSILO_TERMINATED,
} SERVERSILO_STATE, *PSERVERSILO_STATE

typedef struct _SERVERSILO_BASIC_INFORMATION {
 DWORD ServiceSessionId
 SERVERSILO_STATE State
 DWORD ExitStatus
} SERVERSILO_BASIC_INFORMATION, *PSERVERSILO_BASIC_INFORMATION

typedef enum _FIRMWARE_TYPE {
 FirmwareTypeUnknown,
 FirmwareTypeBios,
 FirmwareTypeUefi,
 FirmwareTypeMax
} FIRMWARE_TYPE, *PFIRMWARE_TYPE

EVENT_MODIFY_STATE 0x0002
EVENT_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3

MUTANT_QUERY_STATE 0x0001

MUTANT_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE| MUTANT_QUERY_STATE

SEMAPHORE_MODIFY_STATE 0x0002
SEMAPHORE_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3

TIMER_QUERY_STATE 0x0001
TIMER_MODIFY_STATE 0x0002

TIMER_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE| TIMER_QUERY_STATE|TIMER_MODIFY_STATE

TIME_ZONE_ID_UNKNOWN 0
TIME_ZONE_ID_STANDARD 1
TIME_ZONE_ID_DAYLIGHT 2

"""


class LOGICAL_PROCESSOR_RELATIONSHIP(CEnum):
    RelationProcessorCore = 0
    RelationNumaNode = 1
    RelationCache = 2
    RelationProcessorPackage = 3
    RelationGroup = 4
    RelationAll = 0xFFFF


LTP_PC_SMT = 0x1


class PROCESSOR_CACHE_TYPE(CEnum):
    CacheUnified = 0
    CacheInstruction = 1
    CacheData = 2
    CacheTrace = 3


CACHE_FULLY_ASSOCIATIVE = 0xFF


class CACHE_DESCRIPTOR(Structure):
    _fields_ = [
        ("Level", BYTE),
        ("Associativity", BYTE),
        ("LineSize", WORD),
        ("Size", DWORD),
        ("Type", PROCESSOR_CACHE_TYPE),
    ]


PCACHE_DESCRIPTOR = POINTER(CACHE_DESCRIPTOR)


class SYSTEM_LOGICAL_PROCESSOR_INFORMATION_PROCESSORCORE(Structure):
    _fields_ = [
        ("Flags", BYTE),
    ]


class SYSTEM_LOGICAL_PROCESSOR_INFORMATION_NUMANODE(Structure):
    _fields_ = [
        ("NodeNumber", DWORD),
    ]


class SYSTEM_LOGICAL_PROCESSOR_INFORMATION_DUMMYUNIONNAME(Union):
    _fields_ = [
        ("ProcessorCore", SYSTEM_LOGICAL_PROCESSOR_INFORMATION_PROCESSORCORE),
        ("NumaNode", SYSTEM_LOGICAL_PROCESSOR_INFORMATION_NUMANODE),
        ("Cache", CACHE_DESCRIPTOR),
        ("Reserved", ULONGLONG * 2),
    ]


class SYSTEM_LOGICAL_PROCESSOR_INFORMATION(Structure):
    _anonymous_ = ["Dummy"]
    _fields_ = [
        ("ProcessorMask", ULONG_PTR),
        ("Relationship", LOGICAL_PROCESSOR_RELATIONSHIP),
        ("Dummy", SYSTEM_LOGICAL_PROCESSOR_INFORMATION_DUMMYUNIONNAME),
    ]


PSYSTEM_LOGICAL_PROCESSOR_INFORMATION = POINTER(SYSTEM_LOGICAL_PROCESSOR_INFORMATION)


class PROCESSOR_RELATIONSHIP(Structure):
    _fields_ = [
        ("EfficiencyClass", BYTE),
        ("Reserved", BYTE * 20),
        ("GroupCount", WORD),
        ("GroupMask", GROUP_AFFINITY * ANYSIZE_ARRAY),
    ]


PPROCESSOR_RELATIONSHIP = POINTER(PROCESSOR_RELATIONSHIP)


class NUMA_NODE_RELATIONSHIP(Structure):
    _fields_ = [
        ("NodeNumber", DWORD),
        ("Reserved", BYTE * 20),
        ("GroupMask", GROUP_AFFINITY),
    ]


PNUMA_NODE_RELATIONSHIP = POINTER(NUMA_NODE_RELATIONSHIP)


class CACHE_RELATIONSHIP(Structure):
    _fields_ = [
        ("Level", BYTE),
        ("Associativity", BYTE),
        ("LineSize", WORD),
        ("CacheSize", DWORD),
        ("Type", PROCESSOR_CACHE_TYPE),
        ("Reserved", BYTE * 20),
        ("GroupMask", GROUP_AFFINITY),
    ]


PCACHE_RELATIONSHIP = POINTER(CACHE_RELATIONSHIP)


class PROCESSOR_GROUP_INFO(Structure):
    _fields_ = [
        ("MaximumProcessorCount", BYTE),
        ("ActiveProcessorCount", BYTE * 38),
        ("ActiveProcessorMask", KAFFINITY),
    ]


PPROCESSOR_GROUP_INFO = POINTER(PROCESSOR_GROUP_INFO)


class GROUP_RELATIONSHIP(Structure):
    _fields_ = [
        ("MaximumGroupCount", WORD),
        ("ActiveGroupCount", WORD),
        ("Reserved", BYTE * 20),
        ("GroupInfo", PROCESSOR_GROUP_INFO * ANYSIZE_ARRAY),
    ]


PGROUP_RELATIONSHIP = POINTER(GROUP_RELATIONSHIP)


class SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX_DUMMYUNIONNAME(Union):
    _fields_ = [
        ("Processor", PROCESSOR_RELATIONSHIP),
        ("NumaNode", NUMA_NODE_RELATIONSHIP),
        ("Cache", CACHE_RELATIONSHIP),
        ("Group", GROUP_RELATIONSHIP),
    ]


class SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX(Structure):
    _anonymous_ = ["Dummy"]
    _fields_ = [
        ("Relationship", LOGICAL_PROCESSOR_RELATIONSHIP),
        ("Size", DWORD),
        ("Dummy", SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX_DUMMYUNIONNAME),
    ]


PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX = POINTER(SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX)

"""
typedef enum _CPU_SET_INFORMATION_TYPE {
 CpuSetInformation
} CPU_SET_INFORMATION_TYPE, *PCPU_SET_INFORMATION_TYPE

_Struct_size_bytes_(Size) struct _SYSTEM_CPU_SET_INFORMATION {
 DWORD Size
 CPU_SET_INFORMATION_TYPE Type
 union {
 struct {
 DWORD Id
 WORD Group
 BYTE LogicalProcessorIndex
 BYTE CoreIndex
 BYTE LastLevelCacheIndex
 BYTE NumaNodeIndex
 BYTE EfficiencyClass
 union {

SYSTEM_CPU_SET_INFORMATION_PARKED 0x1
SYSTEM_CPU_SET_INFORMATION_ALLOCATED 0x2
SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS 0x4
SYSTEM_CPU_SET_INFORMATION_REALTIME 0x8

 BYTE AllFlags
 struct {
 BYTE Parked : 1
 BYTE Allocated : 1
 BYTE AllocatedToTargetProcess : 1
 BYTE RealTime : 1
 BYTE ReservedFlags : 4
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME2

 union {
 DWORD Reserved
 BYTE SchedulingClass
 }

 DWORD64 AllocationTag
 } CpuSet
 } DUMMYUNIONNAME
}

typedef struct _SYSTEM_CPU_SET_INFORMATION SYSTEM_CPU_SET_INFORMATION, *PSYSTEM_CPU_SET_INFORMATION
"""


class SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION(Structure):
    _fields_ = [
        ("CycleTime", DWORD64),
    ]


PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION = POINTER(SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION)

"""
PROCESSOR_INTEL_386 386
PROCESSOR_INTEL_486 486
PROCESSOR_INTEL_PENTIUM 586
PROCESSOR_INTEL_IA64 2200
PROCESSOR_AMD_X8664 8664
PROCESSOR_MIPS_R4000 4000
PROCESSOR_ALPHA_21064 21064
PROCESSOR_PPC_601 601
PROCESSOR_PPC_603 603
PROCESSOR_PPC_604 604
PROCESSOR_PPC_620 620
PROCESSOR_HITACHI_SH3 10003
PROCESSOR_HITACHI_SH3E 10004
PROCESSOR_HITACHI_SH4 10005
PROCESSOR_MOTOROLA_821 821
PROCESSOR_SHx_SH3 103
PROCESSOR_SHx_SH4 104
PROCESSOR_STRONGARM 2577
PROCESSOR_ARM720 1824
PROCESSOR_ARM820 2080
PROCESSOR_ARM920 2336
PROCESSOR_ARM_7TDMI 70001
PROCESSOR_OPTIL 0x494f

PROCESSOR_ARCHITECTURE_INTEL 0
PROCESSOR_ARCHITECTURE_MIPS 1
PROCESSOR_ARCHITECTURE_ALPHA 2
PROCESSOR_ARCHITECTURE_PPC 3
PROCESSOR_ARCHITECTURE_SHX 4
PROCESSOR_ARCHITECTURE_ARM 5
PROCESSOR_ARCHITECTURE_IA64 6
PROCESSOR_ARCHITECTURE_ALPHA64 7
PROCESSOR_ARCHITECTURE_MSIL 8
PROCESSOR_ARCHITECTURE_AMD64 9
PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 10
PROCESSOR_ARCHITECTURE_NEUTRAL 11
PROCESSOR_ARCHITECTURE_ARM64 12
PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 13
PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 14

PROCESSOR_ARCHITECTURE_UNKNOWN 0xFFFF

PF_FLOATING_POINT_PRECISION_ERRATA 0
PF_FLOATING_POINT_EMULATED 1
PF_COMPARE_EXCHANGE_DOUBLE 2
PF_MMX_INSTRUCTIONS_AVAILABLE 3
PF_PPC_MOVEMEM_64BIT_OK 4
PF_ALPHA_BYTE_INSTRUCTIONS 5
PF_XMMI_INSTRUCTIONS_AVAILABLE 6
PF_3DNOW_INSTRUCTIONS_AVAILABLE 7
PF_RDTSC_INSTRUCTION_AVAILABLE 8
PF_PAE_ENABLED 9
PF_XMMI64_INSTRUCTIONS_AVAILABLE 10
PF_SSE_DAZ_MODE_AVAILABLE 11
PF_NX_ENABLED 12
PF_SSE3_INSTRUCTIONS_AVAILABLE 13
PF_COMPARE_EXCHANGE128 14
PF_COMPARE64_EXCHANGE128 15
PF_CHANNELS_ENABLED 16
PF_XSAVE_ENABLED 17
PF_ARM_VFP_32_REGISTERS_AVAILABLE 18
PF_ARM_NEON_INSTRUCTIONS_AVAILABLE 19
PF_SECOND_LEVEL_ADDRESS_TRANSLATION 20
PF_VIRT_FIRMWARE_ENABLED 21
PF_RDWRFSGSBASE_AVAILABLE 22
PF_FASTFAIL_AVAILABLE 23
PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE 24
PF_ARM_64BIT_LOADSTORE_ATOMIC 25
PF_ARM_EXTERNAL_CACHE_AVAILABLE 26
PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE 27
PF_RDRAND_INSTRUCTION_AVAILABLE 28
PF_ARM_V8_INSTRUCTIONS_AVAILABLE 29
PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE 30
PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE 31
PF_RDTSCP_INSTRUCTION_AVAILABLE 32
PF_RDPID_INSTRUCTION_AVAILABLE 33

XSTATE_LEGACY_FLOATING_POINT = 0
XSTATE_LEGACY_SSE = 1
XSTATE_GSSE = 2
XSTATE_AVX = XSTATE_GSSE
XSTATE_MPX_BNDREGS = 3
XSTATE_MPX_BNDCSR = 4
XSTATE_AVX512_KMASK = 5
XSTATE_AVX512_ZMM_H = 6
XSTATE_AVX512_ZMM = 7
XSTATE_IPT = 8
XSTATE_CET_U = 11
XSTATE_LWP = 62
MAXIMUM_XSTATE_FEATURES = 64

XSTATE_MASK_LEGACY_FLOATING_POINT (1ui64 << = XSTATE_LEGACY_FLOATING_POINT)
XSTATE_MASK_LEGACY_SSE (1ui64 << = XSTATE_LEGACY_SSE)
XSTATE_MASK_LEGACY = XSTATE_MASK_LEGACY_FLOATING_POINT | XSTATE_MASK_LEGACY_SSE

XSTATE_MASK_GSSE (1ui64 << = XSTATE_GSSE)
XSTATE_MASK_AVX = XSTATE_MASK_GSSE
XSTATE_MASK_MPX ((1ui64 << (XSTATE_MPX_BNDREGS)) | (1ui64 << = XSTATE_MPX_BNDCSR))

XSTATE_MASK_AVX512 ((1ui64 << (XSTATE_AVX512_KMASK)) | (1ui64 << (XSTATE_AVX512_ZMM_H)) | (1ui64 << = XSTATE_AVX512_ZMM))

XSTATE_MASK_IPT (1ui64 << = XSTATE_IPT)
XSTATE_MASK_CET_U (1ui64 << = XSTATE_CET_U)
XSTATE_MASK_LWP (1ui64 << = XSTATE_LWP)

XSTATE_MASK_ALLOWED = XSTATE_MASK_LEGACY | XSTATE_MASK_AVX | XSTATE_MASK_MPX | XSTATE_MASK_AVX512 | XSTATE_MASK_IPT | XSTATE_MASK_CET_U | XSTATE_MASK_LWP

XSTATE_MASK_PERSISTENT ((1ui64 << = XSTATE_MPX_BNDCSR)) | XSTATE_MASK_LWP

XSTATE_MASK_USER_VISIBLE_SUPERVISOR = XSTATE_MASK_CET_U

XSTATE_COMPACTION_ENABLE = 63
XSTATE_COMPACTION_ENABLE_MASK (1ui64 << = XSTATE_COMPACTION_ENABLE)

XSTATE_ALIGN_BIT = 1
XSTATE_ALIGN_MASK (1ui64 << = XSTATE_ALIGN_BIT)

XSTATE_CONTROLFLAG_XSAVEOPT_MASK = 1
XSTATE_CONTROLFLAG_XSAVEC_MASK = 2
XSTATE_CONTROLFLAG_VALID_MASK = XSTATE_CONTROLFLAG_XSAVEOPT_MASK | XSTATE_CONTROLFLAG_XSAVEC_MASK

typedef struct _XSTATE_FEATURE {
 DWORD Offset
 DWORD Size
} XSTATE_FEATURE, *PXSTATE_FEATURE

typedef struct _XSTATE_CONFIGURATION {

 DWORD64 EnabledFeatures
 DWORD64 EnabledVolatileFeatures
 DWORD Size
 union {
 DWORD ControlFlags
 struct
 {
 DWORD OptimizedSave : 1
 DWORD CompactionEnabled : 1
 }
 }
 XSTATE_FEATURE Features[MAXIMUM_XSTATE_FEATURES]
 DWORD64 EnabledSupervisorFeatures
 DWORD64 AlignedFeatures
 DWORD AllFeatureSize
 DWORD AllFeatures[MAXIMUM_XSTATE_FEATURES]
 DWORD64 EnabledUserVisibleSupervisorFeatures

} XSTATE_CONFIGURATION, *PXSTATE_CONFIGURATION

typedef struct _MEMORY_BASIC_INFORMATION {
 PVOID BaseAddress
 PVOID AllocationBase
 DWORD AllocationProtect
 SIZE_T RegionSize
 DWORD State
 DWORD Protect
 DWORD Type
} MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION

typedef struct _MEMORY_BASIC_INFORMATION32 {
 DWORD BaseAddress
 DWORD AllocationBase
 DWORD AllocationProtect
 DWORD RegionSize
 DWORD State
 DWORD Protect
 DWORD Type
} MEMORY_BASIC_INFORMATION32, *PMEMORY_BASIC_INFORMATION32

typedef struct DECLSPEC_ALIGN(16) _MEMORY_BASIC_INFORMATION64 {
 ULONGLONG BaseAddress
 ULONGLONG AllocationBase
 DWORD AllocationProtect
 DWORD __alignment1
 ULONGLONG RegionSize
 DWORD State
 DWORD Protect
 DWORD Type
 DWORD __alignment2
} MEMORY_BASIC_INFORMATION64, *PMEMORY_BASIC_INFORMATION64

CFG_CALL_TARGET_VALID = 0x00000001

CFG_CALL_TARGET_PROCESSED = 0x00000002

CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID = 0x00000004

typedef struct _CFG_CALL_TARGET_INFO {
 ULONG_PTR Offset
 ULONG_PTR Flags
} CFG_CALL_TARGET_INFO, *PCFG_CALL_TARGET_INFO

SECTION_QUERY 0x0001
SECTION_MAP_WRITE 0x0002
SECTION_MAP_READ 0x0004
SECTION_MAP_EXECUTE 0x0008
SECTION_EXTEND_SIZE 0x0010
SECTION_MAP_EXECUTE_EXPLICIT 0x0020

SECTION_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED|SECTION_QUERY| SECTION_MAP_WRITE | SECTION_MAP_READ | SECTION_MAP_EXECUTE | SECTION_EXTEND_SIZE

SESSION_QUERY_ACCESS 0x0001
SESSION_MODIFY_ACCESS 0x0002

SESSION_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | SESSION_QUERY_ACCESS | SESSION_MODIFY_ACCESS

PAGE_NOACCESS 0x01
PAGE_READONLY 0x02
PAGE_READWRITE 0x04
PAGE_WRITECOPY 0x08
PAGE_EXECUTE 0x10
PAGE_EXECUTE_READ 0x20
PAGE_EXECUTE_READWRITE 0x40
PAGE_EXECUTE_WRITECOPY 0x80
PAGE_GUARD 0x100
PAGE_NOCACHE 0x200
PAGE_WRITECOMBINE 0x400
PAGE_ENCLAVE_THREAD_CONTROL 0x80000000
PAGE_REVERT_TO_FILE_MAP 0x80000000
PAGE_TARGETS_NO_UPDATE 0x40000000
PAGE_TARGETS_INVALID 0x40000000
PAGE_ENCLAVE_UNVALIDATED 0x20000000
PAGE_ENCLAVE_DECOMMIT 0x10000000
MEM_COMMIT 0x00001000
MEM_RESERVE 0x00002000
MEM_REPLACE_PLACEHOLDER 0x00004000
MEM_RESERVE_PLACEHOLDER 0x00040000
MEM_RESET 0x00080000
MEM_TOP_DOWN 0x00100000
MEM_WRITE_WATCH 0x00200000
MEM_PHYSICAL 0x00400000
MEM_ROTATE 0x00800000
MEM_DIFFERENT_IMAGE_BASE_OK 0x00800000
MEM_RESET_UNDO 0x01000000
MEM_LARGE_PAGES 0x20000000
MEM_4MB_PAGES 0x80000000
MEM_64K_PAGES = MEM_LARGE_PAGES | MEM_PHYSICAL
MEM_UNMAP_WITH_TRANSIENT_BOOST 0x00000001
MEM_COALESCE_PLACEHOLDERS 0x00000001
MEM_PRESERVE_PLACEHOLDER 0x00000002
MEM_DECOMMIT 0x00004000
MEM_RELEASE 0x00008000
MEM_FREE 0x00010000

typedef struct _MEM_ADDRESS_REQUIREMENTS {
 PVOID LowestStartingAddress
 PVOID HighestEndingAddress
 SIZE_T Alignment
} MEM_ADDRESS_REQUIREMENTS, *PMEM_ADDRESS_REQUIREMENTS

MEM_EXTENDED_PARAMETER_GRAPHICS 0x00000001

typedef enum MEM_EXTENDED_PARAMETER_TYPE {
 MemExtendedParameterInvalidType = 0,
 MemExtendedParameterAddressRequirements,
 MemExtendedParameterNumaNode,
 MemExtendedParameterPartitionHandle,
 MemExtendedParameterUserPhysicalHandle,
 MemExtendedParameterAttributeFlags,
 MemExtendedParameterMax
} MEM_EXTENDED_PARAMETER_TYPE, *PMEM_EXTENDED_PARAMETER_TYPE

MEM_EXTENDED_PARAMETER_TYPE_BITS 8

typedef struct DECLSPEC_ALIGN(8) MEM_EXTENDED_PARAMETER {

 struct {
 DWORD64 Type : MEM_EXTENDED_PARAMETER_TYPE_BITS
 DWORD64 Reserved : 64 - MEM_EXTENDED_PARAMETER_TYPE_BITS
 } DUMMYSTRUCTNAME

 union {
 DWORD64 ULong64
 PVOID Pointer
 SIZE_T Size
 HANDLE Handle
 DWORD ULong
 } DUMMYUNIONNAME

} MEM_EXTENDED_PARAMETER, *PMEM_EXTENDED_PARAMETER

SEC_PARTITION_OWNER_HANDLE 0x00040000
SEC_64K_PAGES 0x00080000
SEC_FILE 0x00800000
SEC_IMAGE 0x01000000
SEC_PROTECTED_IMAGE 0x02000000
SEC_RESERVE 0x04000000
SEC_COMMIT 0x08000000
SEC_NOCACHE 0x10000000
SEC_WRITECOMBINE 0x40000000
SEC_LARGE_PAGES 0x80000000
SEC_IMAGE_NO_EXECUTE = SEC_IMAGE | SEC_NOCACHE

typedef enum MEM_SECTION_EXTENDED_PARAMETER_TYPE {
 MemSectionExtendedParameterInvalidType = 0,
 MemSectionExtendedParameterUserPhysicalFlags,
 MemSectionExtendedParameterNumaNode,
 MemSectionExtendedParameterMax
} MEM_SECTION_EXTENDED_PARAMETER_TYPE, *PMEM_SECTION_EXTENDED_PARAMETER_TYPE

MEM_PRIVATE 0x00020000
MEM_MAPPED 0x00040000
MEM_IMAGE 0x01000000
WRITE_WATCH_FLAG_RESET 0x01

ENCLAVE_TYPE_SGX 0x00000001
ENCLAVE_TYPE_SGX2 0x00000002

typedef struct _ENCLAVE_CREATE_INFO_SGX {
 BYTE Secs[4096]
} ENCLAVE_CREATE_INFO_SGX, *PENCLAVE_CREATE_INFO_SGX

typedef struct _ENCLAVE_INIT_INFO_SGX {
 BYTE SigStruct[1808]
 BYTE Reserved1[240]
 BYTE EInitToken[304]
 BYTE Reserved2[1744]
} ENCLAVE_INIT_INFO_SGX, *PENCLAVE_INIT_INFO_SGX

ENCLAVE_TYPE_VBS 0x00000010

typedef struct _ENCLAVE_CREATE_INFO_VBS {
 DWORD Flags
 BYTE OwnerID[32]
} ENCLAVE_CREATE_INFO_VBS, *PENCLAVE_CREATE_INFO_VBS

ENCLAVE_VBS_FLAG_DEBUG 0x00000001

typedef struct _ENCLAVE_INIT_INFO_VBS {
 DWORD Length
 DWORD ThreadCount
} ENCLAVE_INIT_INFO_VBS, *PENCLAVE_INIT_INFO_VBS
"""

FILE_READ_DATA = 0x0001
FILE_LIST_DIRECTORY = 0x0001
FILE_WRITE_DATA = 0x0002
FILE_ADD_FILE = 0x0002
FILE_APPEND_DATA = 0x0004
FILE_ADD_SUBDIRECTORY = 0x0004
FILE_CREATE_PIPE_INSTANCE = 0x0004
FILE_READ_EA = 0x0008
FILE_WRITE_EA = 0x0010
FILE_EXECUTE = 0x0020
FILE_TRAVERSE = 0x0020
FILE_DELETE_CHILD = 0x0040
FILE_READ_ATTRIBUTES = 0x0080
FILE_WRITE_ATTRIBUTES = 0x0100

FILE_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | SYNCHRONIZE | 0x1FF
FILE_GENERIC_READ = STANDARD_RIGHTS_READ | FILE_READ_DATA | FILE_READ_ATTRIBUTES | FILE_READ_EA | SYNCHRONIZE
FILE_GENERIC_WRITE = (
    STANDARD_RIGHTS_WRITE | FILE_WRITE_DATA | FILE_WRITE_ATTRIBUTES | FILE_WRITE_EA | FILE_APPEND_DATA | SYNCHRONIZE
)
FILE_GENERIC_EXECUTE = STANDARD_RIGHTS_EXECUTE | FILE_READ_ATTRIBUTES | FILE_EXECUTE | SYNCHRONIZE
FILE_SHARE_READ = 0x00000001
FILE_SHARE_WRITE = 0x00000002
FILE_SHARE_DELETE = 0x00000004
FILE_ATTRIBUTE_READONLY = 0x00000001
FILE_ATTRIBUTE_HIDDEN = 0x00000002
FILE_ATTRIBUTE_SYSTEM = 0x00000004
FILE_ATTRIBUTE_DIRECTORY = 0x00000010
FILE_ATTRIBUTE_ARCHIVE = 0x00000020
FILE_ATTRIBUTE_DEVICE = 0x00000040
FILE_ATTRIBUTE_NORMAL = 0x00000080
FILE_ATTRIBUTE_TEMPORARY = 0x00000100
FILE_ATTRIBUTE_SPARSE_FILE = 0x00000200
FILE_ATTRIBUTE_REPARSE_POINT = 0x00000400
FILE_ATTRIBUTE_COMPRESSED = 0x00000800
FILE_ATTRIBUTE_OFFLINE = 0x00001000
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = 0x00002000
FILE_ATTRIBUTE_ENCRYPTED = 0x00004000
FILE_ATTRIBUTE_INTEGRITY_STREAM = 0x00008000
FILE_ATTRIBUTE_VIRTUAL = 0x00010000
FILE_ATTRIBUTE_NO_SCRUB_DATA = 0x00020000
FILE_ATTRIBUTE_EA = 0x00040000
FILE_ATTRIBUTE_PINNED = 0x00080000
FILE_ATTRIBUTE_UNPINNED = 0x00100000
FILE_ATTRIBUTE_RECALL_ON_OPEN = 0x00040000
FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS = 0x00400000
TREE_CONNECT_ATTRIBUTE_PRIVACY = 0x00004000
TREE_CONNECT_ATTRIBUTE_INTEGRITY = 0x00008000
TREE_CONNECT_ATTRIBUTE_GLOBAL = 0x00000004
TREE_CONNECT_ATTRIBUTE_PINNED = 0x00000002
FILE_ATTRIBUTE_STRICTLY_SEQUENTIAL = 0x20000000
FILE_NOTIFY_CHANGE_FILE_NAME = 0x00000001
FILE_NOTIFY_CHANGE_DIR_NAME = 0x00000002
FILE_NOTIFY_CHANGE_ATTRIBUTES = 0x00000004
FILE_NOTIFY_CHANGE_SIZE = 0x00000008
FILE_NOTIFY_CHANGE_LAST_WRITE = 0x00000010
FILE_NOTIFY_CHANGE_LAST_ACCESS = 0x00000020
FILE_NOTIFY_CHANGE_CREATION = 0x00000040
FILE_NOTIFY_CHANGE_SECURITY = 0x00000100
FILE_ACTION_ADDED = 0x00000001
FILE_ACTION_REMOVED = 0x00000002
FILE_ACTION_MODIFIED = 0x00000003
FILE_ACTION_RENAMED_OLD_NAME = 0x00000004
FILE_ACTION_RENAMED_NEW_NAME = 0x00000005
MAILSLOT_NO_MESSAGE = DWORD(-1)
MAILSLOT_WAIT_FOREVER = DWORD(-1)
FILE_CASE_SENSITIVE_SEARCH = 0x00000001
FILE_CASE_PRESERVED_NAMES = 0x00000002
FILE_UNICODE_ON_DISK = 0x00000004
FILE_PERSISTENT_ACLS = 0x00000008
FILE_FILE_COMPRESSION = 0x00000010
FILE_VOLUME_QUOTAS = 0x00000020
FILE_SUPPORTS_SPARSE_FILES = 0x00000040
FILE_SUPPORTS_REPARSE_POINTS = 0x00000080
FILE_SUPPORTS_REMOTE_STORAGE = 0x00000100
FILE_RETURNS_CLEANUP_RESULT_INFO = 0x00000200
FILE_SUPPORTS_POSIX_UNLINK_RENAME = 0x00000400

FILE_VOLUME_IS_COMPRESSED = 0x00008000
FILE_SUPPORTS_OBJECT_IDS = 0x00010000
FILE_SUPPORTS_ENCRYPTION = 0x00020000
FILE_NAMED_STREAMS = 0x00040000
FILE_READ_ONLY_VOLUME = 0x00080000
FILE_SEQUENTIAL_WRITE_ONCE = 0x00100000
FILE_SUPPORTS_TRANSACTIONS = 0x00200000
FILE_SUPPORTS_HARD_LINKS = 0x00400000
FILE_SUPPORTS_EXTENDED_ATTRIBUTES = 0x00800000
FILE_SUPPORTS_OPEN_BY_FILE_ID = 0x01000000
FILE_SUPPORTS_USN_JOURNAL = 0x02000000
FILE_SUPPORTS_INTEGRITY_STREAMS = 0x04000000
FILE_SUPPORTS_BLOCK_REFCOUNTING = 0x08000000
FILE_SUPPORTS_SPARSE_VDL = 0x10000000
FILE_DAX_VOLUME = 0x20000000
FILE_SUPPORTS_GHOSTING = 0x40000000

FILE_INVALID_FILE_ID = LONGLONG(-1)


class FILE_ID_128(Structure):
    _fields_ = [
        ("Identifier", BYTE * 16),
    ]


class FILE_NOTIFY_INFORMATION(Structure):
    _fields_ = [
        ("NextEntryOffset", DWORD),
        ("Action", DWORD),
        ("FileNameLength", DWORD),
        ("FileName", WCHAR * 1),
    ]


class FILE_NOTIFY_EXTENDED_INFORMATION(Structure):
    _fields_ = [
        ("NextEntryOffset", DWORD),
        ("Action", DWORD),
        ("CreationTime", LARGE_INTEGER),
        ("LastModificationTime", LARGE_INTEGER),
        ("LastChangeTime", LARGE_INTEGER),
        ("LastAccessTime", LARGE_INTEGER),
        ("AllocatedLength", LARGE_INTEGER),
        ("FileSize", LARGE_INTEGER),
        ("FileAttributes", DWORD),
        ("ReparsePointTag", DWORD),
        ("FileId", LARGE_INTEGER),
        ("ParentFileId", LARGE_INTEGER),
        ("FileNameLength", DWORD),
        ("FileName", WCHAR * 1),
    ]


class FILE_SEGMENT_ELEMENT(Structure):
    _fields_ = [
        ("Buffer", PVOID64),
        ("Alignment", ULONGLONG),
    ]


FLUSH_FLAGS_FILE_DATA_ONLY = 0x00000001
FLUSH_FLAGS_NO_SYNC = 0x00000002
FLUSH_FLAGS_FILE_DATA_SYNC_ONLY = 0x00000004

"""
typedef struct _REPARSE_GUID_DATA_BUFFER {
 DWORD ReparseTag
 WORD ReparseDataLength
 WORD Reserved
 GUID ReparseGuid
 struct {
 BYTE DataBuffer[1]
 } GenericReparseBuffer
} REPARSE_GUID_DATA_BUFFER, *PREPARSE_GUID_DATA_BUFFER

REPARSE_GUID_DATA_BUFFER_HEADER_SIZE UFIELD_OFFSET(REPARSE_GUID_DATA_BUFFER, GenericReparseBuffer)

MAXIMUM_REPARSE_DATA_BUFFER_SIZE = 16 * 1024

IO_REPARSE_TAG_RESERVED_ZERO = 0
IO_REPARSE_TAG_RESERVED_ONE = 1
IO_REPARSE_TAG_RESERVED_TWO = 2

IO_REPARSE_TAG_RESERVED_RANGE = IO_REPARSE_TAG_RESERVED_TWO

IO_REPARSE_TAG_MOUNT_POINT = 0xA0000003
IO_REPARSE_TAG_HSM = 0xC0000004
IO_REPARSE_TAG_HSM2 = 0x80000006
IO_REPARSE_TAG_SIS = 0x80000007
IO_REPARSE_TAG_WIM = 0x80000008
IO_REPARSE_TAG_CSV = 0x80000009
IO_REPARSE_TAG_DFS = 0x8000000AL
IO_REPARSE_TAG_SYMLINK = 0xA000000CL
IO_REPARSE_TAG_DFSR = 0x80000012
IO_REPARSE_TAG_DEDUP = 0x80000013
IO_REPARSE_TAG_NFS = 0x80000014
IO_REPARSE_TAG_FILE_PLACEHOLDER = 0x80000015
IO_REPARSE_TAG_WOF = 0x80000017
IO_REPARSE_TAG_WCI = 0x80000018
IO_REPARSE_TAG_WCI_1 = 0x90001018
IO_REPARSE_TAG_GLOBAL_REPARSE = 0xA0000019
IO_REPARSE_TAG_CLOUD = 0x9000001AL
IO_REPARSE_TAG_CLOUD_1 = 0x9000101AL
IO_REPARSE_TAG_CLOUD_2 = 0x9000201AL
IO_REPARSE_TAG_CLOUD_3 = 0x9000301AL
IO_REPARSE_TAG_CLOUD_4 = 0x9000401AL
IO_REPARSE_TAG_CLOUD_5 = 0x9000501AL
IO_REPARSE_TAG_CLOUD_6 = 0x9000601AL
IO_REPARSE_TAG_CLOUD_7 = 0x9000701AL
IO_REPARSE_TAG_CLOUD_8 = 0x9000801AL
IO_REPARSE_TAG_CLOUD_9 = 0x9000901AL
IO_REPARSE_TAG_CLOUD_A = 0x9000A01AL
IO_REPARSE_TAG_CLOUD_B = 0x9000B01AL
IO_REPARSE_TAG_CLOUD_C = 0x9000C01AL
IO_REPARSE_TAG_CLOUD_D = 0x9000D01AL
IO_REPARSE_TAG_CLOUD_E = 0x9000E01AL
IO_REPARSE_TAG_CLOUD_F = 0x9000F01AL
IO_REPARSE_TAG_CLOUD_MASK = 0x0000F000
IO_REPARSE_TAG_APPEXECLINK = 0x8000001BL
IO_REPARSE_TAG_PROJFS = 0x9000001CL
IO_REPARSE_TAG_STORAGE_SYNC = 0x8000001EL
IO_REPARSE_TAG_WCI_TOMBSTONE = 0xA000001FL
IO_REPARSE_TAG_UNHANDLED = 0x80000020
IO_REPARSE_TAG_ONEDRIVE = 0x80000021
IO_REPARSE_TAG_PROJFS_TOMBSTONE = 0xA0000022
IO_REPARSE_TAG_AF_UNIX = 0x80000023

#if = _WIN32_WINNT >= _WIN32_WINNT_WIN8

SCRUB_DATA_INPUT_FLAG_RESUME 0x00000001
SCRUB_DATA_INPUT_FLAG_SKIP_IN_SYNC 0x00000002
SCRUB_DATA_INPUT_FLAG_SKIP_NON_INTEGRITY_DATA 0x00000004
SCRUB_DATA_INPUT_FLAG_IGNORE_REDUNDANCY 0x00000008
SCRUB_DATA_INPUT_FLAG_SKIP_DATA 0x00000010
SCRUB_DATA_INPUT_FLAG_SCRUB_BY_OBJECT_ID 0x00000020

SCRUB_DATA_OUTPUT_FLAG_INCOMPLETE 0x00000001

SCRUB_DATA_OUTPUT_FLAG_NON_USER_DATA_RANGE 0x00010000
#if = _WIN32_WINNT >= _WIN32_WINNT_WINBLUE
SCRUB_DATA_OUTPUT_FLAG_PARITY_EXTENT_DATA_RETURNED 0x00020000
SCRUB_DATA_OUTPUT_FLAG_RESUME_CONTEXT_LENGTH_SPECIFIED 0x00040000
#endif

typedef struct _SCRUB_DATA_INPUT {

 DWORD Size
 DWORD Flags

 DWORD MaximumIos

 DWORD ObjectId[4]

 DWORD Reserved[25]

 BYTE ResumeContext[816]

} SCRUB_DATA_INPUT, *PSCRUB_DATA_INPUT

#if = _WIN32_WINNT >= _WIN32_WINNT_WINBLUE

typedef struct _SCRUB_PARITY_EXTENT {

 LONGLONG Offset

 ULONGLONG Length

} SCRUB_PARITY_EXTENT, *PSCRUB_PARITY_EXTENT

typedef struct _SCRUB_PARITY_EXTENT_DATA {

 WORD Size

 WORD Flags

 WORD NumberOfParityExtents

 WORD MaximumNumberOfParityExtents

 SCRUB_PARITY_EXTENT ParityExtents[ANYSIZE_ARRAY]

} SCRUB_PARITY_EXTENT_DATA, *PSCRUB_PARITY_EXTENT_DATA

#endif

typedef struct _SCRUB_DATA_OUTPUT {

 DWORD Size

 DWORD Flags

 DWORD Status
 ULONGLONG ErrorFileOffset
 ULONGLONG ErrorLength

 ULONGLONG NumberOfBytesRepaired

 ULONGLONG NumberOfBytesFailed

 ULONGLONG InternalFileReference

#if = _WIN32_WINNT >= _WIN32_WINNT_WINBLUE
 WORD ResumeContextLength

 WORD ParityExtentDataOffset

 DWORD Reserved[9]

#else

 DWORD Reserved[10]

#endif

#if = _WIN32_WINNT >= _WIN32_WINNT_WIN10_RS5

 ULONGLONG NumberOfMetadataBytesProcessed

 ULONGLONG NumberOfDataBytesProcessed

 ULONGLONG TotalNumberOfMetadataBytesInUse

 ULONGLONG TotalNumberOfDataBytesInUse

#endif
 BYTE ResumeContext[816]

} SCRUB_DATA_OUTPUT, *PSCRUB_DATA_OUTPUT

#endif /*_WIN32_WINNT >= _WIN32_WINNT_WIN8 */

#if = _WIN32_WINNT >= _WIN32_WINNT_WINBLUE

typedef enum _SharedVirtualDiskSupportType
{

 SharedVirtualDisksUnsupported = 0,
 SharedVirtualDisksSupported = 1,

 SharedVirtualDiskSnapshotsSupported = 3,

 SharedVirtualDiskCDPSnapshotsSupported = 7
} SharedVirtualDiskSupportType

typedef enum _SharedVirtualDiskHandleState
{

 SharedVirtualDiskHandleStateNone = 0,

 SharedVirtualDiskHandleStateFileShared = 1,

 SharedVirtualDiskHandleStateHandleShared = 3
} SharedVirtualDiskHandleState

typedef struct _SHARED_VIRTUAL_DISK_SUPPORT {
 SharedVirtualDiskSupportType SharedVirtualDiskSupport

 SharedVirtualDiskHandleState HandleState
} SHARED_VIRTUAL_DISK_SUPPORT, *PSHARED_VIRTUAL_DISK_SUPPORT

typedef struct _REARRANGE_FILE_DATA {

 ULONGLONG SourceStartingOffset
 ULONGLONG TargetOffset

 HANDLE SourceFileHandle
 DWORD Length
 DWORD Flags

} REARRANGE_FILE_DATA, *PREARRANGE_FILE_DATA

#if defined(_WIN64)

typedef struct _REARRANGE_FILE_DATA32 {

 ULONGLONG SourceStartingOffset
 ULONGLONG TargetOffset
 UINT32 SourceFileHandle
 DWORD Length
 DWORD Flags

} REARRANGE_FILE_DATA32, *PREARRANGE_FILE_DATA32
#endif

#endif

SHUFFLE_FILE_FLAG_SKIP_INITIALIZING_NEW_CLUSTERS = 0x00000001

typedef struct _SHUFFLE_FILE_DATA {

 LONGLONG StartingOffset
 LONGLONG Length
 DWORD Flags

} SHUFFLE_FILE_DATA, *PSHUFFLE_FILE_DATA

#endif

IO_COMPLETION_MODIFY_STATE 0x0002
IO_COMPLETION_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x3

IO_QOS_MAX_RESERVATION 1000000000ULL

#ifndef SMB_CCF_APP_INSTANCE_EA_NAME
SMB_CCF_APP_INSTANCE_EA_NAME "ClusteredApplicationInstance"
#endif

#ifndef _NETWORK_APP_INSTANCE_EA_DEFINED
_NETWORK_APP_INSTANCE_EA_DEFINED

#if = NTDDI_VERSION >= NTDDI_WIN10

#ifndef NETWORK_APP_INSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR
NETWORK_APP_INSTANCE_CSV_FLAGS_VALID_ONLY_IF_CSV_COORDINATOR 0x00000001
#endif

typedef struct _NETWORK_APP_INSTANCE_EA {
 GUID AppInstanceID

 DWORD CsvFlags

} NETWORK_APP_INSTANCE_EA, *PNETWORK_APP_INSTANCE_EA

#endif

#endif

DUPLICATE_CLOSE_SOURCE 0x00000001
DUPLICATE_SAME_ACCESS 0x00000002

DEFINE_GUID( GUID_MAX_POWER_SAVINGS, 0xA1841308, 0x3541, 0x4FAB, 0xBC, 0x81, 0xF7, 0x15, 0x56, 0xF2, 0x0B, 0x4A )

DEFINE_GUID( GUID_MIN_POWER_SAVINGS, 0x8C5E7FDA, 0xE8BF, 0x4A96, 0x9A, 0x85, 0xA6, 0xE2, 0x3A, 0x8C, 0x63, 0x5C )

DEFINE_GUID( GUID_TYPICAL_POWER_SAVINGS, 0x381B4222, 0xF694, 0x41F0, 0x96, 0x85, 0xFF, 0x5B, 0xB2, 0x60, 0xDF, 0x2E )

DEFINE_GUID( NO_SUBGROUP_GUID, 0xFEA3413E, 0x7E05, 0x4911, 0x9A, 0x71, 0x70, 0x03, 0x31, 0xF1, 0xC2, 0x94 )

DEFINE_GUID( ALL_POWERSCHEMES_GUID, 0x68A1E95E, 0x13EA, 0x41E1, 0x80, 0x11, 0x0C, 0x49, 0x6C, 0xA4, 0x90, 0xB0 )

DEFINE_GUID( GUID_POWERSCHEME_PERSONALITY, 0x245D8541, 0x3943, 0x4422, 0xB0, 0x25, 0x13, 0xA7, 0x84, 0xF6, 0x79, 0xB7 )

DEFINE_GUID( GUID_ACTIVE_POWERSCHEME, 0x31F9F286, 0x5084, 0x42FE, 0xB7, 0x20, 0x2B, 0x02, 0x64, 0x99, 0x37, 0x63 )

DEFINE_GUID(GUID_IDLE_RESILIENCY_SUBGROUP, 0x2e601130, 0x5351, 0x4d9d, 0x8e, 0x4, 0x25, 0x29, 0x66, 0xba, 0xd0, 0x54)

DEFINE_GUID(GUID_IDLE_RESILIENCY_PERIOD, 0xc42b79aa, 0xaa3a, 0x484b, 0xa9, 0x8f, 0x2c, 0xf3, 0x2a, 0xa9, 0xa, 0x28)

DEFINE_GUID(GUID_DEEP_SLEEP_ENABLED, 0xd502f7ee, 0x1dc7, 0x4efd, 0xa5, 0x5d, 0xf0, 0x4b, 0x6f, 0x5c, 0x5, 0x45)

DEFINE_GUID(GUID_DEEP_SLEEP_PLATFORM_STATE, 0xd23f2fb8, 0x9536, 0x4038, 0x9c, 0x94, 0x1c, 0xe0, 0x2e, 0x5c, 0x21, 0x52)

DEFINE_GUID(GUID_DISK_COALESCING_POWERDOWN_TIMEOUT, 0xc36f0eb4, 0x2988, 0x4a70, 0x8e, 0xee, 0x8, 0x84, 0xfc, 0x2c, 0x24, 0x33)

DEFINE_GUID(GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT, 0x3166bc41, 0x7e98, 0x4e03, 0xb3, 0x4e, 0xec, 0xf, 0x5f, 0x2b, 0x21, 0x8e)

DEFINE_GUID( GUID_VIDEO_SUBGROUP, 0x7516B95F, 0xF776, 0x4464, 0x8C, 0x53, 0x06, 0x16, 0x7F, 0x40, 0xCC, 0x99 )

DEFINE_GUID( GUID_VIDEO_POWERDOWN_TIMEOUT, 0x3C0BC021, 0xC8A8, 0x4E07, 0xA9, 0x73, 0x6B, 0x14, 0xCB, 0xCB, 0x2B, 0x7E )

DEFINE_GUID( GUID_VIDEO_ANNOYANCE_TIMEOUT, 0x82DBCF2D, 0xCD67, 0x40C5, 0xBF, 0xDC, 0x9F, 0x1A, 0x5C, 0xCD, 0x46, 0x63 )

DEFINE_GUID( GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE, 0xEED904DF, 0xB142, 0x4183, 0xB1, 0x0B, 0x5A, 0x11, 0x97, 0xA3, 0x78, 0x64 )

DEFINE_GUID( GUID_VIDEO_DIM_TIMEOUT, 0x17aaa29b, 0x8b43, 0x4b94, 0xaa, 0xfe, 0x35, 0xf6, 0x4d, 0xaa, 0xf1, 0xee)

DEFINE_GUID( GUID_VIDEO_ADAPTIVE_POWERDOWN, 0x90959D22, 0xD6A1, 0x49B9, 0xAF, 0x93, 0xBC, 0xE8, 0x85, 0xAD, 0x33, 0x5B )

DEFINE_GUID( GUID_MONITOR_POWER_ON, 0x02731015, 0x4510, 0x4526, 0x99, 0xE6, 0xE5, 0xA1, 0x7E, 0xBD, 0x1A, 0xEA )

DEFINE_GUID(GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS, 0xaded5e82L, 0xb909, 0x4619, 0x99, 0x49, 0xf5, 0xd7, 0x1d, 0xac, 0x0b, 0xcb)

DEFINE_GUID(GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS, 0xf1fbfde2, 0xa960, 0x4165, 0x9f, 0x88, 0x50, 0x66, 0x79, 0x11, 0xce, 0x96)

DEFINE_GUID(GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS, 0x8ffee2c6, 0x2d01, 0x46be, 0xad, 0xb9, 0x39, 0x8a, 0xdd, 0xc5, 0xb4, 0xff)

DEFINE_GUID(GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS, 0xFBD9AA66, 0x9553, 0x4097, 0xBA, 0x44, 0xED, 0x6E, 0x9D, 0x65, 0xEA, 0xB8)

DEFINE_GUID(GUID_CONSOLE_DISPLAY_STATE, 0x6fe69556, 0x704a, 0x47a0, 0x8f, 0x24, 0xc2, 0x8d, 0x93, 0x6f, 0xda, 0x47)

DEFINE_GUID( GUID_ALLOW_DISPLAY_REQUIRED, 0xA9CEB8DA, 0xCD46, 0x44FB, 0xA9, 0x8B, 0x02, 0xAF, 0x69, 0xDE, 0x46, 0x23 )

DEFINE_GUID(GUID_VIDEO_CONSOLE_LOCK_TIMEOUT, 0x8ec4b3a5, 0x6868, 0x48c2, 0xbe, 0x75, 0x4f, 0x30, 0x44, 0xbe, 0x88, 0xa7)

DEFINE_GUID(GUID_ADVANCED_COLOR_QUALITY_BIAS, 0x684c3e69, 0xa4f7, 0x4014, 0x87, 0x54, 0xd4, 0x51, 0x79, 0xa5, 0x61, 0x67)

DEFINE_GUID(GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP, 0x8619b916, 0xe004, 0x4dd8, 0x9b, 0x66, 0xda, 0xe8, 0x6f, 0x80, 0x66, 0x98)

DEFINE_GUID(GUID_NON_ADAPTIVE_INPUT_TIMEOUT, 0x5adbbfbc, 0x74e, 0x4da1, 0xba, 0x38, 0xdb, 0x8b, 0x36, 0xb2, 0xc8, 0xf3)

DEFINE_GUID(GUID_ADAPTIVE_INPUT_CONTROLLER_STATE, 0xe98fae9, 0xf45a, 0x4de1, 0xa7, 0x57, 0x60, 0x31, 0xf1, 0x97, 0xf6, 0xea)

DEFINE_GUID( GUID_DISK_SUBGROUP, 0x0012EE47, 0x9041, 0x4B5D, 0x9B, 0x77, 0x53, 0x5F, 0xBA, 0x8B, 0x14, 0x42 )

DEFINE_GUID(GUID_DISK_MAX_POWER, 0x51dea550, 0xbb38, 0x4bc4, 0x99, 0x1b, 0xea, 0xcf, 0x37, 0xbe, 0x5e, 0xc8)

DEFINE_GUID( GUID_DISK_POWERDOWN_TIMEOUT, 0x6738E2C4, 0xE8A5, 0x4A42, 0xB1, 0x6A, 0xE0, 0x40, 0xE7, 0x69, 0x75, 0x6E )

DEFINE_GUID( GUID_DISK_IDLE_TIMEOUT, 0x58E39BA8, 0xB8E6, 0x4EF6, 0x90, 0xD0, 0x89, 0xAE, 0x32, 0xB2, 0x58, 0xD6 )

DEFINE_GUID( GUID_DISK_BURST_IGNORE_THRESHOLD, 0x80e3c60e, 0xbb94, 0x4ad8, 0xbb, 0xe0, 0x0d, 0x31, 0x95, 0xef, 0xc6, 0x63 )

DEFINE_GUID( GUID_DISK_ADAPTIVE_POWERDOWN, 0x396A32E1, 0x499A, 0x40B2, 0x91, 0x24, 0xA9, 0x6A, 0xFE, 0x70, 0x76, 0x67 )

DEFINE_GUID( GUID_SLEEP_SUBGROUP, 0x238C9FA8, 0x0AAD, 0x41ED, 0x83, 0xF4, 0x97, 0xBE, 0x24, 0x2C, 0x8F, 0x20 )

DEFINE_GUID( GUID_SLEEP_IDLE_THRESHOLD, 0x81cd32e0, 0x7833, 0x44f3, 0x87, 0x37, 0x70, 0x81, 0xf3, 0x8d, 0x1f, 0x70 )

DEFINE_GUID( GUID_STANDBY_TIMEOUT, 0x29F6C1DB, 0x86DA, 0x48C5, 0x9F, 0xDB, 0xF2, 0xB6, 0x7B, 0x1F, 0x44, 0xDA )

DEFINE_GUID( GUID_UNATTEND_SLEEP_TIMEOUT, 0x7bc4a2f9, 0xd8fc, 0x4469, 0xb0, 0x7b, 0x33, 0xeb, 0x78, 0x5a, 0xac, 0xa0 )

DEFINE_GUID( GUID_HIBERNATE_TIMEOUT, 0x9D7815A6, 0x7EE4, 0x497E, 0x88, 0x88, 0x51, 0x5A, 0x05, 0xF0, 0x23, 0x64 )

DEFINE_GUID( GUID_HIBERNATE_FASTS4_POLICY, 0x94AC6D29, 0x73CE, 0x41A6, 0x80, 0x9F, 0x63, 0x63, 0xBA, 0x21, 0xB4, 0x7E )

DEFINE_GUID( GUID_CRITICAL_POWER_TRANSITION, 0xB7A27025, 0xE569, 0x46c2, 0xA5, 0x04, 0x2B, 0x96, 0xCA, 0xD2, 0x25, 0xA1)

DEFINE_GUID( GUID_SYSTEM_AWAYMODE, 0x98A7F580, 0x01F7, 0x48AA, 0x9C, 0x0F, 0x44, 0x35, 0x2C, 0x29, 0xE5, 0xC0 )

DEFINE_GUID( GUID_ALLOW_AWAYMODE, 0x25dfa149, 0x5dd1, 0x4736, 0xb5, 0xab, 0xe8, 0xa3, 0x7b, 0x5b, 0x81, 0x87 )

DEFINE_GUID( GUID_USER_PRESENCE_PREDICTION, 0x82011705, 0xfb95, 0x4d46, 0x8d, 0x35, 0x40, 0x42, 0xb1, 0xd2, 0xd, 0xef )

DEFINE_GUID( GUID_STANDBY_BUDGET_GRACE_PERIOD, 0x60c07fe1, 0x0556, 0x45cf, 0x99, 0x03, 0xd5, 0x6e, 0x32, 0x21, 0x2, 0x42 )

DEFINE_GUID( GUID_STANDBY_BUDGET_PERCENT, 0x9fe527be, 0x1b70, 0x48da, 0x93, 0x0d, 0x7b, 0xcf, 0x17, 0xb4, 0x49, 0x90 )

DEFINE_GUID( GUID_STANDBY_RESERVE_GRACE_PERIOD, 0xc763ee92, 0x71e8, 0x4127, 0x84, 0xeb, 0xf6, 0xed, 0x04, 0x3a, 0x3e, 0x3d )

DEFINE_GUID( GUID_STANDBY_RESERVE_TIME, 0x468FE7E5, 0x1158, 0x46EC, 0x88, 0xbc, 0x5b, 0x96, 0xc9, 0xe4, 0x4f, 0xd0 )

DEFINE_GUID(GUID_STANDBY_RESET_PERCENT, 0x49cb11a5, 0x56e2, 0x4afb, 0x9d, 0x38, 0x3d, 0xf4, 0x78, 0x72, 0xe2, 0x1b)

DEFINE_GUID( GUID_ALLOW_STANDBY_STATES, 0xabfc2519, 0x3608, 0x4c2a, 0x94, 0xea, 0x17, 0x1b, 0x0e, 0xd5, 0x46, 0xab )

DEFINE_GUID( GUID_ALLOW_RTC_WAKE, 0xBD3B718A, 0x0680, 0x4D9D, 0x8A, 0xB2, 0xE1, 0xD2, 0xB4, 0xAC, 0x80, 0x6D )

DEFINE_GUID( GUID_LEGACY_RTC_MITIGATION, 0x1A34BDC3, 0x7E6B, 0x442E, 0xA9, 0xD0, 0x64, 0xB6, 0xEF, 0x37, 0x8E, 0x84 )

DEFINE_GUID( GUID_ALLOW_SYSTEM_REQUIRED, 0xA4B195F5, 0x8225, 0x47D8, 0x80, 0x12, 0x9D, 0x41, 0x36, 0x97, 0x86, 0xE2 )

DEFINE_GUID( GUID_POWER_SAVING_STATUS, 0xe00958c0, 0xc213, 0x4ace, 0xac, 0x77, 0xfe, 0xcc, 0xed, 0x2e, 0xee, 0xa5)

DEFINE_GUID( GUID_ENERGY_SAVER_SUBGROUP, 0xDE830923, 0xA562, 0x41AF, 0xA0, 0x86, 0xE3, 0xA2, 0xC6, 0xBA, 0xD2, 0xDA )

DEFINE_GUID( GUID_ENERGY_SAVER_BATTERY_THRESHOLD, 0xE69653CA, 0xCF7F, 0x4F05, 0xAA, 0x73, 0xCB, 0x83, 0x3F, 0xA9, 0x0A, 0xD4 )

DEFINE_GUID( GUID_ENERGY_SAVER_BRIGHTNESS, 0x13D09884, 0xF74E, 0x474A, 0xA8, 0x52, 0xB6, 0xBD, 0xE8, 0xAD, 0x03, 0xA8 )

DEFINE_GUID( GUID_ENERGY_SAVER_POLICY, 0x5c5bb349, 0xad29, 0x4ee2, 0x9d, 0xb, 0x2b, 0x25, 0x27, 0xf, 0x7a, 0x81 )

DEFINE_GUID( GUID_SYSTEM_BUTTON_SUBGROUP, 0x4F971E89, 0xEEBD, 0x4455, 0xA8, 0xDE, 0x9E, 0x59, 0x04, 0x0E, 0x73, 0x47 )

POWERBUTTON_ACTION_INDEX_NOTHING 0
POWERBUTTON_ACTION_INDEX_SLEEP 1
POWERBUTTON_ACTION_INDEX_HIBERNATE 2
POWERBUTTON_ACTION_INDEX_SHUTDOWN 3
POWERBUTTON_ACTION_INDEX_TURN_OFF_THE_DISPLAY 4

POWERBUTTON_ACTION_VALUE_NOTHING 0
POWERBUTTON_ACTION_VALUE_SLEEP 2
POWERBUTTON_ACTION_VALUE_HIBERNATE 3
POWERBUTTON_ACTION_VALUE_SHUTDOWN 6
POWERBUTTON_ACTION_VALUE_TURN_OFF_THE_DISPLAY 8

DEFINE_GUID( GUID_POWERBUTTON_ACTION, 0x7648EFA3, 0xDD9C, 0x4E3E, 0xB5, 0x66, 0x50, 0xF9, 0x29, 0x38, 0x62, 0x80 )

DEFINE_GUID( GUID_SLEEPBUTTON_ACTION, 0x96996BC0, 0xAD50, 0x47EC, 0x92, 0x3B, 0x6F, 0x41, 0x87, 0x4D, 0xD9, 0xEB )

DEFINE_GUID( GUID_USERINTERFACEBUTTON_ACTION, 0xA7066653, 0x8D6C, 0x40A8, 0x91, 0x0E, 0xA1, 0xF5, 0x4B, 0x84, 0xC7, 0xE5 )

DEFINE_GUID( GUID_LIDCLOSE_ACTION, 0x5CA83367, 0x6E45, 0x459F, 0xA2, 0x7B, 0x47, 0x6B, 0x1D, 0x01, 0xC9, 0x36 )
DEFINE_GUID( GUID_LIDOPEN_POWERSTATE, 0x99FF10E7, 0x23B1, 0x4C07, 0xA9, 0xD1, 0x5C, 0x32, 0x06, 0xD7, 0x41, 0xB4 )

DEFINE_GUID( GUID_BATTERY_SUBGROUP, 0xE73A048D, 0xBF27, 0x4F12, 0x97, 0x31, 0x8B, 0x20, 0x76, 0xE8, 0x89, 0x1F )

DEFINE_GUID( GUID_BATTERY_DISCHARGE_ACTION_0, 0x637EA02F, 0xBBCB, 0x4015, 0x8E, 0x2C, 0xA1, 0xC7, 0xB9, 0xC0, 0xB5, 0x46 )
DEFINE_GUID( GUID_BATTERY_DISCHARGE_LEVEL_0, 0x9A66D8D7, 0x4FF7, 0x4EF9, 0xB5, 0xA2, 0x5A, 0x32, 0x6C, 0xA2, 0xA4, 0x69 )
DEFINE_GUID( GUID_BATTERY_DISCHARGE_FLAGS_0, 0x5dbb7c9f, 0x38e9, 0x40d2, 0x97, 0x49, 0x4f, 0x8a, 0x0e, 0x9f, 0x64, 0x0f )

DEFINE_GUID( GUID_BATTERY_DISCHARGE_ACTION_1, 0xD8742DCB, 0x3E6A, 0x4B3C, 0xB3, 0xFE, 0x37, 0x46, 0x23, 0xCD, 0xCF, 0x06 )
DEFINE_GUID( GUID_BATTERY_DISCHARGE_LEVEL_1, 0x8183BA9A, 0xE910, 0x48DA, 0x87, 0x69, 0x14, 0xAE, 0x6D, 0xC1, 0x17, 0x0A )
DEFINE_GUID( GUID_BATTERY_DISCHARGE_FLAGS_1, 0xbcded951, 0x187b, 0x4d05, 0xbc, 0xcc, 0xf7, 0xe5, 0x19, 0x60, 0xc2, 0x58 )

DEFINE_GUID( GUID_BATTERY_DISCHARGE_ACTION_2, 0x421CBA38, 0x1A8E, 0x4881, 0xAC, 0x89, 0xE3, 0x3A, 0x8B, 0x04, 0xEC, 0xE4 )
DEFINE_GUID( GUID_BATTERY_DISCHARGE_LEVEL_2, 0x07A07CA2, 0xADAF, 0x40D7, 0xB0, 0x77, 0x53, 0x3A, 0xAD, 0xED, 0x1B, 0xFA )
DEFINE_GUID( GUID_BATTERY_DISCHARGE_FLAGS_2, 0x7fd2f0c4, 0xfeb7, 0x4da3, 0x81, 0x17, 0xe3, 0xfb, 0xed, 0xc4, 0x65, 0x82 )

DEFINE_GUID( GUID_BATTERY_DISCHARGE_ACTION_3, 0x80472613, 0x9780, 0x455E, 0xB3, 0x08, 0x72, 0xD3, 0x00, 0x3C, 0xF2, 0xF8 )
DEFINE_GUID( GUID_BATTERY_DISCHARGE_LEVEL_3, 0x58AFD5A6, 0xC2DD, 0x47D2, 0x9F, 0xBF, 0xEF, 0x70, 0xCC, 0x5C, 0x59, 0x65 )
DEFINE_GUID( GUID_BATTERY_DISCHARGE_FLAGS_3, 0x73613ccf, 0xdbfa, 0x4279, 0x83, 0x56, 0x49, 0x35, 0xf6, 0xbf, 0x62, 0xf3 )

DEFINE_GUID( GUID_PROCESSOR_SETTINGS_SUBGROUP, 0x54533251, 0x82BE, 0x4824, 0x96, 0xC1, 0x47, 0xB6, 0x0B, 0x74, 0x0D, 0x00 )

DEFINE_GUID( GUID_PROCESSOR_THROTTLE_POLICY, 0x57027304, 0x4AF6, 0x4104, 0x92, 0x60, 0xE3, 0xD9, 0x52, 0x48, 0xFC, 0x36 )

PERFSTATE_POLICY_CHANGE_IDEAL 0
PERFSTATE_POLICY_CHANGE_SINGLE 1
PERFSTATE_POLICY_CHANGE_ROCKET 2
PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE 3

PERFSTATE_POLICY_CHANGE_DECREASE_MAX PERFSTATE_POLICY_CHANGE_ROCKET
PERFSTATE_POLICY_CHANGE_INCREASE_MAX PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE

DEFINE_GUID( GUID_PROCESSOR_THROTTLE_MAXIMUM, 0xBC5038F7, 0x23E0, 0x4960, 0x96, 0xDA, 0x33, 0xAB, 0xAF, 0x59, 0x35, 0xEC )

DEFINE_GUID( GUID_PROCESSOR_THROTTLE_MAXIMUM_1, 0xBC5038F7, 0x23E0, 0x4960, 0x96, 0xDA, 0x33, 0xAB, 0xAF, 0x59, 0x35, 0xED )

DEFINE_GUID( GUID_PROCESSOR_THROTTLE_MINIMUM, 0x893DEE8E, 0x2BEF, 0x41E0, 0x89, 0xC6, 0xB5, 0x5D, 0x09, 0x29, 0x96, 0x4C )

DEFINE_GUID( GUID_PROCESSOR_THROTTLE_MINIMUM_1, 0x893DEE8E, 0x2BEF, 0x41E0, 0x89, 0xC6, 0xB5, 0x5D, 0x09, 0x29, 0x96, 0x4D )

DEFINE_GUID(GUID_PROCESSOR_FREQUENCY_LIMIT,
0x75b0ae3f, 0xbce0, 0x45a7, 0x8c, 0x89, 0xc9, 0x61, 0x1c, 0x25, 0xe1, 0x00)

DEFINE_GUID(GUID_PROCESSOR_FREQUENCY_LIMIT_1,
0x75b0ae3f, 0xbce0, 0x45a7, 0x8c, 0x89, 0xc9, 0x61, 0x1c, 0x25, 0xe1, 0x01)

DEFINE_GUID( GUID_PROCESSOR_ALLOW_THROTTLING, 0x3b04d4fd, 0x1cc7, 0x4f23, 0xab, 0x1c, 0xd1, 0x33, 0x78, 0x19, 0xc4, 0xbb )

PROCESSOR_THROTTLE_DISABLED 0
PROCESSOR_THROTTLE_ENABLED 1
PROCESSOR_THROTTLE_AUTOMATIC 2

DEFINE_GUID( GUID_PROCESSOR_IDLESTATE_POLICY, 0x68f262a7, 0xf621, 0x4069, 0xb9, 0xa5, 0x48, 0x74, 0x16, 0x9b, 0xe2, 0x3c)

DEFINE_GUID( GUID_PROCESSOR_PERFSTATE_POLICY, 0xBBDC3814, 0x18E9, 0x4463, 0x8A, 0x55, 0xD1, 0x97, 0x32, 0x7C, 0x45, 0xC0)

DEFINE_GUID( GUID_PROCESSOR_PERF_INCREASE_THRESHOLD, 0x06cadf0e, 0x64ed, 0x448a, 0x89, 0x27, 0xce, 0x7b, 0xf9, 0x0e, 0xb3, 0x5d )

DEFINE_GUID( GUID_PROCESSOR_PERF_INCREASE_THRESHOLD_1, 0x06cadf0e, 0x64ed, 0x448a, 0x89, 0x27, 0xce, 0x7b, 0xf9, 0x0e, 0xb3, 0x5e )

DEFINE_GUID( GUID_PROCESSOR_PERF_DECREASE_THRESHOLD, 0x12a0ab44, 0xfe28, 0x4fa9, 0xb3, 0xbd, 0x4b, 0x64, 0xf4, 0x49, 0x60, 0xa6 )

DEFINE_GUID( GUID_PROCESSOR_PERF_DECREASE_THRESHOLD_1, 0x12a0ab44, 0xfe28, 0x4fa9, 0xb3, 0xbd, 0x4b, 0x64, 0xf4, 0x49, 0x60, 0xa7 )

DEFINE_GUID( GUID_PROCESSOR_PERF_INCREASE_POLICY, 0x465e1f50, 0xb610, 0x473a, 0xab, 0x58, 0x0, 0xd1, 0x7, 0x7d, 0xc4, 0x18)

DEFINE_GUID( GUID_PROCESSOR_PERF_INCREASE_POLICY_1, 0x465e1f50, 0xb610, 0x473a, 0xab, 0x58, 0x0, 0xd1, 0x7, 0x7d, 0xc4, 0x19)

DEFINE_GUID( GUID_PROCESSOR_PERF_DECREASE_POLICY, 0x40fbefc7, 0x2e9d, 0x4d25, 0xa1, 0x85, 0xc, 0xfd, 0x85, 0x74, 0xba, 0xc6)

DEFINE_GUID( GUID_PROCESSOR_PERF_DECREASE_POLICY_1, 0x40fbefc7, 0x2e9d, 0x4d25, 0xa1, 0x85, 0xc, 0xfd, 0x85, 0x74, 0xba, 0xc7)

DEFINE_GUID( GUID_PROCESSOR_PERF_INCREASE_TIME, 0x984cf492, 0x3bed, 0x4488, 0xa8, 0xf9, 0x42, 0x86, 0xc9, 0x7b, 0xf5, 0xaa)

DEFINE_GUID( GUID_PROCESSOR_PERF_INCREASE_TIME_1, 0x984cf492, 0x3bed, 0x4488, 0xa8, 0xf9, 0x42, 0x86, 0xc9, 0x7b, 0xf5, 0xab)

DEFINE_GUID( GUID_PROCESSOR_PERF_DECREASE_TIME, 0xd8edeb9b, 0x95cf, 0x4f95, 0xa7, 0x3c, 0xb0, 0x61, 0x97, 0x36, 0x93, 0xc8)

DEFINE_GUID( GUID_PROCESSOR_PERF_DECREASE_TIME_1, 0xd8edeb9b, 0x95cf, 0x4f95, 0xa7, 0x3c, 0xb0, 0x61, 0x97, 0x36, 0x93, 0xc9)

DEFINE_GUID( GUID_PROCESSOR_PERF_TIME_CHECK, 0x4d2b0152, 0x7d5c, 0x498b, 0x88, 0xe2, 0x34, 0x34, 0x53, 0x92, 0xa2, 0xc5)

DEFINE_GUID(GUID_PROCESSOR_PERF_BOOST_POLICY,
0x45bcc044, 0xd885, 0x43e2, 0x86, 0x5, 0xee, 0xe, 0xc6, 0xe9, 0x6b, 0x59)

PROCESSOR_PERF_BOOST_POLICY_DISABLED 0
PROCESSOR_PERF_BOOST_POLICY_MAX 100

DEFINE_GUID(GUID_PROCESSOR_PERF_BOOST_MODE,
0xbe337238, 0xd82, 0x4146, 0xa9, 0x60, 0x4f, 0x37, 0x49, 0xd4, 0x70, 0xc7)

PROCESSOR_PERF_BOOST_MODE_DISABLED 0
PROCESSOR_PERF_BOOST_MODE_ENABLED 1
PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE 2
PROCESSOR_PERF_BOOST_MODE_EFFICIENT_ENABLED 3
PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE 4
PROCESSOR_PERF_BOOST_MODE_AGGRESSIVE_AT_GUARANTEED 5
PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE_AT_GUARANTEED 6
PROCESSOR_PERF_BOOST_MODE_MAX PROCESSOR_PERF_BOOST_MODE_EFFICIENT_AGGRESSIVE_AT_GUARANTEED

DEFINE_GUID(GUID_PROCESSOR_PERF_AUTONOMOUS_MODE,
0x8baa4a8a, 0x14c6, 0x4451, 0x8e, 0x8b, 0x14, 0xbd, 0xbd, 0x19, 0x75, 0x37)

PROCESSOR_PERF_AUTONOMOUS_MODE_DISABLED 0
PROCESSOR_PERF_AUTONOMOUS_MODE_ENABLED 1

DEFINE_GUID(GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE,
0x36687f9e, 0xe3a5, 0x4dbf, 0xb1, 0xdc, 0x15, 0xeb, 0x38, 0x1c, 0x68, 0x63)

DEFINE_GUID(GUID_PROCESSOR_PERF_ENERGY_PERFORMANCE_PREFERENCE_1,
0x36687f9e, 0xe3a5, 0x4dbf, 0xb1, 0xdc, 0x15, 0xeb, 0x38, 0x1c, 0x68, 0x64)

PROCESSOR_PERF_PERFORMANCE_PREFERENCE 0xff
PROCESSOR_PERF_ENERGY_PREFERENCE 0

DEFINE_GUID(GUID_PROCESSOR_PERF_AUTONOMOUS_ACTIVITY_WINDOW,
0xcfeda3d0, 0x7697, 0x4566, 0xa9, 0x22, 0xa9, 0x8, 0x6c, 0xd4, 0x9d, 0xfa)

PROCESSOR_PERF_MINIMUM_ACTIVITY_WINDOW 0
PROCESSOR_PERF_MAXIMUM_ACTIVITY_WINDOW 1270000000

DEFINE_GUID(GUID_PROCESSOR_DUTY_CYCLING,
0x4e4450b3, 0x6179, 0x4e91, 0xb8, 0xf1, 0x5b, 0xb9, 0x93, 0x8f, 0x81, 0xa1)

PROCESSOR_DUTY_CYCLING_DISABLED 0
PROCESSOR_DUTY_CYCLING_ENABLED 1

DEFINE_GUID( GUID_PROCESSOR_IDLE_ALLOW_SCALING, 0x6c2993b0, 0x8f48, 0x481f, 0xbc, 0xc6, 0x0, 0xdd, 0x27, 0x42, 0xaa, 0x6)

DEFINE_GUID( GUID_PROCESSOR_IDLE_DISABLE, 0x5d76a2ca, 0xe8c0, 0x402f, 0xa1, 0x33, 0x21, 0x58, 0x49, 0x2d, 0x58, 0xad)

DEFINE_GUID( GUID_PROCESSOR_IDLE_STATE_MAXIMUM, 0x9943e905, 0x9a30, 0x4ec1, 0x9b, 0x99, 0x44, 0xdd, 0x3b, 0x76, 0xf7, 0xa2)

DEFINE_GUID( GUID_PROCESSOR_IDLE_TIME_CHECK, 0xc4581c31, 0x89ab, 0x4597, 0x8e, 0x2b, 0x9c, 0x9c, 0xab, 0x44, 0xe, 0x6b)

DEFINE_GUID( GUID_PROCESSOR_IDLE_DEMOTE_THRESHOLD, 0x4b92d758, 0x5a24, 0x4851, 0xa4, 0x70, 0x81, 0x5d, 0x78, 0xae, 0xe1, 0x19)

DEFINE_GUID( GUID_PROCESSOR_IDLE_PROMOTE_THRESHOLD, 0x7b224883, 0xb3cc, 0x4d79, 0x81, 0x9f, 0x83, 0x74, 0x15, 0x2c, 0xbe, 0x7c)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_INCREASE_THRESHOLD, 0xdf142941, 0x20f3, 0x4edf, 0x9a, 0x4a, 0x9c, 0x83, 0xd3, 0xd7, 0x17, 0xd1 )

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_DECREASE_THRESHOLD, 0x68dd2f27, 0xa4ce, 0x4e11, 0x84, 0x87, 0x37, 0x94, 0xe4, 0x13, 0x5d, 0xfa)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_INCREASE_POLICY, 0xc7be0679, 0x2817, 0x4d69, 0x9d, 0x02, 0x51, 0x9a, 0x53, 0x7e, 0xd0, 0xc6)

CORE_PARKING_POLICY_CHANGE_IDEAL 0
CORE_PARKING_POLICY_CHANGE_SINGLE 1
CORE_PARKING_POLICY_CHANGE_ROCKET 2
CORE_PARKING_POLICY_CHANGE_MULTISTEP 3
CORE_PARKING_POLICY_CHANGE_MAX CORE_PARKING_POLICY_CHANGE_MULTISTEP

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_DECREASE_POLICY, 0x71021b41, 0xc749, 0x4d21, 0xbe, 0x74, 0xa0, 0x0f, 0x33, 0x5d, 0x58, 0x2b)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_MAX_CORES, 0xea062031, 0x0e34, 0x4ff1, 0x9b, 0x6d, 0xeb, 0x10, 0x59, 0x33, 0x40, 0x28)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_MAX_CORES_1, 0xea062031, 0x0e34, 0x4ff1, 0x9b, 0x6d, 0xeb, 0x10, 0x59, 0x33, 0x40, 0x29)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_MIN_CORES, 0x0cc5b647, 0xc1df, 0x4637, 0x89, 0x1a, 0xde, 0xc3, 0x5c, 0x31, 0x85, 0x83)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_MIN_CORES_1, 0x0cc5b647, 0xc1df, 0x4637, 0x89, 0x1a, 0xde, 0xc3, 0x5c, 0x31, 0x85, 0x84)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_INCREASE_TIME, 0x2ddd5a84, 0x5a71, 0x437e, 0x91, 0x2a, 0xdb, 0x0b, 0x8c, 0x78, 0x87, 0x32)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_DECREASE_TIME, 0xdfd10d17, 0xd5eb, 0x45dd, 0x87, 0x7a, 0x9a, 0x34, 0xdd, 0xd1, 0x5c, 0x82)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_DECREASE_FACTOR, 0x8f7b45e3, 0xc393, 0x480a, 0x87, 0x8c, 0xf6, 0x7a, 0xc3, 0xd0, 0x70, 0x82)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_AFFINITY_HISTORY_THRESHOLD, 0x5b33697b, 0xe89d, 0x4d38, 0xaa, 0x46, 0x9e, 0x7d, 0xfb, 0x7c, 0xd2, 0xf9)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_AFFINITY_WEIGHTING, 0xe70867f1, 0xfa2f, 0x4f4e, 0xae, 0xa1, 0x4d, 0x8a, 0x0b, 0xa2, 0x3b, 0x20)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_DECREASE_FACTOR, 0x1299023c, 0xbc28, 0x4f0a, 0x81, 0xec, 0xd3, 0x29, 0x5a, 0x8d, 0x81, 0x5d)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_HISTORY_THRESHOLD, 0x9ac18e92, 0xaa3c, 0x4e27, 0xb3, 0x07, 0x01, 0xae, 0x37, 0x30, 0x71, 0x29)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_WEIGHTING, 0x8809c2d8, 0xb155, 0x42d4, 0xbc, 0xda, 0x0d, 0x34, 0x56, 0x51, 0xb1, 0xdb)

DEFINE_GUID( GUID_PROCESSOR_CORE_PARKING_OVER_UTILIZATION_THRESHOLD, 0x943c8cb6, 0x6f93, 0x4227, 0xad, 0x87, 0xe9, 0xa3, 0xfe, 0xec, 0x08, 0xd1)

DEFINE_GUID( GUID_PROCESSOR_PARKING_CORE_OVERRIDE, 0xa55612aa, 0xf624, 0x42c6, 0xa4, 0x43, 0x73, 0x97, 0xd0, 0x64, 0xc0, 0x4f)

DEFINE_GUID( GUID_PROCESSOR_PARKING_PERF_STATE, 0x447235c7, 0x6a8d, 0x4cc0, 0x8e, 0x24, 0x9e, 0xaf, 0x70, 0xb9, 0x6e, 0x2b)

DEFINE_GUID( GUID_PROCESSOR_PARKING_PERF_STATE_1, 0x447235c7, 0x6a8d, 0x4cc0, 0x8e, 0x24, 0x9e, 0xaf, 0x70, 0xb9, 0x6e, 0x2c)

DEFINE_GUID( GUID_PROCESSOR_PARKING_CONCURRENCY_THRESHOLD, 0x2430ab6f, 0xa520, 0x44a2, 0x96, 0x01, 0xf7, 0xf2, 0x3b, 0x51, 0x34, 0xb1)

DEFINE_GUID( GUID_PROCESSOR_PARKING_HEADROOM_THRESHOLD, 0xf735a673, 0x2066, 0x4f80, 0xa0, 0xc5, 0xdd, 0xee, 0x0c, 0xf1, 0xbf, 0x5d)

DEFINE_GUID( GUID_PROCESSOR_PARKING_DISTRIBUTION_THRESHOLD, 0x4bdaf4e9, 0xd103, 0x46d7, 0xa5, 0xf0, 0x62, 0x80, 0x12, 0x16, 0x16, 0xef)

DEFINE_GUID( GUID_PROCESSOR_PERF_HISTORY, 0x7d24baa7, 0x0b84, 0x480f, 0x84, 0x0c, 0x1b, 0x07, 0x43, 0xc0, 0x0f, 0x5f)

DEFINE_GUID( GUID_PROCESSOR_PERF_HISTORY_1, 0x7d24baa7, 0x0b84, 0x480f, 0x84, 0x0c, 0x1b, 0x07, 0x43, 0xc0, 0x0f, 0x60)

DEFINE_GUID( GUID_PROCESSOR_PERF_INCREASE_HISTORY, 0x99b3ef01, 0x752f, 0x46a1, 0x80, 0xfb, 0x77, 0x30, 0x1, 0x1f, 0x23, 0x54)

DEFINE_GUID( GUID_PROCESSOR_PERF_DECREASE_HISTORY, 0x300f6f8, 0xabd6, 0x45a9, 0xb7, 0x4f, 0x49, 0x8, 0x69, 0x1a, 0x40, 0xb5)

DEFINE_GUID( GUID_PROCESSOR_PERF_CORE_PARKING_HISTORY, 0x77d7f282, 0x8f1a, 0x42cd, 0x85, 0x37, 0x45, 0x45, 0xa, 0x83, 0x9b, 0xe8)

DEFINE_GUID( GUID_PROCESSOR_PERF_LATENCY_HINT, 0x0822df31, 0x9c83, 0x441c, 0xa0, 0x79, 0x0d, 0xe4, 0xcf, 0x00, 0x9c, 0x7b)

DEFINE_GUID( GUID_PROCESSOR_PERF_LATENCY_HINT_PERF, 0x619b7505, 0x3b, 0x4e82, 0xb7, 0xa6, 0x4d, 0xd2, 0x9c, 0x30, 0x9, 0x71)

DEFINE_GUID( GUID_PROCESSOR_PERF_LATENCY_HINT_PERF_1, 0x619b7505, 0x3b, 0x4e82, 0xb7, 0xa6, 0x4d, 0xd2, 0x9c, 0x30, 0x9, 0x72)

DEFINE_GUID( GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK, 0x616cdaa5, 0x695e, 0x4545, 0x97, 0xad, 0x97, 0xdc, 0x2d, 0x1b, 0xdd, 0x88)

DEFINE_GUID( GUID_PROCESSOR_LATENCY_HINT_MIN_UNPARK_1, 0x616cdaa5, 0x695e, 0x4545, 0x97, 0xad, 0x97, 0xdc, 0x2d, 0x1b, 0xdd, 0x89)

DEFINE_GUID( GUID_PROCESSOR_DISTRIBUTE_UTILITY, 0xe0007330, 0xf589, 0x42ed, 0xa4, 0x01, 0x5d, 0xdb, 0x10, 0xe7, 0x85, 0xd3)

DEFINE_GUID( GUID_PROCESSOR_HETEROGENEOUS_POLICY, 0x7f2f5cfa, 0xf10c, 0x4823, 0xb5, 0xe1, 0xe9, 0x3a, 0xe8, 0x5f, 0x46, 0xb5)

DEFINE_GUID( GUID_PROCESSOR_HETERO_DECREASE_TIME, 0x7f2492b6, 0x60b1, 0x45e5, 0xae, 0x55, 0x77, 0x3f, 0x8c, 0xd5, 0xca, 0xec)

DEFINE_GUID( GUID_PROCESSOR_HETERO_INCREASE_TIME, 0x4009efa7, 0xe72d, 0x4cba, 0x9e, 0xdf, 0x91, 0x08, 0x4e, 0xa8, 0xcb, 0xc3)

DEFINE_GUID( GUID_PROCESSOR_HETERO_DECREASE_THRESHOLD, 0xf8861c27, 0x95e7, 0x475c, 0x86, 0x5b, 0x13, 0xc0, 0xcb, 0x3f, 0x9d, 0x6b)

DEFINE_GUID( GUID_PROCESSOR_HETERO_INCREASE_THRESHOLD, 0xb000397d, 0x9b0b, 0x483d, 0x98, 0xc9, 0x69, 0x2a, 0x60, 0x60, 0xcf, 0xbf)

DEFINE_GUID( GUID_PROCESSOR_CLASS0_FLOOR_PERF, 0xfddc842b, 0x8364, 0x4edc, 0x94, 0xcf, 0xc1, 0x7f, 0x60, 0xde, 0x1c, 0x80)

DEFINE_GUID( GUID_PROCESSOR_CLASS1_INITIAL_PERF, 0x1facfc65, 0xa930, 0x4bc5, 0x9f, 0x38, 0x50, 0x4e, 0xc0, 0x97, 0xbb, 0xc0)

DEFINE_GUID( GUID_PROCESSOR_THREAD_SCHEDULING_POLICY,
0x93b8b6dc, 0x698, 0x4d1c, 0x9e, 0xe4, 0x6, 0x44, 0xe9, 0x0, 0xc8, 0x5d)

DEFINE_GUID( GUID_PROCESSOR_SHORT_THREAD_SCHEDULING_POLICY,
0xbae08b81, 0x2d5e, 0x4688, 0xad, 0x6a, 0x13, 0x24, 0x33, 0x56, 0x65, 0x4b)

DEFINE_GUID( GUID_SYSTEM_COOLING_POLICY, 0x94D3A615, 0xA899, 0x4AC5, 0xAE, 0x2B, 0xE4, 0xD8, 0xF6, 0x34, 0x36, 0x7F)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD,
0x38b8383d, 0xcce0, 0x4c79, 0x9e, 0x3e, 0x56, 0xa4, 0xf1, 0x7c, 0xc4, 0x80)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_DISABLE_THRESHOLD_1,
0x38b8383d, 0xcce0, 0x4c79, 0x9e, 0x3e, 0x56, 0xa4, 0xf1, 0x7c, 0xc4, 0x81)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD,
0x3d44e256, 0x7222, 0x4415, 0xa9, 0xed, 0x9c, 0x45, 0xfa, 0x3d, 0xd8, 0x30)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_ENABLE_THRESHOLD_1,
0x3d44e256, 0x7222, 0x4415, 0xa9, 0xed, 0x9c, 0x45, 0xfa, 0x3d, 0xd8, 0x31)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME,
0xf565999f, 0x3fb0, 0x411a, 0xa2, 0x26, 0x3f, 0x1, 0x98, 0xde, 0xc1, 0x30)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_DISABLE_TIME_1,
0xf565999f, 0x3fb0, 0x411a, 0xa2, 0x26, 0x3f, 0x1, 0x98, 0xde, 0xc1, 0x31)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME,
0x3d915188, 0x7830, 0x49ae, 0xa7, 0x9a, 0xf, 0xb0, 0xa1, 0xe5, 0xa2, 0x0)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_ENABLE_TIME_1,
0x3d915188, 0x7830, 0x49ae, 0xa7, 0x9a, 0xf, 0xb0, 0xa1, 0xe5, 0xa2, 0x1)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING,
0x4427c73b, 0x9756, 0x4a5c, 0xb8, 0x4b, 0xc7, 0xbd, 0xa7, 0x9c, 0x73, 0x20)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_EPP_CEILING_1,
0x4427c73b, 0x9756, 0x4a5c, 0xb8, 0x4b, 0xc7, 0xbd, 0xa7, 0x9c, 0x73, 0x21)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR,
0xce8e92ee, 0x6a86, 0x4572, 0xbf, 0xe0, 0x20, 0xc2, 0x1d, 0x3, 0xcd, 0x40)

DEFINE_GUID(GUID_PROCESSOR_RESPONSIVENESS_PERF_FLOOR_1,
0xce8e92ee, 0x6a86, 0x4572, 0xbf, 0xe0, 0x20, 0xc2, 0x1d, 0x3, 0xcd, 0x41)

DEFINE_GUID( GUID_LOCK_CONSOLE_ON_WAKE, 0x0E796BDB, 0x100D, 0x47D6, 0xA2, 0xD5, 0xF7, 0xD2, 0xDA, 0xA5, 0x1F, 0x51 )

DEFINE_GUID( GUID_DEVICE_IDLE_POLICY, 0x4faab71a, 0x92e5, 0x4726, 0xb5, 0x31, 0x22, 0x45, 0x59, 0x67, 0x2d, 0x19 )

POWER_DEVICE_IDLE_POLICY_PERFORMANCE 0
POWER_DEVICE_IDLE_POLICY_CONSERVATIVE 1

DEFINE_GUID( GUID_CONNECTIVITY_IN_STANDBY, 0xF15576E8, 0x98B7, 0x4186, 0xB9, 0x44, 0xEA, 0xFA, 0x66, 0x44, 0x02, 0xD9 )

POWER_CONNECTIVITY_IN_STANDBY_DISABLED 0
POWER_CONNECTIVITY_IN_STANDBY_ENABLED 1
POWER_CONNECTIVITY_IN_STANDBY_SYSTEM_MANAGED 2

DEFINE_GUID( GUID_DISCONNECTED_STANDBY_MODE, 0x68AFB2D9, 0xEE95, 0x47A8, 0x8F, 0x50, 0x41, 0x15, 0x08, 0x80, 0x73, 0xB1 )

POWER_DISCONNECTED_STANDBY_MODE_NORMAL 0
POWER_DISCONNECTED_STANDBY_MODE_AGGRESSIVE 1

DEFINE_GUID( GUID_ACDC_POWER_SOURCE, 0x5D3E9A59, 0xE9D5, 0x4B00, 0xA6, 0xBD, 0xFF, 0x34, 0xFF, 0x51, 0x65, 0x48 )

DEFINE_GUID( GUID_LIDSWITCH_STATE_CHANGE, 0xBA3E0F4D, 0xB817, 0x4094, 0xA2, 0xD1, 0xD5, 0x63, 0x79, 0xE6, 0xA0, 0xF3 )

DEFINE_GUID( GUID_BATTERY_PERCENTAGE_REMAINING, 0xA7AD8041, 0xB45A, 0x4CAE, 0x87, 0xA3, 0xEE, 0xCB, 0xB4, 0x68, 0xA9, 0xE1 )

DEFINE_GUID( GUID_BATTERY_COUNT, 0x7d263f15, 0xfca4, 0x49e5, 0x85, 0x4b, 0xa9, 0xf2, 0xbf, 0xbd, 0x5c, 0x24 )

DEFINE_GUID( GUID_GLOBAL_USER_PRESENCE, 0x786e8a1d, 0xb427, 0x4344, 0x92, 0x7, 0x9, 0xe7, 0xb, 0xdc, 0xbe, 0xa9 )

DEFINE_GUID( GUID_SESSION_DISPLAY_STATUS, 0x2b84c20e, 0xad23, 0x4ddf, 0x93, 0xdb, 0x5, 0xff, 0xbd, 0x7e, 0xfc, 0xa5 )

DEFINE_GUID( GUID_SESSION_USER_PRESENCE, 0x3c0f4548, 0xc03f, 0x4c4d, 0xb9, 0xf2, 0x23, 0x7e, 0xde, 0x68, 0x63, 0x76 )

DEFINE_GUID( GUID_IDLE_BACKGROUND_TASK, 0x515C31D8, 0xF734, 0x163D, 0xA0, 0xFD, 0x11, 0xA0, 0x8C, 0x91, 0xE8, 0xF1 )

DEFINE_GUID( GUID_BACKGROUND_TASK_NOTIFICATION, 0xCF23F240, 0x2A54, 0x48D8, 0xB1, 0x14, 0xDE, 0x15, 0x18, 0xFF, 0x05, 0x2E )

DEFINE_GUID( GUID_APPLAUNCH_BUTTON, 0x1A689231, 0x7399, 0x4E9A, 0x8F, 0x99, 0xB7, 0x1F, 0x99, 0x9D, 0xB3, 0xFA )

DEFINE_GUID( GUID_PCIEXPRESS_SETTINGS_SUBGROUP, 0x501a4d13, 0x42af,0x4429, 0x9f, 0xd1, 0xa8, 0x21, 0x8c, 0x26, 0x8e, 0x20 )

DEFINE_GUID( GUID_PCIEXPRESS_ASPM_POLICY, 0xee12f906, 0xd277, 0x404b, 0xb6, 0xda, 0xe5, 0xfa, 0x1a, 0x57, 0x6d, 0xf5 )

DEFINE_GUID( GUID_ENABLE_SWITCH_FORCED_SHUTDOWN, 0x833a6b62, 0xdfa4, 0x46d1, 0x82, 0xf8, 0xe0, 0x9e, 0x34, 0xd0, 0x29, 0xd6 )

DEFINE_GUID(GUID_INTSTEER_SUBGROUP,
0x48672f38, 0x7a9a, 0x4bb2, 0x8b, 0xf8, 0x3d, 0x85, 0xbe, 0x19, 0xde, 0x4e)

DEFINE_GUID(GUID_INTSTEER_MODE,
0x2bfc24f9, 0x5ea2, 0x4801, 0x82, 0x13, 0x3d, 0xba, 0xe0, 0x1a, 0xa3, 0x9d)

DEFINE_GUID(GUID_INTSTEER_LOAD_PER_PROC_TRIGGER,
0x73cde64d, 0xd720, 0x4bb2, 0xa8, 0x60, 0xc7, 0x55, 0xaf, 0xe7, 0x7e, 0xf2)

DEFINE_GUID(GUID_INTSTEER_TIME_UNPARK_TRIGGER,
0xd6ba4903, 0x386f, 0x4c2c, 0x8a, 0xdb, 0x5c, 0x21, 0xb3, 0x32, 0x8d, 0x25)

DEFINE_GUID(GUID_GRAPHICS_SUBGROUP, 0x5fb4938d, 0x1ee8, 0x4b0f, 0x9a, 0x3c, 0x50, 0x36, 0xb0, 0xab, 0x99, 0x5c)

DEFINE_GUID(GUID_GPU_PREFERENCE_POLICY, 0xdd848b2a, 0x8a5d, 0x4451, 0x9a, 0xe2, 0x39, 0xcd, 0x41, 0x65, 0x8f, 0x6c)

DEFINE_GUID(GUID_MIXED_REALITY_MODE,
0x1e626b4e, 0xcf04, 0x4f8d, 0x9c, 0xc7, 0xc9, 0x7c, 0x5b, 0xf, 0x23, 0x91)

DEFINE_GUID(GUID_SPR_ACTIVE_SESSION_CHANGE,
0xe24ce38, 0xc393, 0x4742, 0xbd, 0xb1, 0x74, 0x4f, 0x4b, 0x9e, 0xe0, 0x8e)

typedef enum _SYSTEM_POWER_STATE {
 PowerSystemUnspecified = 0,
 PowerSystemWorking = 1,
 PowerSystemSleeping1 = 2,
 PowerSystemSleeping2 = 3,
 PowerSystemSleeping3 = 4,
 PowerSystemHibernate = 5,
 PowerSystemShutdown = 6,
 PowerSystemMaximum = 7
} SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE

POWER_SYSTEM_MAXIMUM 7

typedef enum {
 PowerActionNone = 0,
 PowerActionReserved,
 PowerActionSleep,
 PowerActionHibernate,
 PowerActionShutdown,
 PowerActionShutdownReset,
 PowerActionShutdownOff,
 PowerActionWarmEject,
 PowerActionDisplayOff
} POWER_ACTION, *PPOWER_ACTION

typedef enum _DEVICE_POWER_STATE {
 PowerDeviceUnspecified = 0,
 PowerDeviceD0,
 PowerDeviceD1,
 PowerDeviceD2,
 PowerDeviceD3,
 PowerDeviceMaximum
} DEVICE_POWER_STATE, *PDEVICE_POWER_STATE

typedef enum _MONITOR_DISPLAY_STATE {
 PowerMonitorOff = 0,
 PowerMonitorOn,
 PowerMonitorDim
} MONITOR_DISPLAY_STATE, *PMONITOR_DISPLAY_STATE

typedef enum _USER_ACTIVITY_PRESENCE {
 PowerUserPresent = 0,
 PowerUserNotPresent,
 PowerUserInactive,
 PowerUserMaximum,
 PowerUserInvalid = PowerUserMaximum
} USER_ACTIVITY_PRESENCE, *PUSER_ACTIVITY_PRESENCE

ES_SYSTEM_REQUIRED = (DWORD)0x00000001
ES_DISPLAY_REQUIRED = (DWORD)0x00000002
ES_USER_PRESENT = (DWORD)0x00000004
ES_AWAYMODE_REQUIRED = (DWORD)0x00000040
ES_CONTINUOUS = (DWORD)0x80000000

typedef DWORD EXECUTION_STATE, *PEXECUTION_STATE

typedef enum {
 LT_DONT_CARE,
 LT_LOWEST_LATENCY
} LATENCY_TIME

DIAGNOSTIC_REASON_VERSION 0

DIAGNOSTIC_REASON_SIMPLE_STRING 0x00000001
DIAGNOSTIC_REASON_DETAILED_STRING 0x00000002
DIAGNOSTIC_REASON_NOT_SPECIFIED 0x80000000
DIAGNOSTIC_REASON_INVALID_FLAGS = ~0x80000007

POWER_REQUEST_CONTEXT_VERSION DIAGNOSTIC_REASON_VERSION

POWER_REQUEST_CONTEXT_SIMPLE_STRING DIAGNOSTIC_REASON_SIMPLE_STRING
POWER_REQUEST_CONTEXT_DETAILED_STRING DIAGNOSTIC_REASON_DETAILED_STRING

typedef enum _POWER_REQUEST_TYPE {
 PowerRequestDisplayRequired,
 PowerRequestSystemRequired,
 PowerRequestAwayModeRequired,
 PowerRequestExecutionRequired
} POWER_REQUEST_TYPE, *PPOWER_REQUEST_TYPE

#if = NTDDI_VERSION >= NTDDI_WINXP

PDCAP_D0_SUPPORTED 0x00000001
PDCAP_D1_SUPPORTED 0x00000002
PDCAP_D2_SUPPORTED 0x00000004
PDCAP_D3_SUPPORTED 0x00000008
PDCAP_WAKE_FROM_D0_SUPPORTED 0x00000010
PDCAP_WAKE_FROM_D1_SUPPORTED 0x00000020
PDCAP_WAKE_FROM_D2_SUPPORTED 0x00000040
PDCAP_WAKE_FROM_D3_SUPPORTED 0x00000080
PDCAP_WARM_EJECT_SUPPORTED 0x00000100

typedef struct CM_Power_Data_s {
 DWORD PD_Size
 DEVICE_POWER_STATE PD_MostRecentPowerState
 DWORD PD_Capabilities
 DWORD PD_D1Latency
 DWORD PD_D2Latency
 DWORD PD_D3Latency
 DEVICE_POWER_STATE PD_PowerStateMapping[POWER_SYSTEM_MAXIMUM]
 SYSTEM_POWER_STATE PD_DeepestSystemWake
} CM_POWER_DATA, *PCM_POWER_DATA

#endif

typedef enum {
 SystemPowerPolicyAc,
 SystemPowerPolicyDc,
 VerifySystemPolicyAc,
 VerifySystemPolicyDc,
 SystemPowerCapabilities,
 SystemBatteryState,
 SystemPowerStateHandler,
 ProcessorStateHandler,
 SystemPowerPolicyCurrent,
 AdministratorPowerPolicy,
 SystemReserveHiberFile,
 ProcessorInformation,
 SystemPowerInformation,
 ProcessorStateHandler2,
 LastWakeTime,
 LastSleepTime,
 SystemExecutionState,
 SystemPowerStateNotifyHandler,
 ProcessorPowerPolicyAc,
 ProcessorPowerPolicyDc,
 VerifyProcessorPowerPolicyAc,
 VerifyProcessorPowerPolicyDc,
 ProcessorPowerPolicyCurrent,
 SystemPowerStateLogging,
 SystemPowerLoggingEntry,
 SetPowerSettingValue,
 NotifyUserPowerSetting,
 PowerInformationLevelUnused0,
 SystemMonitorHiberBootPowerOff,
 SystemVideoState,
 TraceApplicationPowerMessage,
 TraceApplicationPowerMessageEnd,
 ProcessorPerfStates,
 ProcessorIdleStates,
 ProcessorCap,
 SystemWakeSource,
 SystemHiberFileInformation,
 TraceServicePowerMessage,
 ProcessorLoad,
 PowerShutdownNotification,
 MonitorCapabilities,
 SessionPowerInit,
 SessionDisplayState,
 PowerRequestCreate,
 PowerRequestAction,
 GetPowerRequestList,
 ProcessorInformationEx,
 NotifyUserModeLegacyPowerEvent,
 GroupPark,
 ProcessorIdleDomains,
 WakeTimerList,
 SystemHiberFileSize,
 ProcessorIdleStatesHv,
 ProcessorPerfStatesHv,
 ProcessorPerfCapHv,
 ProcessorSetIdle,
 LogicalProcessorIdling,
 UserPresence,
 PowerSettingNotificationName,
 GetPowerSettingValue,
 IdleResiliency,
 SessionRITState,
 SessionConnectNotification,
 SessionPowerCleanup,
 SessionLockState,
 SystemHiberbootState,
 PlatformInformation,
 PdcInvocation,
 MonitorInvocation,
 FirmwareTableInformationRegistered,
 SetShutdownSelectedTime,
 SuspendResumeInvocation,
 PlmPowerRequestCreate,
 ScreenOff,
 CsDeviceNotification,
 PlatformRole,
 LastResumePerformance,
 DisplayBurst,
 ExitLatencySamplingPercentage,
 RegisterSpmPowerSettings,
 PlatformIdleStates,
 ProcessorIdleVeto,
 PlatformIdleVeto,
 SystemBatteryStatePrecise,
 ThermalEvent,
 PowerRequestActionInternal,
 BatteryDeviceState,
 PowerInformationInternal,
 ThermalStandby,
 SystemHiberFileType,
 PhysicalPowerButtonPress,
 QueryPotentialDripsConstraint,
 EnergyTrackerCreate,
 EnergyTrackerQuery,
 UpdateBlackBoxRecorder,
 PowerInformationLevelMaximum
} POWER_INFORMATION_LEVEL

typedef enum {
 UserNotPresent = 0,
 UserPresent = 1,
 UserUnknown = 0xff
} POWER_USER_PRESENCE_TYPE, *PPOWER_USER_PRESENCE_TYPE

typedef struct _POWER_USER_PRESENCE {
 POWER_USER_PRESENCE_TYPE UserPresence
} POWER_USER_PRESENCE, *PPOWER_USER_PRESENCE

typedef struct _POWER_SESSION_CONNECT {
 BOOLEAN Connected
 BOOLEAN Console
} POWER_SESSION_CONNECT, *PPOWER_SESSION_CONNECT

typedef struct _POWER_SESSION_TIMEOUTS {
 DWORD InputTimeout
 DWORD DisplayTimeout
} POWER_SESSION_TIMEOUTS, *PPOWER_SESSION_TIMEOUTS

typedef struct _POWER_SESSION_RIT_STATE {
 BOOLEAN Active
 DWORD LastInputTime
} POWER_SESSION_RIT_STATE, *PPOWER_SESSION_RIT_STATE

typedef struct _POWER_SESSION_WINLOGON {
 DWORD SessionId
 BOOLEAN Console
 BOOLEAN Locked
} POWER_SESSION_WINLOGON, *PPOWER_SESSION_WINLOGON

typedef struct _POWER_IDLE_RESILIENCY {
 DWORD CoalescingTimeout
 DWORD IdleResiliencyPeriod
} POWER_IDLE_RESILIENCY, *PPOWER_IDLE_RESILIENCY

typedef enum {
 MonitorRequestReasonUnknown,
 MonitorRequestReasonPowerButton,
 MonitorRequestReasonRemoteConnection,
 MonitorRequestReasonScMonitorpower,
 MonitorRequestReasonUserInput,
 MonitorRequestReasonAcDcDisplayBurst,
 MonitorRequestReasonUserDisplayBurst,
 MonitorRequestReasonPoSetSystemState,
 MonitorRequestReasonSetThreadExecutionState,
 MonitorRequestReasonFullWake,
 MonitorRequestReasonSessionUnlock,
 MonitorRequestReasonScreenOffRequest,
 MonitorRequestReasonIdleTimeout,
 MonitorRequestReasonPolicyChange,
 MonitorRequestReasonSleepButton,
 MonitorRequestReasonLid,
 MonitorRequestReasonBatteryCountChange,
 MonitorRequestReasonGracePeriod,
 MonitorRequestReasonPnP,
 MonitorRequestReasonDP,
 MonitorRequestReasonSxTransition,
 MonitorRequestReasonSystemIdle,
 MonitorRequestReasonNearProximity,
 MonitorRequestReasonThermalStandby,
 MonitorRequestReasonResumePdc,
 MonitorRequestReasonResumeS4,
 MonitorRequestReasonTerminal,
 MonitorRequestReasonPdcSignal,
 MonitorRequestReasonAcDcDisplayBurstSuppressed,
 MonitorRequestReasonSystemStateEntered,
 MonitorRequestReasonWinrt,
 MonitorRequestReasonUserInputKeyboard,
 MonitorRequestReasonUserInputMouse,
 MonitorRequestReasonUserInputTouch,
 MonitorRequestReasonUserInputPen,
 MonitorRequestReasonUserInputAccelerometer,
 MonitorRequestReasonUserInputHid,
 MonitorRequestReasonUserInputPoUserPresent,
 MonitorRequestReasonUserInputSessionSwitch,
 MonitorRequestReasonUserInputInitialization,
 MonitorRequestReasonPdcSignalWindowsMobilePwrNotif,
 MonitorRequestReasonPdcSignalWindowsMobileShell,
 MonitorRequestReasonPdcSignalHeyCortana,
 MonitorRequestReasonPdcSignalHolographicShell,
 MonitorRequestReasonPdcSignalFingerprint,
 MonitorRequestReasonDirectedDrips,
 MonitorRequestReasonMax
} POWER_MONITOR_REQUEST_REASON

typedef enum _POWER_MONITOR_REQUEST_TYPE {
 MonitorRequestTypeOff,
 MonitorRequestTypeOnAndPresent,
 MonitorRequestTypeToggleOn
} POWER_MONITOR_REQUEST_TYPE

typedef struct _POWER_MONITOR_INVOCATION {
 BOOLEAN Console
 POWER_MONITOR_REQUEST_REASON RequestReason
} POWER_MONITOR_INVOCATION, *PPOWER_MONITOR_INVOCATION

typedef struct _RESUME_PERFORMANCE {
 DWORD PostTimeMs
 ULONGLONG TotalResumeTimeMs
 ULONGLONG ResumeCompleteTimestamp
} RESUME_PERFORMANCE, *PRESUME_PERFORMANCE

typedef enum {
 PoAc,
 PoDc,
 PoHot,
 PoConditionMaximum
} SYSTEM_POWER_CONDITION

typedef struct {

 DWORD Version
 GUID Guid

 SYSTEM_POWER_CONDITION PowerCondition
 DWORD DataLength
 BYTE Data[ANYSIZE_ARRAY]
} SET_POWER_SETTING_VALUE, *PSET_POWER_SETTING_VALUE

POWER_SETTING_VALUE_VERSION = 0x1

typedef struct {
 GUID Guid
} NOTIFY_USER_POWER_SETTING, *PNOTIFY_USER_POWER_SETTING

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE {

 LARGE_INTEGER ActivationTime
 DWORD Flags
 DWORD ButtonInstanceID

} APPLICATIONLAUNCH_SETTING_VALUE, *PAPPLICATIONLAUNCH_SETTING_VALUE

typedef enum _POWER_PLATFORM_ROLE {
 PlatformRoleUnspecified = 0,
 PlatformRoleDesktop,
 PlatformRoleMobile,
 PlatformRoleWorkstation,
 PlatformRoleEnterpriseServer,
 PlatformRoleSOHOServer,
 PlatformRoleAppliancePC,
 PlatformRolePerformanceServer,
 PlatformRoleSlate,
 PlatformRoleMaximum
} POWER_PLATFORM_ROLE, *PPOWER_PLATFORM_ROLE

POWER_PLATFORM_ROLE_V1 = 0x00000001
POWER_PLATFORM_ROLE_V1_MAX = PlatformRolePerformanceServer + 1

POWER_PLATFORM_ROLE_V2 = 0x00000002
POWER_PLATFORM_ROLE_V2_MAX = PlatformRoleSlate + 1

#if = NTDDI_VERSION >= NTDDI_WIN8

POWER_PLATFORM_ROLE_VERSION POWER_PLATFORM_ROLE_V2
POWER_PLATFORM_ROLE_VERSION_MAX POWER_PLATFORM_ROLE_V2_MAX

#else

POWER_PLATFORM_ROLE_VERSION POWER_PLATFORM_ROLE_V1
POWER_PLATFORM_ROLE_VERSION_MAX POWER_PLATFORM_ROLE_V1_MAX

#endif

typedef struct _POWER_PLATFORM_INFORMATION {
 BOOLEAN AoAc
} POWER_PLATFORM_INFORMATION, *PPOWER_PLATFORM_INFORMATION

#if = NTDDI_VERSION >= NTDDI_WINXP) || !defined(_BATCLASS_
typedef struct {
 DWORD Granularity
 DWORD Capacity
} BATTERY_REPORTING_SCALE, *PBATTERY_REPORTING_SCALE
#endif

typedef struct {
 DWORD Frequency
 DWORD Flags
 DWORD PercentFrequency
} PPM_WMI_LEGACY_PERFSTATE, *PPPM_WMI_LEGACY_PERFSTATE

typedef struct {
 DWORD Latency
 DWORD Power
 DWORD TimeCheck
 BYTE PromotePercent
 BYTE DemotePercent
 BYTE StateType
 BYTE Reserved
 DWORD StateFlags
 DWORD Context
 DWORD IdleHandler
 DWORD Reserved1
} PPM_WMI_IDLE_STATE, *PPPM_WMI_IDLE_STATE

typedef struct {
 DWORD Type
 DWORD Count
 DWORD TargetState
 DWORD OldState
 DWORD64 TargetProcessors
 PPM_WMI_IDLE_STATE State[ANYSIZE_ARRAY]
} PPM_WMI_IDLE_STATES, *PPPM_WMI_IDLE_STATES

typedef struct {
 DWORD Type
 DWORD Count
 DWORD TargetState
 DWORD OldState
 PVOID TargetProcessors
 PPM_WMI_IDLE_STATE State[ANYSIZE_ARRAY]
} PPM_WMI_IDLE_STATES_EX, *PPPM_WMI_IDLE_STATES_EX

typedef struct {
 DWORD Frequency
 DWORD Power
 BYTE PercentFrequency
 BYTE IncreaseLevel
 BYTE DecreaseLevel
 BYTE Type
 DWORD IncreaseTime
 DWORD DecreaseTime
 DWORD64 Control
 DWORD64 Status
 DWORD HitCount
 DWORD Reserved1
 DWORD64 Reserved2
 DWORD64 Reserved3
} PPM_WMI_PERF_STATE, *PPPM_WMI_PERF_STATE

typedef struct {
 DWORD Count
 DWORD MaxFrequency
 DWORD CurrentState
 DWORD MaxPerfState
 DWORD MinPerfState
 DWORD LowestPerfState
 DWORD ThermalConstraint
 BYTE BusyAdjThreshold
 BYTE PolicyType
 BYTE Type
 BYTE Reserved
 DWORD TimerInterval
 DWORD64 TargetProcessors
 DWORD PStateHandler
 DWORD PStateContext
 DWORD TStateHandler
 DWORD TStateContext
 DWORD FeedbackHandler
 DWORD Reserved1
 DWORD64 Reserved2
 PPM_WMI_PERF_STATE State[ANYSIZE_ARRAY]
} PPM_WMI_PERF_STATES, *PPPM_WMI_PERF_STATES

typedef struct {
 DWORD Count
 DWORD MaxFrequency
 DWORD CurrentState
 DWORD MaxPerfState
 DWORD MinPerfState
 DWORD LowestPerfState
 DWORD ThermalConstraint
 BYTE BusyAdjThreshold
 BYTE PolicyType
 BYTE Type
 BYTE Reserved
 DWORD TimerInterval
 PVOID TargetProcessors
 DWORD PStateHandler
 DWORD PStateContext
 DWORD TStateHandler
 DWORD TStateContext
 DWORD FeedbackHandler
 DWORD Reserved1
 DWORD64 Reserved2
 PPM_WMI_PERF_STATE State[ANYSIZE_ARRAY]
} PPM_WMI_PERF_STATES_EX, *PPPM_WMI_PERF_STATES_EX

PROC_IDLE_BUCKET_COUNT 6

typedef struct {
 DWORD IdleTransitions
 DWORD FailedTransitions
 DWORD InvalidBucketIndex
 DWORD64 TotalTime
 DWORD IdleTimeBuckets[PROC_IDLE_BUCKET_COUNT]
} PPM_IDLE_STATE_ACCOUNTING, *PPPM_IDLE_STATE_ACCOUNTING

typedef struct {
 DWORD StateCount
 DWORD TotalTransitions
 DWORD ResetCount
 DWORD64 StartTime
 PPM_IDLE_STATE_ACCOUNTING State[ANYSIZE_ARRAY]
} PPM_IDLE_ACCOUNTING, *PPPM_IDLE_ACCOUNTING

PROC_IDLE_BUCKET_COUNT_EX 16

typedef struct {
 DWORD64 TotalTimeUs
 DWORD MinTimeUs
 DWORD MaxTimeUs
 DWORD Count
} PPM_IDLE_STATE_BUCKET_EX, *PPPM_IDLE_STATE_BUCKET_EX

typedef struct {
 DWORD64 TotalTime
 DWORD IdleTransitions
 DWORD FailedTransitions
 DWORD InvalidBucketIndex
 DWORD MinTimeUs
 DWORD MaxTimeUs
 DWORD CancelledTransitions
 PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[PROC_IDLE_BUCKET_COUNT_EX]
} PPM_IDLE_STATE_ACCOUNTING_EX, *PPPM_IDLE_STATE_ACCOUNTING_EX

typedef struct {
 DWORD StateCount
 DWORD TotalTransitions
 DWORD ResetCount
 DWORD AbortCount
 DWORD64 StartTime
 _Field_size_(StateCount) PPM_IDLE_STATE_ACCOUNTING_EX State[ANYSIZE_ARRAY]
} PPM_IDLE_ACCOUNTING_EX, *PPPM_IDLE_ACCOUNTING_EX

ACPI_PPM_SOFTWARE_ALL 0xFC
ACPI_PPM_SOFTWARE_ANY 0xFD
ACPI_PPM_HARDWARE_ALL 0xFE

MS_PPM_SOFTWARE_ALL 0x1

PPM_FIRMWARE_ACPI1C2 0x00000001
PPM_FIRMWARE_ACPI1C3 0x00000002
PPM_FIRMWARE_ACPI1TSTATES 0x00000004
PPM_FIRMWARE_CST 0x00000008
PPM_FIRMWARE_CSD 0x00000010
PPM_FIRMWARE_PCT 0x00000020
PPM_FIRMWARE_PSS 0x00000040
PPM_FIRMWARE_XPSS 0x00000080
PPM_FIRMWARE_PPC 0x00000100
PPM_FIRMWARE_PSD 0x00000200
PPM_FIRMWARE_PTC 0x00000400
PPM_FIRMWARE_TSS 0x00000800
PPM_FIRMWARE_TPC 0x00001000
PPM_FIRMWARE_TSD 0x00002000
PPM_FIRMWARE_PCCH 0x00004000
PPM_FIRMWARE_PCCP 0x00008000
PPM_FIRMWARE_OSC 0x00010000
PPM_FIRMWARE_PDC 0x00020000
PPM_FIRMWARE_CPC 0x00040000
PPM_FIRMWARE_LPI 0x00080000

PPM_PERFORMANCE_IMPLEMENTATION_NONE 0x00000000
PPM_PERFORMANCE_IMPLEMENTATION_PSTATES 0x00000001
PPM_PERFORMANCE_IMPLEMENTATION_PCCV1 0x00000002
PPM_PERFORMANCE_IMPLEMENTATION_CPPC 0x00000003
PPM_PERFORMANCE_IMPLEMENTATION_PEP 0x00000004

PPM_IDLE_IMPLEMENTATION_NONE 0x00000000
PPM_IDLE_IMPLEMENTATION_CSTATES 0x00000001
PPM_IDLE_IMPLEMENTATION_PEP 0x00000002
PPM_IDLE_IMPLEMENTATION_MICROPEP 0x00000003
PPM_IDLE_IMPLEMENTATION_LPISTATES 0x00000004

DEFINE_GUID(PPM_PERFSTATE_CHANGE_GUID,
0xa5b32ddd, 0x7f39, 0x4abc, 0xb8, 0x92, 0x90, 0xe, 0x43, 0xb5, 0x9e, 0xbb)

DEFINE_GUID(PPM_PERFSTATE_DOMAIN_CHANGE_GUID,
0x995e6b7f, 0xd653, 0x497a, 0xb9, 0x78, 0x36, 0xa3, 0xc, 0x29, 0xbf, 0x1)

DEFINE_GUID(PPM_IDLESTATE_CHANGE_GUID,
0x4838fe4f, 0xf71c, 0x4e51, 0x9e, 0xcc, 0x84, 0x30, 0xa7, 0xac, 0x4c, 0x6c)

DEFINE_GUID(PPM_PERFSTATES_DATA_GUID,
0x5708cc20, 0x7d40, 0x4bf4, 0xb4, 0xaa, 0x2b, 0x01, 0x33, 0x8d, 0x01, 0x26)

DEFINE_GUID(PPM_IDLESTATES_DATA_GUID,
0xba138e10, 0xe250, 0x4ad7, 0x86, 0x16, 0xcf, 0x1a, 0x7a, 0xd4, 0x10, 0xe7)

DEFINE_GUID(PPM_IDLE_ACCOUNTING_GUID,
0xe2a26f78, 0xae07, 0x4ee0, 0xa3, 0x0f, 0xce, 0x54, 0xf5, 0x5a, 0x94, 0xcd)

DEFINE_GUID(PPM_IDLE_ACCOUNTING_EX_GUID,
0xd67abd39, 0x81f8, 0x4a5e, 0x81, 0x52, 0x72, 0xe3, 0x1e, 0xc9, 0x12, 0xee)

DEFINE_GUID(PPM_THERMALCONSTRAINT_GUID,
0xa852c2c8, 0x1a4c, 0x423b, 0x8c, 0x2c, 0xf3, 0x0d, 0x82, 0x93, 0x1a, 0x88)

DEFINE_GUID(PPM_PERFMON_PERFSTATE_GUID,
0x7fd18652, 0xcfe, 0x40d2, 0xb0, 0xa1, 0xb, 0x6, 0x6a, 0x87, 0x75, 0x9e)

DEFINE_GUID(PPM_THERMAL_POLICY_CHANGE_GUID,
0x48f377b8, 0x6880, 0x4c7b, 0x8b, 0xdc, 0x38, 0x1, 0x76, 0xc6, 0x65, 0x4d)

typedef struct {
 DWORD State
 DWORD Status
 DWORD Latency
 DWORD Speed
 DWORD Processor
} PPM_PERFSTATE_EVENT, *PPPM_PERFSTATE_EVENT

typedef struct {
 DWORD State
 DWORD Latency
 DWORD Speed
 DWORD64 Processors
} PPM_PERFSTATE_DOMAIN_EVENT, *PPPM_PERFSTATE_DOMAIN_EVENT

typedef struct {
 DWORD NewState
 DWORD OldState
 DWORD64 Processors
} PPM_IDLESTATE_EVENT, *PPPM_IDLESTATE_EVENT

typedef struct {
 DWORD ThermalConstraint
 DWORD64 Processors
} PPM_THERMALCHANGE_EVENT, *PPPM_THERMALCHANGE_EVENT

typedef struct {
 BYTE Mode
 DWORD64 Processors
} PPM_THERMAL_POLICY_EVENT, *PPPM_THERMAL_POLICY_EVENT

typedef struct {
 POWER_ACTION Action
 DWORD Flags
 DWORD EventCode
} POWER_ACTION_POLICY, *PPOWER_ACTION_POLICY

POWER_ACTION_QUERY_ALLOWED 0x00000001
POWER_ACTION_UI_ALLOWED 0x00000002
POWER_ACTION_OVERRIDE_APPS 0x00000004
POWER_ACTION_HIBERBOOT 0x00000008
POWER_ACTION_USER_NOTIFY 0x00000010
POWER_ACTION_DOZE_TO_HIBERNATE 0x00000020
POWER_ACTION_ACPI_CRITICAL 0x01000000
POWER_ACTION_ACPI_USER_NOTIFY 0x02000000
POWER_ACTION_DIRECTED_DRIPS 0x04000000
POWER_ACTION_PSEUDO_TRANSITION 0x08000000
POWER_ACTION_LIGHTEST_FIRST 0x10000000
POWER_ACTION_LOCK_CONSOLE 0x20000000
POWER_ACTION_DISABLE_WAKES 0x40000000
POWER_ACTION_CRITICAL 0x80000000

POWER_LEVEL_USER_NOTIFY_TEXT 0x00000001
POWER_LEVEL_USER_NOTIFY_SOUND 0x00000002
POWER_LEVEL_USER_NOTIFY_EXEC 0x00000004
POWER_USER_NOTIFY_BUTTON 0x00000008
POWER_USER_NOTIFY_SHUTDOWN 0x00000010
POWER_USER_NOTIFY_FORCED_SHUTDOWN 0x00000020
POWER_FORCE_TRIGGER_RESET 0x80000000

BATTERY_DISCHARGE_FLAGS_EVENTCODE_MASK 0x00000007
BATTERY_DISCHARGE_FLAGS_ENABLE 0x80000000

typedef struct {
 BOOLEAN Enable
 BYTE Spare[3]
 DWORD BatteryLevel
 POWER_ACTION_POLICY PowerPolicy
 SYSTEM_POWER_STATE MinSystemState
} SYSTEM_POWER_LEVEL, *PSYSTEM_POWER_LEVEL

NUM_DISCHARGE_POLICIES 4
DISCHARGE_POLICY_CRITICAL 0
DISCHARGE_POLICY_LOW 1

typedef struct _SYSTEM_POWER_POLICY {
 DWORD Revision
 POWER_ACTION_POLICY PowerButton
 POWER_ACTION_POLICY SleepButton
 POWER_ACTION_POLICY LidClose
 SYSTEM_POWER_STATE LidOpenWake
 DWORD Reserved
 POWER_ACTION_POLICY Idle
 DWORD IdleTimeout
 BYTE IdleSensitivity

 BYTE DynamicThrottle
 BYTE Spare2[2]
 SYSTEM_POWER_STATE MinSleep
 SYSTEM_POWER_STATE MaxSleep
 SYSTEM_POWER_STATE ReducedLatencySleep
 DWORD WinLogonFlags

 DWORD Spare3

 DWORD DozeS4Timeout
 DWORD BroadcastCapacityResolution
 SYSTEM_POWER_LEVEL DischargePolicy[NUM_DISCHARGE_POLICIES]
 DWORD VideoTimeout
 BOOLEAN VideoDimDisplay
 DWORD VideoReserved[3]
 DWORD SpindownTimeout
 BOOLEAN OptimizeForPower
 BYTE FanThrottleTolerance
 BYTE ForcedThrottle
 BYTE MinThrottle
 POWER_ACTION_POLICY OverThrottled

} SYSTEM_POWER_POLICY, *PSYSTEM_POWER_POLICY

PROCESSOR_IDLESTATE_POLICY_COUNT 0x3

typedef struct {
 DWORD TimeCheck
 BYTE DemotePercent
 BYTE PromotePercent
 BYTE Spare[2]
} PROCESSOR_IDLESTATE_INFO, *PPROCESSOR_IDLESTATE_INFO

typedef struct {
 WORD Revision
 union {
 WORD AsWORD
 struct {
 WORD AllowScaling : 1
 WORD Disabled : 1
 WORD Reserved : 14
 } DUMMYSTRUCTNAME
 } Flags

 DWORD PolicyCount
 PROCESSOR_IDLESTATE_INFO Policy[PROCESSOR_IDLESTATE_POLICY_COUNT]
} PROCESSOR_IDLESTATE_POLICY, *PPROCESSOR_IDLESTATE_POLICY

PO_THROTTLE_NONE 0
PO_THROTTLE_CONSTANT 1
PO_THROTTLE_DEGRADE 2
PO_THROTTLE_ADAPTIVE 3
PO_THROTTLE_MAXIMUM 4

typedef struct _PROCESSOR_POWER_POLICY_INFO {
 DWORD TimeCheck
 DWORD DemoteLimit
 DWORD PromoteLimit
 BYTE DemotePercent
 BYTE PromotePercent
 BYTE Spare[2]
 DWORD AllowDemotion:1
 DWORD AllowPromotion:1
 DWORD Reserved:30

} PROCESSOR_POWER_POLICY_INFO, *PPROCESSOR_POWER_POLICY_INFO

typedef struct _PROCESSOR_POWER_POLICY {
 DWORD Revision
 BYTE DynamicThrottle
 BYTE Spare[3]
 DWORD DisableCStates:1
 DWORD Reserved:31
 DWORD PolicyCount
 PROCESSOR_POWER_POLICY_INFO Policy[3]

} PROCESSOR_POWER_POLICY, *PPROCESSOR_POWER_POLICY

typedef struct {
 DWORD Revision
 BYTE MaxThrottle
 BYTE MinThrottle
 BYTE BusyAdjThreshold
 union {
 BYTE Spare
 union {
 BYTE AsBYTE
 struct {
 BYTE NoDomainAccounting : 1
 BYTE IncreasePolicy: 2
 BYTE DecreasePolicy: 2
 BYTE Reserved : 3
 } DUMMYSTRUCTNAME
 } Flags
 } DUMMYUNIONNAME

 DWORD TimeCheck
 DWORD IncreaseTime
 DWORD DecreaseTime
 DWORD IncreasePercent
 DWORD DecreasePercent
} PROCESSOR_PERFSTATE_POLICY, *PPROCESSOR_PERFSTATE_POLICY

typedef struct _ADMINISTRATOR_POWER_POLICY {
 SYSTEM_POWER_STATE MinSleep
 SYSTEM_POWER_STATE MaxSleep
 DWORD MinVideoTimeout
 DWORD MaxVideoTimeout
 DWORD MinSpindownTimeout
 DWORD MaxSpindownTimeout
} ADMINISTRATOR_POWER_POLICY, *PADMINISTRATOR_POWER_POLICY

typedef enum _HIBERFILE_BUCKET_SIZE {
 HiberFileBucket1GB = 0,
 HiberFileBucket2GB,
 HiberFileBucket4GB,
 HiberFileBucket8GB,
 HiberFileBucket16GB,
 HiberFileBucket32GB,
 HiberFileBucketUnlimited,
 HiberFileBucketMax
} HIBERFILE_BUCKET_SIZE, *PHIBERFILE_BUCKET_SIZE

HIBERFILE_TYPE_NONE 0x00
HIBERFILE_TYPE_REDUCED 0x01
HIBERFILE_TYPE_FULL 0x02
HIBERFILE_TYPE_MAX 0x03

typedef struct _HIBERFILE_BUCKET {
 DWORD64 MaxPhysicalMemory
 DWORD PhysicalMemoryPercent[HIBERFILE_TYPE_MAX]
} HIBERFILE_BUCKET, *PHIBERFILE_BUCKET

typedef struct {

 BOOLEAN PowerButtonPresent
 BOOLEAN SleepButtonPresent
 BOOLEAN LidPresent
 BOOLEAN SystemS1
 BOOLEAN SystemS2
 BOOLEAN SystemS3
 BOOLEAN SystemS4
 BOOLEAN SystemS5
 BOOLEAN HiberFilePresent
 BOOLEAN FullWake
 BOOLEAN VideoDimPresent
 BOOLEAN ApmPresent
 BOOLEAN UpsPresent
 BOOLEAN ThermalControl
 BOOLEAN ProcessorThrottle
 BYTE ProcessorMinThrottle

#if = NTDDI_VERSION < NTDDI_WINXP
 BYTE ProcessorThrottleScale
 BYTE spare2[4]
#else
 BYTE ProcessorMaxThrottle
 BOOLEAN FastSystemS4
 BOOLEAN Hiberboot
 BOOLEAN WakeAlarmPresent
 BOOLEAN AoAc
#endif
 BOOLEAN DiskSpinDown

#if = NTDDI_VERSION < NTDDI_WINTHRESHOLD
 BYTE spare3[8]
# else

 BYTE HiberFileType
 BOOLEAN AoAcConnectivitySupported
 BYTE spare3[6]
#endif
 BOOLEAN SystemBatteriesPresent
 BOOLEAN BatteriesAreShortTerm
 BATTERY_REPORTING_SCALE BatteryScale[3]
 SYSTEM_POWER_STATE AcOnLineWake
 SYSTEM_POWER_STATE SoftLidWake
 SYSTEM_POWER_STATE RtcWake
 SYSTEM_POWER_STATE MinDeviceWakeState
 SYSTEM_POWER_STATE DefaultLowLatencyWake
} SYSTEM_POWER_CAPABILITIES, *PSYSTEM_POWER_CAPABILITIES

typedef struct {
 BOOLEAN AcOnLine
 BOOLEAN BatteryPresent
 BOOLEAN Charging
 BOOLEAN Discharging
 BOOLEAN Spare1[3]

 BYTE Tag

 DWORD MaxCapacity
 DWORD RemainingCapacity
 DWORD Rate
 DWORD EstimatedTime

 DWORD DefaultAlert1
 DWORD DefaultAlert2
} SYSTEM_BATTERY_STATE, *PSYSTEM_BATTERY_STATE

#ifndef _MAC

#include "pshpack4.h"

IMAGE_DOS_SIGNATURE 0x5A4D
IMAGE_OS2_SIGNATURE 0x454E
IMAGE_OS2_SIGNATURE_LE 0x454C
IMAGE_VXD_SIGNATURE 0x454C
IMAGE_NT_SIGNATURE 0x00004550

#include "pshpack2.h"

#else

#include "pshpack1.h"

IMAGE_DOS_SIGNATURE 0x4D5A
IMAGE_OS2_SIGNATURE 0x4E45
IMAGE_OS2_SIGNATURE_LE 0x4C45
IMAGE_NT_SIGNATURE 0x50450000
#endif

typedef struct _IMAGE_DOS_HEADER {
 WORD e_magic
 WORD e_cblp
 WORD e_cp
 WORD e_crlc
 WORD e_cparhdr
 WORD e_minalloc
 WORD e_maxalloc
 WORD e_ss
 WORD e_sp
 WORD e_csum
 WORD e_ip
 WORD e_cs
 WORD e_lfarlc
 WORD e_ovno
 WORD e_res[4]
 WORD e_oemid
 WORD e_oeminfo
 WORD e_res2[10]
 LONG e_lfanew
 } IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER

typedef struct _IMAGE_OS2_HEADER {
 WORD ne_magic
 CHAR ne_ver
 CHAR ne_rev
 WORD ne_enttab
 WORD ne_cbenttab
 LONG ne_crc
 WORD ne_flags
 WORD ne_autodata
 WORD ne_heap
 WORD ne_stack
 LONG ne_csip
 LONG ne_sssp
 WORD ne_cseg
 WORD ne_cmod
 WORD ne_cbnrestab
 WORD ne_segtab
 WORD ne_rsrctab
 WORD ne_restab
 WORD ne_modtab
 WORD ne_imptab
 LONG ne_nrestab
 WORD ne_cmovent
 WORD ne_align
 WORD ne_cres
 BYTE ne_exetyp
 BYTE ne_flagsothers
 WORD ne_pretthunks
 WORD ne_psegrefbytes
 WORD ne_swaparea
 WORD ne_expver
 } IMAGE_OS2_HEADER, *PIMAGE_OS2_HEADER

typedef struct _IMAGE_VXD_HEADER {
 WORD e32_magic
 BYTE e32_border
 BYTE e32_worder
 DWORD e32_level
 WORD e32_cpu
 WORD e32_os
 DWORD e32_ver
 DWORD e32_mflags
 DWORD e32_mpages
 DWORD e32_startobj
 DWORD e32_eip
 DWORD e32_stackobj
 DWORD e32_esp
 DWORD e32_pagesize
 DWORD e32_lastpagesize
 DWORD e32_fixupsize
 DWORD e32_fixupsum
 DWORD e32_ldrsize
 DWORD e32_ldrsum
 DWORD e32_objtab
 DWORD e32_objcnt
 DWORD e32_objmap
 DWORD e32_itermap
 DWORD e32_rsrctab
 DWORD e32_rsrccnt
 DWORD e32_restab
 DWORD e32_enttab
 DWORD e32_dirtab
 DWORD e32_dircnt
 DWORD e32_fpagetab
 DWORD e32_frectab
 DWORD e32_impmod
 DWORD e32_impmodcnt
 DWORD e32_impproc
 DWORD e32_pagesum
 DWORD e32_datapage
 DWORD e32_preload
 DWORD e32_nrestab
 DWORD e32_cbnrestab
 DWORD e32_nressum
 DWORD e32_autodata
 DWORD e32_debuginfo
 DWORD e32_debuglen
 DWORD e32_instpreload
 DWORD e32_instdemand
 DWORD e32_heapsize
 BYTE e32_res3[12]
 DWORD e32_winresoff
 DWORD e32_winreslen
 WORD e32_devid
 WORD e32_ddkver
 } IMAGE_VXD_HEADER, *PIMAGE_VXD_HEADER

#ifndef _MAC
#include "poppack.h"
#endif

typedef struct _IMAGE_FILE_HEADER {
 WORD Machine
 WORD NumberOfSections
 DWORD TimeDateStamp
 DWORD PointerToSymbolTable
 DWORD NumberOfSymbols
 WORD SizeOfOptionalHeader
 WORD Characteristics
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER

IMAGE_SIZEOF_FILE_HEADER 20

IMAGE_FILE_RELOCS_STRIPPED 0x0001
IMAGE_FILE_EXECUTABLE_IMAGE 0x0002
IMAGE_FILE_LINE_NUMS_STRIPPED 0x0004
IMAGE_FILE_LOCAL_SYMS_STRIPPED 0x0008
IMAGE_FILE_AGGRESIVE_WS_TRIM 0x0010
IMAGE_FILE_LARGE_ADDRESS_AWARE 0x0020
IMAGE_FILE_BYTES_REVERSED_LO 0x0080
IMAGE_FILE_32BIT_MACHINE 0x0100
IMAGE_FILE_DEBUG_STRIPPED 0x0200
IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP 0x0400
IMAGE_FILE_NET_RUN_FROM_SWAP 0x0800
IMAGE_FILE_SYSTEM 0x1000
IMAGE_FILE_DLL 0x2000
IMAGE_FILE_UP_SYSTEM_ONLY 0x4000
IMAGE_FILE_BYTES_REVERSED_HI 0x8000

IMAGE_FILE_MACHINE_UNKNOWN 0
IMAGE_FILE_MACHINE_TARGET_HOST 0x0001
IMAGE_FILE_MACHINE_I386 0x014c
IMAGE_FILE_MACHINE_R3000 0x0162
IMAGE_FILE_MACHINE_R4000 0x0166
IMAGE_FILE_MACHINE_R10000 0x0168
IMAGE_FILE_MACHINE_WCEMIPSV2 0x0169
IMAGE_FILE_MACHINE_ALPHA 0x0184
IMAGE_FILE_MACHINE_SH3 0x01a2
IMAGE_FILE_MACHINE_SH3DSP 0x01a3
IMAGE_FILE_MACHINE_SH3E 0x01a4
IMAGE_FILE_MACHINE_SH4 0x01a6
IMAGE_FILE_MACHINE_SH5 0x01a8
IMAGE_FILE_MACHINE_ARM 0x01c0
IMAGE_FILE_MACHINE_THUMB 0x01c2
IMAGE_FILE_MACHINE_ARMNT 0x01c4
IMAGE_FILE_MACHINE_AM33 0x01d3
IMAGE_FILE_MACHINE_POWERPC 0x01F0
IMAGE_FILE_MACHINE_POWERPCFP 0x01f1
IMAGE_FILE_MACHINE_IA64 0x0200
IMAGE_FILE_MACHINE_MIPS16 0x0266
IMAGE_FILE_MACHINE_ALPHA64 0x0284
IMAGE_FILE_MACHINE_MIPSFPU 0x0366
IMAGE_FILE_MACHINE_MIPSFPU16 0x0466
IMAGE_FILE_MACHINE_AXP64 IMAGE_FILE_MACHINE_ALPHA64
IMAGE_FILE_MACHINE_TRICORE 0x0520
IMAGE_FILE_MACHINE_CEF 0x0CEF
IMAGE_FILE_MACHINE_EBC 0x0EBC
IMAGE_FILE_MACHINE_AMD64 0x8664
IMAGE_FILE_MACHINE_M32R 0x9041
IMAGE_FILE_MACHINE_ARM64 0xAA64
IMAGE_FILE_MACHINE_CEE 0xC0EE

typedef struct _IMAGE_DATA_DIRECTORY {
 DWORD VirtualAddress
 DWORD Size
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY

IMAGE_NUMBEROF_DIRECTORY_ENTRIES 16

typedef struct _IMAGE_OPTIONAL_HEADER {
 WORD Magic
 BYTE MajorLinkerVersion
 BYTE MinorLinkerVersion
 DWORD SizeOfCode
 DWORD SizeOfInitializedData
 DWORD SizeOfUninitializedData
 DWORD AddressOfEntryPoint
 DWORD BaseOfCode
 DWORD BaseOfData

 DWORD ImageBase
 DWORD SectionAlignment
 DWORD FileAlignment
 WORD MajorOperatingSystemVersion
 WORD MinorOperatingSystemVersion
 WORD MajorImageVersion
 WORD MinorImageVersion
 WORD MajorSubsystemVersion
 WORD MinorSubsystemVersion
 DWORD Win32VersionValue
 DWORD SizeOfImage
 DWORD SizeOfHeaders
 DWORD CheckSum
 WORD Subsystem
 WORD DllCharacteristics
 DWORD SizeOfStackReserve
 DWORD SizeOfStackCommit
 DWORD SizeOfHeapReserve
 DWORD SizeOfHeapCommit
 DWORD LoaderFlags
 DWORD NumberOfRvaAndSizes
 IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES]
} IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32

typedef struct _IMAGE_ROM_OPTIONAL_HEADER {
 WORD Magic
 BYTE MajorLinkerVersion
 BYTE MinorLinkerVersion
 DWORD SizeOfCode
 DWORD SizeOfInitializedData
 DWORD SizeOfUninitializedData
 DWORD AddressOfEntryPoint
 DWORD BaseOfCode
 DWORD BaseOfData
 DWORD BaseOfBss
 DWORD GprMask
 DWORD CprMask[4]
 DWORD GpValue
} IMAGE_ROM_OPTIONAL_HEADER, *PIMAGE_ROM_OPTIONAL_HEADER

typedef struct _IMAGE_OPTIONAL_HEADER64 {
 WORD Magic
 BYTE MajorLinkerVersion
 BYTE MinorLinkerVersion
 DWORD SizeOfCode
 DWORD SizeOfInitializedData
 DWORD SizeOfUninitializedData
 DWORD AddressOfEntryPoint
 DWORD BaseOfCode
 ULONGLONG ImageBase
 DWORD SectionAlignment
 DWORD FileAlignment
 WORD MajorOperatingSystemVersion
 WORD MinorOperatingSystemVersion
 WORD MajorImageVersion
 WORD MinorImageVersion
 WORD MajorSubsystemVersion
 WORD MinorSubsystemVersion
 DWORD Win32VersionValue
 DWORD SizeOfImage
 DWORD SizeOfHeaders
 DWORD CheckSum
 WORD Subsystem
 WORD DllCharacteristics
 ULONGLONG SizeOfStackReserve
 ULONGLONG SizeOfStackCommit
 ULONGLONG SizeOfHeapReserve
 ULONGLONG SizeOfHeapCommit
 DWORD LoaderFlags
 DWORD NumberOfRvaAndSizes
 IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES]
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64

IMAGE_NT_OPTIONAL_HDR32_MAGIC 0x10b
IMAGE_NT_OPTIONAL_HDR64_MAGIC 0x20b
IMAGE_ROM_OPTIONAL_HDR_MAGIC 0x107

#ifdef _WIN64
typedef IMAGE_OPTIONAL_HEADER64 IMAGE_OPTIONAL_HEADER
typedef PIMAGE_OPTIONAL_HEADER64 PIMAGE_OPTIONAL_HEADER
IMAGE_NT_OPTIONAL_HDR_MAGIC IMAGE_NT_OPTIONAL_HDR64_MAGIC
#else
typedef IMAGE_OPTIONAL_HEADER32 IMAGE_OPTIONAL_HEADER
typedef PIMAGE_OPTIONAL_HEADER32 PIMAGE_OPTIONAL_HEADER
IMAGE_NT_OPTIONAL_HDR_MAGIC IMAGE_NT_OPTIONAL_HDR32_MAGIC
#endif

typedef struct _IMAGE_NT_HEADERS64 {
 DWORD Signature
 IMAGE_FILE_HEADER FileHeader
 IMAGE_OPTIONAL_HEADER64 OptionalHeader
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64

typedef struct _IMAGE_NT_HEADERS {
 DWORD Signature
 IMAGE_FILE_HEADER FileHeader
 IMAGE_OPTIONAL_HEADER32 OptionalHeader
} IMAGE_NT_HEADERS32, *PIMAGE_NT_HEADERS32

typedef struct _IMAGE_ROM_HEADERS {
 IMAGE_FILE_HEADER FileHeader
 IMAGE_ROM_OPTIONAL_HEADER OptionalHeader
} IMAGE_ROM_HEADERS, *PIMAGE_ROM_HEADERS

#ifdef _WIN64
typedef IMAGE_NT_HEADERS64 IMAGE_NT_HEADERS
typedef PIMAGE_NT_HEADERS64 PIMAGE_NT_HEADERS
#else
typedef IMAGE_NT_HEADERS32 IMAGE_NT_HEADERS
typedef PIMAGE_NT_HEADERS32 PIMAGE_NT_HEADERS
#endif

IMAGE_FIRST_SECTION( ntheader ) ((PIMAGE_SECTION_HEADER) ((ULONG_PTR)(ntheader) + FIELD_OFFSET( IMAGE_NT_HEADERS, OptionalHeader ) + = (ntheader))->FileHeader.SizeOfOptionalHeader )

IMAGE_SUBSYSTEM_UNKNOWN 0
IMAGE_SUBSYSTEM_NATIVE 1
IMAGE_SUBSYSTEM_WINDOWS_GUI 2
IMAGE_SUBSYSTEM_WINDOWS_CUI 3
IMAGE_SUBSYSTEM_OS2_CUI 5
IMAGE_SUBSYSTEM_POSIX_CUI 7
IMAGE_SUBSYSTEM_NATIVE_WINDOWS 8
IMAGE_SUBSYSTEM_WINDOWS_CE_GUI 9
IMAGE_SUBSYSTEM_EFI_APPLICATION 10
IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER 11
IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER 12
IMAGE_SUBSYSTEM_EFI_ROM 13
IMAGE_SUBSYSTEM_XBOX 14
IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION 16
IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG 17

IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA 0x0020
IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE 0x0040
IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY 0x0080
IMAGE_DLLCHARACTERISTICS_NX_COMPAT 0x0100
IMAGE_DLLCHARACTERISTICS_NO_ISOLATION 0x0200
IMAGE_DLLCHARACTERISTICS_NO_SEH 0x0400
IMAGE_DLLCHARACTERISTICS_NO_BIND 0x0800
IMAGE_DLLCHARACTERISTICS_APPCONTAINER 0x1000
IMAGE_DLLCHARACTERISTICS_WDM_DRIVER 0x2000
IMAGE_DLLCHARACTERISTICS_GUARD_CF 0x4000
IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE 0x8000

IMAGE_DIRECTORY_ENTRY_EXPORT 0
IMAGE_DIRECTORY_ENTRY_IMPORT 1
IMAGE_DIRECTORY_ENTRY_RESOURCE 2
IMAGE_DIRECTORY_ENTRY_EXCEPTION 3
IMAGE_DIRECTORY_ENTRY_SECURITY 4
IMAGE_DIRECTORY_ENTRY_BASERELOC 5
IMAGE_DIRECTORY_ENTRY_DEBUG 6

IMAGE_DIRECTORY_ENTRY_ARCHITECTURE 7
IMAGE_DIRECTORY_ENTRY_GLOBALPTR 8
IMAGE_DIRECTORY_ENTRY_TLS 9
IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG 10
IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT 11
IMAGE_DIRECTORY_ENTRY_IAT 12
IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT 13
IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR 14

typedef struct ANON_OBJECT_HEADER {
 WORD Sig1
 WORD Sig2
 WORD Version
 WORD Machine
 DWORD TimeDateStamp
 CLSID ClassID
 DWORD SizeOfData
} ANON_OBJECT_HEADER

typedef struct ANON_OBJECT_HEADER_V2 {
 WORD Sig1
 WORD Sig2
 WORD Version
 WORD Machine
 DWORD TimeDateStamp
 CLSID ClassID
 DWORD SizeOfData
 DWORD Flags
 DWORD MetaDataSize
 DWORD MetaDataOffset
} ANON_OBJECT_HEADER_V2

typedef struct ANON_OBJECT_HEADER_BIGOBJ {

 WORD Sig1
 WORD Sig2
 WORD Version
 WORD Machine
 DWORD TimeDateStamp
 CLSID ClassID
 DWORD SizeOfData
 DWORD Flags
 DWORD MetaDataSize
 DWORD MetaDataOffset
 DWORD NumberOfSections
 DWORD PointerToSymbolTable
 DWORD NumberOfSymbols
} ANON_OBJECT_HEADER_BIGOBJ

IMAGE_SIZEOF_SHORT_NAME 8

typedef struct _IMAGE_SECTION_HEADER {
 BYTE Name[IMAGE_SIZEOF_SHORT_NAME]
 union {
 DWORD PhysicalAddress
 DWORD VirtualSize
 } Misc
 DWORD VirtualAddress
 DWORD SizeOfRawData
 DWORD PointerToRawData
 DWORD PointerToRelocations
 DWORD PointerToLinenumbers
 WORD NumberOfRelocations
 WORD NumberOfLinenumbers
 DWORD Characteristics
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER

IMAGE_SIZEOF_SECTION_HEADER 40

IMAGE_SCN_TYPE_NO_PAD 0x00000008

IMAGE_SCN_CNT_CODE 0x00000020
IMAGE_SCN_CNT_INITIALIZED_DATA 0x00000040
IMAGE_SCN_CNT_UNINITIALIZED_DATA 0x00000080

IMAGE_SCN_LNK_OTHER 0x00000100
IMAGE_SCN_LNK_INFO 0x00000200

IMAGE_SCN_LNK_REMOVE 0x00000800
IMAGE_SCN_LNK_COMDAT 0x00001000

IMAGE_SCN_NO_DEFER_SPEC_EXC 0x00004000
IMAGE_SCN_GPREL 0x00008000
IMAGE_SCN_MEM_FARDATA 0x00008000

IMAGE_SCN_MEM_PURGEABLE 0x00020000
IMAGE_SCN_MEM_16BIT 0x00020000
IMAGE_SCN_MEM_LOCKED 0x00040000
IMAGE_SCN_MEM_PRELOAD 0x00080000

IMAGE_SCN_ALIGN_1BYTES 0x00100000
IMAGE_SCN_ALIGN_2BYTES 0x00200000
IMAGE_SCN_ALIGN_4BYTES 0x00300000
IMAGE_SCN_ALIGN_8BYTES 0x00400000
IMAGE_SCN_ALIGN_16BYTES 0x00500000
IMAGE_SCN_ALIGN_32BYTES 0x00600000
IMAGE_SCN_ALIGN_64BYTES 0x00700000
IMAGE_SCN_ALIGN_128BYTES 0x00800000
IMAGE_SCN_ALIGN_256BYTES 0x00900000
IMAGE_SCN_ALIGN_512BYTES 0x00A00000
IMAGE_SCN_ALIGN_1024BYTES 0x00B00000
IMAGE_SCN_ALIGN_2048BYTES 0x00C00000
IMAGE_SCN_ALIGN_4096BYTES 0x00D00000
IMAGE_SCN_ALIGN_8192BYTES 0x00E00000

IMAGE_SCN_ALIGN_MASK 0x00F00000

IMAGE_SCN_LNK_NRELOC_OVFL 0x01000000
IMAGE_SCN_MEM_DISCARDABLE 0x02000000
IMAGE_SCN_MEM_NOT_CACHED 0x04000000
IMAGE_SCN_MEM_NOT_PAGED 0x08000000
IMAGE_SCN_MEM_SHARED 0x10000000
IMAGE_SCN_MEM_EXECUTE 0x20000000
IMAGE_SCN_MEM_READ 0x40000000
IMAGE_SCN_MEM_WRITE 0x80000000

IMAGE_SCN_SCALE_INDEX 0x00000001

#ifndef _MAC
#include "pshpack2.h"
#endif

typedef struct _IMAGE_SYMBOL {
 union {
 BYTE ShortName[8]
 struct {
 DWORD Short
 DWORD Long
 } Name
 DWORD LongName[2]
 } N
 DWORD Value
 SHORT SectionNumber
 WORD Type
 BYTE StorageClass
 BYTE NumberOfAuxSymbols
} IMAGE_SYMBOL
typedef IMAGE_SYMBOL UNALIGNED *PIMAGE_SYMBOL

IMAGE_SIZEOF_SYMBOL 18

typedef struct _IMAGE_SYMBOL_EX {
 union {
 BYTE ShortName[8]
 struct {
 DWORD Short
 DWORD Long
 } Name
 DWORD LongName[2]
 } N
 DWORD Value
 LONG SectionNumber
 WORD Type
 BYTE StorageClass
 BYTE NumberOfAuxSymbols
} IMAGE_SYMBOL_EX
typedef IMAGE_SYMBOL_EX UNALIGNED *PIMAGE_SYMBOL_EX

IMAGE_SYM_UNDEFINED (SHORT)0
IMAGE_SYM_ABSOLUTE (SHORT)-1
IMAGE_SYM_DEBUG (SHORT)-2
IMAGE_SYM_SECTION_MAX 0xFEFF
IMAGE_SYM_SECTION_MAX_EX MAXLONG

IMAGE_SYM_TYPE_NULL 0x0000
IMAGE_SYM_TYPE_VOID 0x0001
IMAGE_SYM_TYPE_CHAR 0x0002
IMAGE_SYM_TYPE_SHORT 0x0003
IMAGE_SYM_TYPE_INT 0x0004
IMAGE_SYM_TYPE_LONG 0x0005
IMAGE_SYM_TYPE_FLOAT 0x0006
IMAGE_SYM_TYPE_DOUBLE 0x0007
IMAGE_SYM_TYPE_STRUCT 0x0008
IMAGE_SYM_TYPE_UNION 0x0009
IMAGE_SYM_TYPE_ENUM 0x000A
IMAGE_SYM_TYPE_MOE 0x000B
IMAGE_SYM_TYPE_BYTE 0x000C
IMAGE_SYM_TYPE_WORD 0x000D
IMAGE_SYM_TYPE_UINT 0x000E
IMAGE_SYM_TYPE_DWORD 0x000F
IMAGE_SYM_TYPE_PCODE 0x8000

IMAGE_SYM_DTYPE_NULL 0
IMAGE_SYM_DTYPE_POINTER 1
IMAGE_SYM_DTYPE_FUNCTION 2
IMAGE_SYM_DTYPE_ARRAY 3

IMAGE_SYM_CLASS_END_OF_FUNCTION (BYTE )-1
IMAGE_SYM_CLASS_NULL 0x0000
IMAGE_SYM_CLASS_AUTOMATIC 0x0001
IMAGE_SYM_CLASS_EXTERNAL 0x0002
IMAGE_SYM_CLASS_STATIC 0x0003
IMAGE_SYM_CLASS_REGISTER 0x0004
IMAGE_SYM_CLASS_EXTERNAL_DEF 0x0005
IMAGE_SYM_CLASS_LABEL 0x0006
IMAGE_SYM_CLASS_UNDEFINED_LABEL 0x0007
IMAGE_SYM_CLASS_MEMBER_OF_STRUCT 0x0008
IMAGE_SYM_CLASS_ARGUMENT 0x0009
IMAGE_SYM_CLASS_STRUCT_TAG 0x000A
IMAGE_SYM_CLASS_MEMBER_OF_UNION 0x000B
IMAGE_SYM_CLASS_UNION_TAG 0x000C
IMAGE_SYM_CLASS_TYPE_DEFINITION 0x000D
IMAGE_SYM_CLASS_UNDEFINED_STATIC 0x000E
IMAGE_SYM_CLASS_ENUM_TAG 0x000F
IMAGE_SYM_CLASS_MEMBER_OF_ENUM 0x0010
IMAGE_SYM_CLASS_REGISTER_PARAM 0x0011
IMAGE_SYM_CLASS_BIT_FIELD 0x0012

IMAGE_SYM_CLASS_FAR_EXTERNAL 0x0044

IMAGE_SYM_CLASS_BLOCK 0x0064
IMAGE_SYM_CLASS_FUNCTION 0x0065
IMAGE_SYM_CLASS_END_OF_STRUCT 0x0066
IMAGE_SYM_CLASS_FILE 0x0067

IMAGE_SYM_CLASS_SECTION 0x0068
IMAGE_SYM_CLASS_WEAK_EXTERNAL 0x0069

IMAGE_SYM_CLASS_CLR_TOKEN 0x006B

N_BTMASK 0x000F
N_TMASK 0x0030
N_TMASK1 0x00C0
N_TMASK2 0x00F0
N_BTSHFT 4
N_TSHIFT 2

BTYPE(x) = (x) & N_BTMASK

#ifndef ISPTR
ISPTR(x) (((x) & N_TMASK) == (IMAGE_SYM_DTYPE_POINTER << N_BTSHFT))
#endif

#ifndef ISFCN
ISFCN(x) (((x) & N_TMASK) == (IMAGE_SYM_DTYPE_FUNCTION << N_BTSHFT))
#endif

#ifndef ISARY
ISARY(x) (((x) & N_TMASK) == (IMAGE_SYM_DTYPE_ARRAY << N_BTSHFT))
#endif

#ifndef ISTAG
ISTAG(x) ((x)==IMAGE_SYM_CLASS_STRUCT_TAG || (x)==IMAGE_SYM_CLASS_UNION_TAG || (x)==IMAGE_SYM_CLASS_ENUM_TAG)
#endif

#ifndef INCREF
INCREF(x) ((((x)&~N_BTMASK)<<N_TSHIFT)|(IMAGE_SYM_DTYPE_POINTER<<N_BTSHFT)|((x)&N_BTMASK))
#endif
#ifndef DECREF
DECREF(x) ((((x)>>N_TSHIFT)&~N_BTMASK)|((x)&N_BTMASK))
#endif

#include <pshpack2.h>

typedef struct IMAGE_AUX_SYMBOL_TOKEN_DEF {
 BYTE bAuxType
 BYTE bReserved
 DWORD SymbolTableIndex
 BYTE rgbReserved[12]
} IMAGE_AUX_SYMBOL_TOKEN_DEF

typedef IMAGE_AUX_SYMBOL_TOKEN_DEF UNALIGNED *PIMAGE_AUX_SYMBOL_TOKEN_DEF

#include <poppack.h>

typedef union _IMAGE_AUX_SYMBOL {
 struct {
 DWORD TagIndex
 union {
 struct {
 WORD Linenumber
 WORD Size
 } LnSz
 DWORD TotalSize
 } Misc
 union {
 struct {
 DWORD PointerToLinenumber
 DWORD PointerToNextFunction
 } Function
 struct {
 WORD Dimension[4]
 } Array
 } FcnAry
 WORD TvIndex
 } Sym
 struct {
 BYTE Name[IMAGE_SIZEOF_SYMBOL]
 } File
 struct {
 DWORD Length
 WORD NumberOfRelocations
 WORD NumberOfLinenumbers
 DWORD CheckSum
 SHORT Number
 BYTE Selection
	BYTE bReserved
	("HighNumber", SHORT),
 } Section
 ("TokenDef", IMAGE_AUX_SYMBOL_TOKEN_DEF),
 struct {
 ("crc", DWORD),
 ("rgbReserved", BYTE),[14]
 } CRC
} IMAGE_AUX_SYMBOL
typedef IMAGE_AUX_SYMBOL UNALIGNED *PIMAGE_AUX_SYMBOL

typedef union _IMAGE_AUX_SYMBOL_EX {
 struct {
 ("WeakDefaultSymIndex", DWORD),
 ("WeakSearchType", DWORD),
 ("rgbReserved", BYTE),[12]
 } Sym
 struct {
 ("Name", BYTE),[sizeof(IMAGE_SYMBOL_EX)]
 } File
 struct {
 ("Length", DWORD),
 ("NumberOfRelocations", WORD),
 ("NumberOfLinenumbers", WORD),
 ("CheckSum", DWORD),
 ("Number", SHORT),
 ("Selection", BYTE),
 ("bReserved", BYTE),
 ("HighNumber", SHORT),
 ("rgbReserved", BYTE),[2]
 } Section
 struct{
 ("TokenDef", IMAGE_AUX_SYMBOL_TOKEN_DEF),
 ("rgbReserved", BYTE),[2]
 } DUMMYSTRUCTNAME
 struct {
 ("crc", DWORD),
 ("rgbReserved", BYTE),[16]
 } CRC
} IMAGE_AUX_SYMBOL_EX
typedef IMAGE_AUX_SYMBOL_EX UNALIGNED *PIMAGE_AUX_SYMBOL_EX

typedef enum IMAGE_AUX_SYMBOL_TYPE {
 IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1,
} IMAGE_AUX_SYMBOL_TYPE

IMAGE_COMDAT_SELECT_NODUPLICATES 1
IMAGE_COMDAT_SELECT_ANY 2
IMAGE_COMDAT_SELECT_SAME_SIZE 3
IMAGE_COMDAT_SELECT_EXACT_MATCH 4
IMAGE_COMDAT_SELECT_ASSOCIATIVE 5
IMAGE_COMDAT_SELECT_LARGEST 6
IMAGE_COMDAT_SELECT_NEWEST 7

IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY 1
IMAGE_WEAK_EXTERN_SEARCH_LIBRARY 2
IMAGE_WEAK_EXTERN_SEARCH_ALIAS 3
IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY 4

typedef struct _IMAGE_RELOCATION {
 union {
 DWORD VirtualAddress
 DWORD RelocCount
 } DUMMYUNIONNAME
 DWORD SymbolTableIndex
 WORD Type
} IMAGE_RELOCATION
typedef IMAGE_RELOCATION UNALIGNED *PIMAGE_RELOCATION

IMAGE_REL_I386_ABSOLUTE 0x0000
IMAGE_REL_I386_DIR16 0x0001
IMAGE_REL_I386_REL16 0x0002
IMAGE_REL_I386_DIR32 0x0006
IMAGE_REL_I386_DIR32NB 0x0007
IMAGE_REL_I386_SEG12 0x0009
IMAGE_REL_I386_SECTION 0x000A
IMAGE_REL_I386_SECREL 0x000B
IMAGE_REL_I386_TOKEN 0x000C
IMAGE_REL_I386_SECREL7 0x000D
IMAGE_REL_I386_REL32 0x0014

IMAGE_REL_MIPS_ABSOLUTE 0x0000
IMAGE_REL_MIPS_REFHALF 0x0001
IMAGE_REL_MIPS_REFWORD 0x0002
IMAGE_REL_MIPS_JMPADDR 0x0003
IMAGE_REL_MIPS_REFHI 0x0004
IMAGE_REL_MIPS_REFLO 0x0005
IMAGE_REL_MIPS_GPREL 0x0006
IMAGE_REL_MIPS_LITERAL 0x0007
IMAGE_REL_MIPS_SECTION 0x000A
IMAGE_REL_MIPS_SECREL 0x000B
IMAGE_REL_MIPS_SECRELLO 0x000C
IMAGE_REL_MIPS_SECRELHI 0x000D
IMAGE_REL_MIPS_TOKEN 0x000E
IMAGE_REL_MIPS_JMPADDR16 0x0010
IMAGE_REL_MIPS_REFWORDNB 0x0022
IMAGE_REL_MIPS_PAIR 0x0025

IMAGE_REL_ALPHA_ABSOLUTE 0x0000
IMAGE_REL_ALPHA_REFLONG 0x0001
IMAGE_REL_ALPHA_REFQUAD 0x0002
IMAGE_REL_ALPHA_GPREL32 0x0003
IMAGE_REL_ALPHA_LITERAL 0x0004
IMAGE_REL_ALPHA_LITUSE 0x0005
IMAGE_REL_ALPHA_GPDISP 0x0006
IMAGE_REL_ALPHA_BRADDR 0x0007
IMAGE_REL_ALPHA_HINT 0x0008
IMAGE_REL_ALPHA_INLINE_REFLONG 0x0009
IMAGE_REL_ALPHA_REFHI 0x000A
IMAGE_REL_ALPHA_REFLO 0x000B
IMAGE_REL_ALPHA_PAIR 0x000C
IMAGE_REL_ALPHA_MATCH 0x000D
IMAGE_REL_ALPHA_SECTION 0x000E
IMAGE_REL_ALPHA_SECREL 0x000F
IMAGE_REL_ALPHA_REFLONGNB 0x0010
IMAGE_REL_ALPHA_SECRELLO 0x0011
IMAGE_REL_ALPHA_SECRELHI 0x0012
IMAGE_REL_ALPHA_REFQ3 0x0013
IMAGE_REL_ALPHA_REFQ2 0x0014
IMAGE_REL_ALPHA_REFQ1 0x0015
IMAGE_REL_ALPHA_GPRELLO 0x0016
IMAGE_REL_ALPHA_GPRELHI 0x0017

IMAGE_REL_PPC_ABSOLUTE 0x0000
IMAGE_REL_PPC_ADDR64 0x0001
IMAGE_REL_PPC_ADDR32 0x0002
IMAGE_REL_PPC_ADDR24 0x0003
IMAGE_REL_PPC_ADDR16 0x0004
IMAGE_REL_PPC_ADDR14 0x0005
IMAGE_REL_PPC_REL24 0x0006
IMAGE_REL_PPC_REL14 0x0007
IMAGE_REL_PPC_TOCREL16 0x0008
IMAGE_REL_PPC_TOCREL14 0x0009

IMAGE_REL_PPC_ADDR32NB 0x000A
IMAGE_REL_PPC_SECREL 0x000B
IMAGE_REL_PPC_SECTION 0x000C
IMAGE_REL_PPC_IFGLUE 0x000D
IMAGE_REL_PPC_IMGLUE 0x000E
IMAGE_REL_PPC_SECREL16 0x000F
IMAGE_REL_PPC_REFHI 0x0010
IMAGE_REL_PPC_REFLO 0x0011
IMAGE_REL_PPC_PAIR 0x0012
IMAGE_REL_PPC_SECRELLO 0x0013
IMAGE_REL_PPC_SECRELHI 0x0014
IMAGE_REL_PPC_GPREL 0x0015
IMAGE_REL_PPC_TOKEN 0x0016

IMAGE_REL_PPC_TYPEMASK 0x00FF

IMAGE_REL_PPC_NEG 0x0100
IMAGE_REL_PPC_BRTAKEN 0x0200
IMAGE_REL_PPC_BRNTAKEN 0x0400
IMAGE_REL_PPC_TOCDEFN 0x0800

IMAGE_REL_SH3_ABSOLUTE 0x0000
IMAGE_REL_SH3_DIRECT16 0x0001
IMAGE_REL_SH3_DIRECT32 0x0002
IMAGE_REL_SH3_DIRECT8 0x0003
IMAGE_REL_SH3_DIRECT8_WORD 0x0004
IMAGE_REL_SH3_DIRECT8_LONG 0x0005
IMAGE_REL_SH3_DIRECT4 0x0006
IMAGE_REL_SH3_DIRECT4_WORD 0x0007
IMAGE_REL_SH3_DIRECT4_LONG 0x0008
IMAGE_REL_SH3_PCREL8_WORD 0x0009
IMAGE_REL_SH3_PCREL8_LONG 0x000A
IMAGE_REL_SH3_PCREL12_WORD 0x000B
IMAGE_REL_SH3_STARTOF_SECTION 0x000C
IMAGE_REL_SH3_SIZEOF_SECTION 0x000D
IMAGE_REL_SH3_SECTION 0x000E
IMAGE_REL_SH3_SECREL 0x000F
IMAGE_REL_SH3_DIRECT32_NB 0x0010
IMAGE_REL_SH3_GPREL4_LONG 0x0011
IMAGE_REL_SH3_TOKEN 0x0012
IMAGE_REL_SHM_PCRELPT 0x0013
IMAGE_REL_SHM_REFLO 0x0014
IMAGE_REL_SHM_REFHALF 0x0015
IMAGE_REL_SHM_RELLO 0x0016
IMAGE_REL_SHM_RELHALF 0x0017
IMAGE_REL_SHM_PAIR 0x0018

IMAGE_REL_SH_NOMODE 0x8000

IMAGE_REL_ARM_ABSOLUTE 0x0000
IMAGE_REL_ARM_ADDR32 0x0001
IMAGE_REL_ARM_ADDR32NB 0x0002
IMAGE_REL_ARM_BRANCH24 0x0003
IMAGE_REL_ARM_BRANCH11 0x0004
IMAGE_REL_ARM_TOKEN 0x0005
IMAGE_REL_ARM_GPREL12 0x0006
IMAGE_REL_ARM_GPREL7 0x0007
IMAGE_REL_ARM_BLX24 0x0008
IMAGE_REL_ARM_BLX11 0x0009
IMAGE_REL_ARM_SECTION 0x000E
IMAGE_REL_ARM_SECREL 0x000F
IMAGE_REL_ARM_MOV32A 0x0010
IMAGE_REL_ARM_MOV32 0x0010
IMAGE_REL_ARM_MOV32T 0x0011
IMAGE_REL_THUMB_MOV32 0x0011
IMAGE_REL_ARM_BRANCH20T 0x0012
IMAGE_REL_THUMB_BRANCH20 0x0012
IMAGE_REL_ARM_BRANCH24T 0x0014
IMAGE_REL_THUMB_BRANCH24 0x0014
IMAGE_REL_ARM_BLX23T 0x0015
IMAGE_REL_THUMB_BLX23 0x0015

IMAGE_REL_AM_ABSOLUTE 0x0000
IMAGE_REL_AM_ADDR32 0x0001
IMAGE_REL_AM_ADDR32NB 0x0002
IMAGE_REL_AM_CALL32 0x0003
IMAGE_REL_AM_FUNCINFO 0x0004
IMAGE_REL_AM_REL32_1 0x0005
IMAGE_REL_AM_REL32_2 0x0006
IMAGE_REL_AM_SECREL 0x0007
IMAGE_REL_AM_SECTION 0x0008
IMAGE_REL_AM_TOKEN 0x0009

IMAGE_REL_ARM64_ABSOLUTE 0x0000
IMAGE_REL_ARM64_ADDR32 0x0001
IMAGE_REL_ARM64_ADDR32NB 0x0002
IMAGE_REL_ARM64_BRANCH26 0x0003
IMAGE_REL_ARM64_PAGEBASE_REL21 0x0004
IMAGE_REL_ARM64_REL21 0x0005
IMAGE_REL_ARM64_PAGEOFFSET_12A 0x0006
IMAGE_REL_ARM64_PAGEOFFSET_12L 0x0007
IMAGE_REL_ARM64_SECREL 0x0008
IMAGE_REL_ARM64_SECREL_LOW12A 0x0009
IMAGE_REL_ARM64_SECREL_HIGH12A 0x000A
IMAGE_REL_ARM64_SECREL_LOW12L 0x000B
IMAGE_REL_ARM64_TOKEN 0x000C
IMAGE_REL_ARM64_SECTION 0x000D
IMAGE_REL_ARM64_ADDR64 0x000E
IMAGE_REL_ARM64_BRANCH19 0x000F

IMAGE_REL_AMD64_ABSOLUTE 0x0000
IMAGE_REL_AMD64_ADDR64 0x0001
IMAGE_REL_AMD64_ADDR32 0x0002
IMAGE_REL_AMD64_ADDR32NB 0x0003
IMAGE_REL_AMD64_REL32 0x0004
IMAGE_REL_AMD64_REL32_1 0x0005
IMAGE_REL_AMD64_REL32_2 0x0006
IMAGE_REL_AMD64_REL32_3 0x0007
IMAGE_REL_AMD64_REL32_4 0x0008
IMAGE_REL_AMD64_REL32_5 0x0009
IMAGE_REL_AMD64_SECTION 0x000A
IMAGE_REL_AMD64_SECREL 0x000B
IMAGE_REL_AMD64_SECREL7 0x000C
IMAGE_REL_AMD64_TOKEN 0x000D
IMAGE_REL_AMD64_SREL32 0x000E
IMAGE_REL_AMD64_PAIR 0x000F
IMAGE_REL_AMD64_SSPAN32 0x0010
IMAGE_REL_AMD64_EHANDLER 0x0011
IMAGE_REL_AMD64_IMPORT_BR 0x0012
IMAGE_REL_AMD64_IMPORT_CALL 0x0013
IMAGE_REL_AMD64_CFG_BR 0x0014
IMAGE_REL_AMD64_CFG_BR_REX 0x0015
IMAGE_REL_AMD64_CFG_CALL 0x0016
IMAGE_REL_AMD64_INDIR_BR 0x0017
IMAGE_REL_AMD64_INDIR_BR_REX 0x0018
IMAGE_REL_AMD64_INDIR_CALL 0x0019
IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST 0x0020
IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST 0x002F

IMAGE_REL_IA64_ABSOLUTE 0x0000
IMAGE_REL_IA64_IMM14 0x0001
IMAGE_REL_IA64_IMM22 0x0002
IMAGE_REL_IA64_IMM64 0x0003
IMAGE_REL_IA64_DIR32 0x0004
IMAGE_REL_IA64_DIR64 0x0005
IMAGE_REL_IA64_PCREL21B 0x0006
IMAGE_REL_IA64_PCREL21M 0x0007
IMAGE_REL_IA64_PCREL21F 0x0008
IMAGE_REL_IA64_GPREL22 0x0009
IMAGE_REL_IA64_LTOFF22 0x000A
IMAGE_REL_IA64_SECTION 0x000B
IMAGE_REL_IA64_SECREL22 0x000C
IMAGE_REL_IA64_SECREL64I 0x000D
IMAGE_REL_IA64_SECREL32 0x000E
IMAGE_REL_IA64_DIR32NB 0x0010
IMAGE_REL_IA64_SREL14 0x0011
IMAGE_REL_IA64_SREL22 0x0012
IMAGE_REL_IA64_SREL32 0x0013
IMAGE_REL_IA64_UREL32 0x0014
IMAGE_REL_IA64_PCREL60X 0x0015
IMAGE_REL_IA64_PCREL60B 0x0016
IMAGE_REL_IA64_PCREL60F 0x0017
IMAGE_REL_IA64_PCREL60I 0x0018
IMAGE_REL_IA64_PCREL60M 0x0019
IMAGE_REL_IA64_IMMGPREL64 0x001A
IMAGE_REL_IA64_TOKEN 0x001B
IMAGE_REL_IA64_GPREL32 0x001C
IMAGE_REL_IA64_ADDEND 0x001F

IMAGE_REL_CEF_ABSOLUTE 0x0000
IMAGE_REL_CEF_ADDR32 0x0001
IMAGE_REL_CEF_ADDR64 0x0002
IMAGE_REL_CEF_ADDR32NB 0x0003
IMAGE_REL_CEF_SECTION 0x0004
IMAGE_REL_CEF_SECREL 0x0005
IMAGE_REL_CEF_TOKEN 0x0006

IMAGE_REL_CEE_ABSOLUTE 0x0000
IMAGE_REL_CEE_ADDR32 0x0001
IMAGE_REL_CEE_ADDR64 0x0002
IMAGE_REL_CEE_ADDR32NB 0x0003
IMAGE_REL_CEE_SECTION 0x0004
IMAGE_REL_CEE_SECREL 0x0005
IMAGE_REL_CEE_TOKEN 0x0006

IMAGE_REL_M32R_ABSOLUTE 0x0000
IMAGE_REL_M32R_ADDR32 0x0001
IMAGE_REL_M32R_ADDR32NB 0x0002
IMAGE_REL_M32R_ADDR24 0x0003
IMAGE_REL_M32R_GPREL16 0x0004
IMAGE_REL_M32R_PCREL24 0x0005
IMAGE_REL_M32R_PCREL16 0x0006
IMAGE_REL_M32R_PCREL8 0x0007
IMAGE_REL_M32R_REFHALF 0x0008
IMAGE_REL_M32R_REFHI 0x0009
IMAGE_REL_M32R_REFLO 0x000A
IMAGE_REL_M32R_PAIR 0x000B
IMAGE_REL_M32R_SECTION 0x000C
IMAGE_REL_M32R_SECREL32 0x000D
IMAGE_REL_M32R_TOKEN 0x000E

IMAGE_REL_EBC_ABSOLUTE 0x0000
IMAGE_REL_EBC_ADDR32NB 0x0001
IMAGE_REL_EBC_REL32 0x0002
IMAGE_REL_EBC_SECTION 0x0003
IMAGE_REL_EBC_SECREL 0x0004

EXT_IMM64(Value, Address, Size, InstPos, ValPos) Value |= (((ULONGLONG)((*(Address) >> InstPos) & (((ULONGLONG)1 << Size) - 1))) << ValPos)

INS_IMM64(Value, Address, Size, InstPos, ValPos) *(PDWORD)Address = (*(PDWORD)Address & ~(((1 << Size) - 1) << InstPos)) | ((DWORD)((((ULONGLONG)Value >> ValPos) & (((ULONGLONG)1 << Size) - 1))) << InstPos)

EMARCH_ENC_I17_IMM7B_INST_WORD_X 3
EMARCH_ENC_I17_IMM7B_SIZE_X 7
EMARCH_ENC_I17_IMM7B_INST_WORD_POS_X 4
EMARCH_ENC_I17_IMM7B_VAL_POS_X 0

EMARCH_ENC_I17_IMM9D_INST_WORD_X 3
EMARCH_ENC_I17_IMM9D_SIZE_X 9
EMARCH_ENC_I17_IMM9D_INST_WORD_POS_X 18
EMARCH_ENC_I17_IMM9D_VAL_POS_X 7

EMARCH_ENC_I17_IMM5C_INST_WORD_X 3
EMARCH_ENC_I17_IMM5C_SIZE_X 5
EMARCH_ENC_I17_IMM5C_INST_WORD_POS_X 13
EMARCH_ENC_I17_IMM5C_VAL_POS_X 16

EMARCH_ENC_I17_IC_INST_WORD_X 3
EMARCH_ENC_I17_IC_SIZE_X 1
EMARCH_ENC_I17_IC_INST_WORD_POS_X 12
EMARCH_ENC_I17_IC_VAL_POS_X 21

EMARCH_ENC_I17_IMM41a_INST_WORD_X 1
EMARCH_ENC_I17_IMM41a_SIZE_X 10
EMARCH_ENC_I17_IMM41a_INST_WORD_POS_X 14
EMARCH_ENC_I17_IMM41a_VAL_POS_X 22

EMARCH_ENC_I17_IMM41b_INST_WORD_X 1
EMARCH_ENC_I17_IMM41b_SIZE_X 8
EMARCH_ENC_I17_IMM41b_INST_WORD_POS_X 24
EMARCH_ENC_I17_IMM41b_VAL_POS_X 32

EMARCH_ENC_I17_IMM41c_INST_WORD_X 2
EMARCH_ENC_I17_IMM41c_SIZE_X 23
EMARCH_ENC_I17_IMM41c_INST_WORD_POS_X 0
EMARCH_ENC_I17_IMM41c_VAL_POS_X 40

EMARCH_ENC_I17_SIGN_INST_WORD_X 3
EMARCH_ENC_I17_SIGN_SIZE_X 1
EMARCH_ENC_I17_SIGN_INST_WORD_POS_X 27
EMARCH_ENC_I17_SIGN_VAL_POS_X 63

X3_OPCODE_INST_WORD_X 3
X3_OPCODE_SIZE_X 4
X3_OPCODE_INST_WORD_POS_X 28
X3_OPCODE_SIGN_VAL_POS_X 0

X3_I_INST_WORD_X 3
X3_I_SIZE_X 1
X3_I_INST_WORD_POS_X 27
X3_I_SIGN_VAL_POS_X 59

X3_D_WH_INST_WORD_X 3
X3_D_WH_SIZE_X 3
X3_D_WH_INST_WORD_POS_X 24
X3_D_WH_SIGN_VAL_POS_X 0

X3_IMM20_INST_WORD_X 3
X3_IMM20_SIZE_X 20
X3_IMM20_INST_WORD_POS_X 4
X3_IMM20_SIGN_VAL_POS_X 0

X3_IMM39_1_INST_WORD_X 2
X3_IMM39_1_SIZE_X 23
X3_IMM39_1_INST_WORD_POS_X 0
X3_IMM39_1_SIGN_VAL_POS_X 36

X3_IMM39_2_INST_WORD_X 1
X3_IMM39_2_SIZE_X 16
X3_IMM39_2_INST_WORD_POS_X 16
X3_IMM39_2_SIGN_VAL_POS_X 20

X3_P_INST_WORD_X 3
X3_P_SIZE_X 4
X3_P_INST_WORD_POS_X 0
X3_P_SIGN_VAL_POS_X 0

X3_TMPLT_INST_WORD_X 0
X3_TMPLT_SIZE_X 4
X3_TMPLT_INST_WORD_POS_X 0
X3_TMPLT_SIGN_VAL_POS_X 0

X3_BTYPE_QP_INST_WORD_X 2
X3_BTYPE_QP_SIZE_X 9
X3_BTYPE_QP_INST_WORD_POS_X 23
X3_BTYPE_QP_INST_VAL_POS_X 0

X3_EMPTY_INST_WORD_X 1
X3_EMPTY_SIZE_X 2
X3_EMPTY_INST_WORD_POS_X 14
X3_EMPTY_INST_VAL_POS_X 0

typedef struct _IMAGE_LINENUMBER {
 union {
 DWORD SymbolTableIndex
 DWORD VirtualAddress
 } Type
 WORD Linenumber
} IMAGE_LINENUMBER
typedef IMAGE_LINENUMBER UNALIGNED *PIMAGE_LINENUMBER

#ifndef _MAC
#include "poppack.h"
#endif

typedef struct _IMAGE_BASE_RELOCATION {
 DWORD VirtualAddress
 DWORD SizeOfBlock

} IMAGE_BASE_RELOCATION
typedef IMAGE_BASE_RELOCATION UNALIGNED * PIMAGE_BASE_RELOCATION

IMAGE_REL_BASED_ABSOLUTE 0
IMAGE_REL_BASED_HIGH 1
IMAGE_REL_BASED_LOW 2
IMAGE_REL_BASED_HIGHLOW 3
IMAGE_REL_BASED_HIGHADJ 4
IMAGE_REL_BASED_MACHINE_SPECIFIC_5 5
IMAGE_REL_BASED_RESERVED 6
IMAGE_REL_BASED_MACHINE_SPECIFIC_7 7
IMAGE_REL_BASED_MACHINE_SPECIFIC_8 8
IMAGE_REL_BASED_MACHINE_SPECIFIC_9 9
IMAGE_REL_BASED_DIR64 10

IMAGE_REL_BASED_IA64_IMM64 9

IMAGE_REL_BASED_MIPS_JMPADDR 5
IMAGE_REL_BASED_MIPS_JMPADDR16 9

IMAGE_REL_BASED_ARM_MOV32 5
IMAGE_REL_BASED_THUMB_MOV32 7

IMAGE_ARCHIVE_START_SIZE 8
IMAGE_ARCHIVE_START "!<arch>\n"
IMAGE_ARCHIVE_END "`\n"
IMAGE_ARCHIVE_PAD "\n"
IMAGE_ARCHIVE_LINKER_MEMBER "/ "
IMAGE_ARCHIVE_LONGNAMES_MEMBER "
IMAGE_ARCHIVE_HYBRIDMAP_MEMBER "/<HYBRIDMAP>/ "

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER {
 BYTE Name[16]
 BYTE Date[12]
 BYTE UserID[6]
 BYTE GroupID[6]
 BYTE Mode[8]
 BYTE Size[10]
 BYTE EndHeader[2]
} IMAGE_ARCHIVE_MEMBER_HEADER, *PIMAGE_ARCHIVE_MEMBER_HEADER

IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR 60

typedef struct _IMAGE_EXPORT_DIRECTORY {
 DWORD Characteristics
 DWORD TimeDateStamp
 WORD MajorVersion
 WORD MinorVersion
 DWORD Name
 DWORD Base
 DWORD NumberOfFunctions
 DWORD NumberOfNames
 DWORD AddressOfFunctions
 DWORD AddressOfNames
 DWORD AddressOfNameOrdinals
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY

typedef struct _IMAGE_IMPORT_BY_NAME {
 WORD Hint
 CHAR Name[1]
} IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME

#include "pshpack8.h"

typedef struct _IMAGE_THUNK_DATA64 {
 union {
 ULONGLONG ForwarderString
 ULONGLONG Function
 ULONGLONG Ordinal
 ULONGLONG AddressOfData
 } u1
} IMAGE_THUNK_DATA64
typedef IMAGE_THUNK_DATA64 * PIMAGE_THUNK_DATA64

#include "poppack.h"

typedef struct _IMAGE_THUNK_DATA32 {
 union {
 DWORD ForwarderString
 DWORD Function
 DWORD Ordinal
 DWORD AddressOfData
 } u1
} IMAGE_THUNK_DATA32
typedef IMAGE_THUNK_DATA32 * PIMAGE_THUNK_DATA32

IMAGE_ORDINAL_FLAG64 0x8000000000000000
IMAGE_ORDINAL_FLAG32 0x80000000
IMAGE_ORDINAL64(Ordinal) = Ordinal & 0xffff
IMAGE_ORDINAL32(Ordinal) = Ordinal & 0xffff
IMAGE_SNAP_BY_ORDINAL64(Ordinal) = (Ordinal & IMAGE_ORDINAL_FLAG64) != 0
IMAGE_SNAP_BY_ORDINAL32(Ordinal) = (Ordinal & IMAGE_ORDINAL_FLAG32) != 0

typedef VOID
(NTAPI *PIMAGE_TLS_CALLBACK) (
 PVOID DllHandle,
 DWORD Reason,
 PVOID Reserved
 )

typedef struct _IMAGE_TLS_DIRECTORY64 {
 ULONGLONG StartAddressOfRawData
 ULONGLONG EndAddressOfRawData
 ULONGLONG AddressOfIndex
 ULONGLONG AddressOfCallBacks
 DWORD SizeOfZeroFill
 union {
 DWORD Characteristics
 struct {
 DWORD Reserved0 : 20
 DWORD Alignment : 4
 DWORD Reserved1 : 8
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME

} IMAGE_TLS_DIRECTORY64

typedef IMAGE_TLS_DIRECTORY64 * PIMAGE_TLS_DIRECTORY64

typedef struct _IMAGE_TLS_DIRECTORY32 {
 DWORD StartAddressOfRawData
 DWORD EndAddressOfRawData
 DWORD AddressOfIndex
 DWORD AddressOfCallBacks
 DWORD SizeOfZeroFill
 union {
 DWORD Characteristics
 struct {
 DWORD Reserved0 : 20
 DWORD Alignment : 4
 DWORD Reserved1 : 8
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME

} IMAGE_TLS_DIRECTORY32
typedef IMAGE_TLS_DIRECTORY32 * PIMAGE_TLS_DIRECTORY32

#ifdef _WIN64
IMAGE_ORDINAL_FLAG IMAGE_ORDINAL_FLAG64
IMAGE_ORDINAL(Ordinal) IMAGE_ORDINAL64(Ordinal)
typedef IMAGE_THUNK_DATA64 IMAGE_THUNK_DATA
typedef PIMAGE_THUNK_DATA64 PIMAGE_THUNK_DATA
IMAGE_SNAP_BY_ORDINAL(Ordinal) IMAGE_SNAP_BY_ORDINAL64(Ordinal)
typedef IMAGE_TLS_DIRECTORY64 IMAGE_TLS_DIRECTORY
typedef PIMAGE_TLS_DIRECTORY64 PIMAGE_TLS_DIRECTORY
#else
IMAGE_ORDINAL_FLAG IMAGE_ORDINAL_FLAG32
IMAGE_ORDINAL(Ordinal) IMAGE_ORDINAL32(Ordinal)
typedef IMAGE_THUNK_DATA32 IMAGE_THUNK_DATA
typedef PIMAGE_THUNK_DATA32 PIMAGE_THUNK_DATA
IMAGE_SNAP_BY_ORDINAL(Ordinal) IMAGE_SNAP_BY_ORDINAL32(Ordinal)
typedef IMAGE_TLS_DIRECTORY32 IMAGE_TLS_DIRECTORY
typedef PIMAGE_TLS_DIRECTORY32 PIMAGE_TLS_DIRECTORY
#endif

typedef struct _IMAGE_IMPORT_DESCRIPTOR {
 union {
 DWORD Characteristics
 DWORD OriginalFirstThunk
 } DUMMYUNIONNAME
 DWORD TimeDateStamp
 DWORD ForwarderChain
 DWORD Name
 DWORD FirstThunk
} IMAGE_IMPORT_DESCRIPTOR
typedef IMAGE_IMPORT_DESCRIPTOR UNALIGNED *PIMAGE_IMPORT_DESCRIPTOR

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {
 DWORD TimeDateStamp
 WORD OffsetModuleName
 WORD NumberOfModuleForwarderRefs

} IMAGE_BOUND_IMPORT_DESCRIPTOR, *PIMAGE_BOUND_IMPORT_DESCRIPTOR

typedef struct _IMAGE_BOUND_FORWARDER_REF {
 DWORD TimeDateStamp
 WORD OffsetModuleName
 WORD Reserved
} IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF

typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR {
 union {
 DWORD AllAttributes
 struct {
 DWORD RvaBased : 1
 DWORD ReservedAttributes : 31
 } DUMMYSTRUCTNAME
 } Attributes

 DWORD DllNameRVA
 DWORD ModuleHandleRVA
 DWORD ImportAddressTableRVA
 DWORD ImportNameTableRVA
 DWORD BoundImportAddressTableRVA
 DWORD UnloadInformationTableRVA
 DWORD TimeDateStamp
} IMAGE_DELAYLOAD_DESCRIPTOR, *PIMAGE_DELAYLOAD_DESCRIPTOR

typedef const IMAGE_DELAYLOAD_DESCRIPTOR *PCIMAGE_DELAYLOAD_DESCRIPTOR

typedef struct _IMAGE_RESOURCE_DIRECTORY {
 DWORD Characteristics
 DWORD TimeDateStamp
 WORD MajorVersion
 WORD MinorVersion
 WORD NumberOfNamedEntries
 WORD NumberOfIdEntries

} IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY

IMAGE_RESOURCE_NAME_IS_STRING 0x80000000
IMAGE_RESOURCE_DATA_IS_DIRECTORY 0x80000000

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
 union {
 struct {
 DWORD NameOffset:31
 DWORD NameIsString:1
 } DUMMYSTRUCTNAME
 DWORD Name
 WORD Id
 } DUMMYUNIONNAME
 union {
 DWORD OffsetToData
 struct {
 DWORD OffsetToDirectory:31
 DWORD DataIsDirectory:1
 } DUMMYSTRUCTNAME2
 } DUMMYUNIONNAME2
} IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING {
 WORD Length
 CHAR NameString[ 1 ]
} IMAGE_RESOURCE_DIRECTORY_STRING, *PIMAGE_RESOURCE_DIRECTORY_STRING

typedef struct _IMAGE_RESOURCE_DIR_STRING_U {
 WORD Length
 WCHAR NameString[ 1 ]
} IMAGE_RESOURCE_DIR_STRING_U, *PIMAGE_RESOURCE_DIR_STRING_U

typedef struct _IMAGE_RESOURCE_DATA_ENTRY {
 DWORD OffsetToData
 DWORD Size
 DWORD CodePage
 DWORD Reserved
} IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY

typedef struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY {
 WORD Flags
 WORD Catalog
 DWORD CatalogOffset
 DWORD Reserved
} IMAGE_LOAD_CONFIG_CODE_INTEGRITY, *PIMAGE_LOAD_CONFIG_CODE_INTEGRITY

typedef struct _IMAGE_DYNAMIC_RELOCATION_TABLE {
 DWORD Version
 DWORD Size

} IMAGE_DYNAMIC_RELOCATION_TABLE, *PIMAGE_DYNAMIC_RELOCATION_TABLE

#include "pshpack1.h"

typedef struct _IMAGE_DYNAMIC_RELOCATION32 {
 DWORD Symbol
 DWORD BaseRelocSize

} IMAGE_DYNAMIC_RELOCATION32, *PIMAGE_DYNAMIC_RELOCATION32

typedef struct _IMAGE_DYNAMIC_RELOCATION64 {
 ULONGLONG Symbol
 DWORD BaseRelocSize

} IMAGE_DYNAMIC_RELOCATION64, *PIMAGE_DYNAMIC_RELOCATION64

typedef struct _IMAGE_DYNAMIC_RELOCATION32_V2 {
 DWORD HeaderSize
 DWORD FixupInfoSize
 DWORD Symbol
 DWORD SymbolGroup
 DWORD Flags
} IMAGE_DYNAMIC_RELOCATION32_V2, *PIMAGE_DYNAMIC_RELOCATION32_V2

typedef struct _IMAGE_DYNAMIC_RELOCATION64_V2 {
 DWORD HeaderSize
 DWORD FixupInfoSize
 ULONGLONG Symbol
 DWORD SymbolGroup
 DWORD Flags
} IMAGE_DYNAMIC_RELOCATION64_V2, *PIMAGE_DYNAMIC_RELOCATION64_V2

#include "poppack.h"

#ifdef _WIN64
typedef IMAGE_DYNAMIC_RELOCATION64 IMAGE_DYNAMIC_RELOCATION
typedef PIMAGE_DYNAMIC_RELOCATION64 PIMAGE_DYNAMIC_RELOCATION
typedef IMAGE_DYNAMIC_RELOCATION64_V2 IMAGE_DYNAMIC_RELOCATION_V2
typedef PIMAGE_DYNAMIC_RELOCATION64_V2 PIMAGE_DYNAMIC_RELOCATION_V2
#else
typedef IMAGE_DYNAMIC_RELOCATION32 IMAGE_DYNAMIC_RELOCATION
typedef PIMAGE_DYNAMIC_RELOCATION32 PIMAGE_DYNAMIC_RELOCATION
typedef IMAGE_DYNAMIC_RELOCATION32_V2 IMAGE_DYNAMIC_RELOCATION_V2
typedef PIMAGE_DYNAMIC_RELOCATION32_V2 PIMAGE_DYNAMIC_RELOCATION_V2
#endif

IMAGE_DYNAMIC_RELOCATION_GUARD_RF_PROLOGUE 0x00000001
IMAGE_DYNAMIC_RELOCATION_GUARD_RF_EPILOGUE 0x00000002
IMAGE_DYNAMIC_RELOCATION_GUARD_IMPORT_CONTROL_TRANSFER 0x00000003
IMAGE_DYNAMIC_RELOCATION_GUARD_INDIR_CONTROL_TRANSFER 0x00000004
IMAGE_DYNAMIC_RELOCATION_GUARD_SWITCHTABLE_BRANCH 0x00000005

#include "pshpack1.h"

typedef struct _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER {
 BYTE PrologueByteCount

} IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER
typedef IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER UNALIGNED * PIMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER

typedef struct _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER {
 DWORD EpilogueCount
 BYTE EpilogueByteCount
 BYTE BranchDescriptorElementSize
 WORD BranchDescriptorCount
} IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER
typedef IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER UNALIGNED * PIMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER

typedef struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION {
 DWORD PageRelativeOffset : 12
 DWORD IndirectCall : 1
 DWORD IATIndex : 19
} IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION
typedef IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION UNALIGNED * PIMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION

typedef struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION {
 WORD PageRelativeOffset : 12
 WORD IndirectCall : 1
 WORD RexWPrefix : 1
 WORD CfgCheck : 1
 WORD Reserved : 1
} IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION
typedef IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION UNALIGNED * PIMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION

typedef struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION {
 WORD PageRelativeOffset : 12
 WORD RegisterNumber : 4
} IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION
typedef IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION UNALIGNED * PIMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION

#include "poppack.h"

typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY32 {
 DWORD Size
 DWORD TimeDateStamp
 WORD MajorVersion
 WORD MinorVersion
 DWORD GlobalFlagsClear
 DWORD GlobalFlagsSet
 DWORD CriticalSectionDefaultTimeout
 DWORD DeCommitFreeBlockThreshold
 DWORD DeCommitTotalFreeThreshold
 DWORD LockPrefixTable
 DWORD MaximumAllocationSize
 DWORD VirtualMemoryThreshold
 DWORD ProcessHeapFlags
 DWORD ProcessAffinityMask
 WORD CSDVersion
 WORD DependentLoadFlags
 DWORD EditList
 DWORD SecurityCookie
 DWORD SEHandlerTable
 DWORD SEHandlerCount
 DWORD GuardCFCheckFunctionPointer
 DWORD GuardCFDispatchFunctionPointer
 DWORD GuardCFFunctionTable
 DWORD GuardCFFunctionCount
 DWORD GuardFlags
 IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity
 DWORD GuardAddressTakenIatEntryTable
 DWORD GuardAddressTakenIatEntryCount
 DWORD GuardLongJumpTargetTable
 DWORD GuardLongJumpTargetCount
 DWORD DynamicValueRelocTable
 DWORD CHPEMetadataPointer
 DWORD GuardRFFailureRoutine
 DWORD GuardRFFailureRoutineFunctionPointer
 DWORD DynamicValueRelocTableOffset
 WORD DynamicValueRelocTableSection
 WORD Reserved2
 DWORD GuardRFVerifyStackPointerFunctionPointer
 DWORD HotPatchTableOffset
 DWORD Reserved3
 DWORD EnclaveConfigurationPointer
 DWORD VolatileMetadataPointer
} IMAGE_LOAD_CONFIG_DIRECTORY32, *PIMAGE_LOAD_CONFIG_DIRECTORY32

typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY64 {
 DWORD Size
 DWORD TimeDateStamp
 WORD MajorVersion
 WORD MinorVersion
 DWORD GlobalFlagsClear
 DWORD GlobalFlagsSet
 DWORD CriticalSectionDefaultTimeout
 ULONGLONG DeCommitFreeBlockThreshold
 ULONGLONG DeCommitTotalFreeThreshold
 ULONGLONG LockPrefixTable
 ULONGLONG MaximumAllocationSize
 ULONGLONG VirtualMemoryThreshold
 ULONGLONG ProcessAffinityMask
 DWORD ProcessHeapFlags
 WORD CSDVersion
 WORD DependentLoadFlags
 ULONGLONG EditList
 ULONGLONG SecurityCookie
 ULONGLONG SEHandlerTable
 ULONGLONG SEHandlerCount
 ULONGLONG GuardCFCheckFunctionPointer
 ULONGLONG GuardCFDispatchFunctionPointer
 ULONGLONG GuardCFFunctionTable
 ULONGLONG GuardCFFunctionCount
 DWORD GuardFlags
 IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity
 ULONGLONG GuardAddressTakenIatEntryTable
 ULONGLONG GuardAddressTakenIatEntryCount
 ULONGLONG GuardLongJumpTargetTable
 ULONGLONG GuardLongJumpTargetCount
 ULONGLONG DynamicValueRelocTable
 ULONGLONG CHPEMetadataPointer
 ULONGLONG GuardRFFailureRoutine
 ULONGLONG GuardRFFailureRoutineFunctionPointer
 DWORD DynamicValueRelocTableOffset
 WORD DynamicValueRelocTableSection
 WORD Reserved2
 ULONGLONG GuardRFVerifyStackPointerFunctionPointer
 DWORD HotPatchTableOffset
 DWORD Reserved3
 ULONGLONG EnclaveConfigurationPointer
 ULONGLONG VolatileMetadataPointer
} IMAGE_LOAD_CONFIG_DIRECTORY64, *PIMAGE_LOAD_CONFIG_DIRECTORY64

#ifdef _WIN64
typedef IMAGE_LOAD_CONFIG_DIRECTORY64 IMAGE_LOAD_CONFIG_DIRECTORY
typedef PIMAGE_LOAD_CONFIG_DIRECTORY64 PIMAGE_LOAD_CONFIG_DIRECTORY
#else
typedef IMAGE_LOAD_CONFIG_DIRECTORY32 IMAGE_LOAD_CONFIG_DIRECTORY
typedef PIMAGE_LOAD_CONFIG_DIRECTORY32 PIMAGE_LOAD_CONFIG_DIRECTORY
#endif

typedef struct _IMAGE_HOT_PATCH_INFO {
 DWORD Version
 DWORD Size
 DWORD SequenceNumber
 DWORD BaseImageList
 DWORD BaseImageCount
 DWORD BufferOffset
 DWORD ExtraPatchSize
} IMAGE_HOT_PATCH_INFO, *PIMAGE_HOT_PATCH_INFO

typedef struct _IMAGE_HOT_PATCH_BASE {
 DWORD SequenceNumber
 DWORD Flags
 DWORD OriginalTimeDateStamp
 DWORD OriginalCheckSum
 DWORD CodeIntegrityInfo
 DWORD CodeIntegritySize
 DWORD PatchTable
 DWORD BufferOffset
} IMAGE_HOT_PATCH_BASE, *PIMAGE_HOT_PATCH_BASE

typedef struct _IMAGE_HOT_PATCH_HASHES {
 BYTE SHA256[32]
 BYTE SHA1[20]
} IMAGE_HOT_PATCH_HASHES, *PIMAGE_HOT_PATCH_HASHES

IMAGE_HOT_PATCH_BASE_OBLIGATORY 0x00000001
IMAGE_HOT_PATCH_BASE_CAN_ROLL_BACK 0x00000002

IMAGE_HOT_PATCH_CHUNK_INVERSE 0x80000000
IMAGE_HOT_PATCH_CHUNK_OBLIGATORY 0x40000000
IMAGE_HOT_PATCH_CHUNK_RESERVED 0x3FF03000
IMAGE_HOT_PATCH_CHUNK_TYPE 0x000FC000
IMAGE_HOT_PATCH_CHUNK_SOURCE_RVA 0x00008000
IMAGE_HOT_PATCH_CHUNK_TARGET_RVA 0x00004000
IMAGE_HOT_PATCH_CHUNK_SIZE 0x00000FFF

IMAGE_HOT_PATCH_NONE 0x00000000
IMAGE_HOT_PATCH_FUNCTION 0x0001C000
IMAGE_HOT_PATCH_ABSOLUTE 0x0002C000
IMAGE_HOT_PATCH_REL32 0x0003C000
IMAGE_HOT_PATCH_CALL_TARGET 0x00044000
IMAGE_HOT_PATCH_INDIRECT 0x0005C000
IMAGE_HOT_PATCH_NO_CALL_TARGET 0x00064000
IMAGE_HOT_PATCH_DYNAMIC_VALUE 0x00078000

IMAGE_GUARD_CF_INSTRUMENTED 0x00000100
IMAGE_GUARD_CFW_INSTRUMENTED 0x00000200
IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT 0x00000400
IMAGE_GUARD_SECURITY_COOKIE_UNUSED 0x00000800
IMAGE_GUARD_PROTECT_DELAYLOAD_IAT 0x00001000
IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION 0x00002000
IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT 0x00004000

IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION 0x00008000
IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT 0x00010000
IMAGE_GUARD_RF_INSTRUMENTED 0x00020000
IMAGE_GUARD_RF_ENABLE 0x00040000
IMAGE_GUARD_RF_STRICT 0x00080000
IMAGE_GUARD_RETPOLINE_PRESENT 0x00100000

IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK 0xF0000000
IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT 28

IMAGE_GUARD_FLAG_FID_SUPPRESSED 0x01
IMAGE_GUARD_FLAG_EXPORT_SUPPRESSED 0x02

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY {
 DWORD FuncStart
 DWORD PrologLen : 8
 DWORD FuncLen : 22
 DWORD ThirtyTwoBit : 1
 DWORD ExceptionFlag : 1
} IMAGE_CE_RUNTIME_FUNCTION_ENTRY, * PIMAGE_CE_RUNTIME_FUNCTION_ENTRY

typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY {
 DWORD BeginAddress
 union {
 DWORD UnwindData
 struct {
 DWORD Flag : 2
 DWORD FunctionLength : 11
 DWORD Ret : 2
 DWORD H : 1
 DWORD Reg : 3
 DWORD R : 1
 DWORD L : 1
 DWORD C : 1
 DWORD StackAdjust : 10
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} IMAGE_ARM_RUNTIME_FUNCTION_ENTRY, * PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY

typedef struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY {
 DWORD BeginAddress
 union {
 DWORD UnwindData
 struct {
 DWORD Flag : 2
 DWORD FunctionLength : 11
 DWORD RegF : 3
 DWORD RegI : 4
 DWORD H : 1
 DWORD CR : 2
 DWORD FrameSize : 9
 } DUMMYSTRUCTNAME
 } DUMMYUNIONNAME
} IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY, * PIMAGE_ARM64_RUNTIME_FUNCTION_ENTRY

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY {
 ULONGLONG BeginAddress
 ULONGLONG EndAddress
 ULONGLONG ExceptionHandler
 ULONGLONG HandlerData
 ULONGLONG PrologEndAddress
} IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY {
 DWORD BeginAddress
 DWORD EndAddress
 DWORD ExceptionHandler
 DWORD HandlerData
 DWORD PrologEndAddress
} IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY


IMAGE_IA64_RUNTIME_FUNCTION_ENTRY = _IMAGE_RUNTIME_FUNCTION_ENTRY
PIMAGE_IA64_RUNTIME_FUNCTION_ENTRY = _PIMAGE_RUNTIME_FUNCTION_ENTRY

#if defined(_AXP64_)

typedef IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY IMAGE_AXP64_RUNTIME_FUNCTION_ENTRY
typedef PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY PIMAGE_AXP64_RUNTIME_FUNCTION_ENTRY
typedef IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY
typedef PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY

#elif defined(_ALPHA_)

typedef IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY
typedef PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY

#elif defined(_ARM64_)

typedef IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY
typedef PIMAGE_ARM64_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY

#elif defined(_ARM_)

typedef IMAGE_ARM_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY
typedef PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY

#else

typedef _IMAGE_RUNTIME_FUNCTION_ENTRY IMAGE_RUNTIME_FUNCTION_ENTRY
typedef _PIMAGE_RUNTIME_FUNCTION_ENTRY PIMAGE_RUNTIME_FUNCTION_ENTRY

#endif

IMAGE_ENCLAVE_LONG_ID_LENGTH 32
IMAGE_ENCLAVE_SHORT_ID_LENGTH 16

typedef struct _IMAGE_ENCLAVE_CONFIG32 {
 DWORD Size
 DWORD MinimumRequiredConfigSize
 DWORD PolicyFlags
 DWORD NumberOfImports
 DWORD ImportList
 DWORD ImportEntrySize
 BYTE FamilyID[IMAGE_ENCLAVE_SHORT_ID_LENGTH]
 BYTE ImageID[IMAGE_ENCLAVE_SHORT_ID_LENGTH]
 DWORD ImageVersion
 DWORD SecurityVersion
 DWORD EnclaveSize
 DWORD NumberOfThreads
 DWORD EnclaveFlags
} IMAGE_ENCLAVE_CONFIG32, *PIMAGE_ENCLAVE_CONFIG32

typedef struct _IMAGE_ENCLAVE_CONFIG64 {
 DWORD Size
 DWORD MinimumRequiredConfigSize
 DWORD PolicyFlags
 DWORD NumberOfImports
 DWORD ImportList
 DWORD ImportEntrySize
 BYTE FamilyID[IMAGE_ENCLAVE_SHORT_ID_LENGTH]
 BYTE ImageID[IMAGE_ENCLAVE_SHORT_ID_LENGTH]
 DWORD ImageVersion
 DWORD SecurityVersion
 ULONGLONG EnclaveSize
 DWORD NumberOfThreads
 DWORD EnclaveFlags
} IMAGE_ENCLAVE_CONFIG64, *PIMAGE_ENCLAVE_CONFIG64

#ifdef _WIN64
typedef IMAGE_ENCLAVE_CONFIG64 IMAGE_ENCLAVE_CONFIG
typedef PIMAGE_ENCLAVE_CONFIG64 PIMAGE_ENCLAVE_CONFIG
#else
typedef IMAGE_ENCLAVE_CONFIG32 IMAGE_ENCLAVE_CONFIG
typedef PIMAGE_ENCLAVE_CONFIG32 PIMAGE_ENCLAVE_CONFIG
#endif

IMAGE_ENCLAVE_MINIMUM_CONFIG_SIZE FIELD_OFFSET(IMAGE_ENCLAVE_CONFIG, EnclaveFlags)

IMAGE_ENCLAVE_POLICY_DEBUGGABLE 0x00000001

IMAGE_ENCLAVE_FLAG_PRIMARY_IMAGE 0x00000001

typedef struct _IMAGE_ENCLAVE_IMPORT {
 DWORD MatchType
 DWORD MinimumSecurityVersion
 BYTE UniqueOrAuthorID[IMAGE_ENCLAVE_LONG_ID_LENGTH]
 BYTE FamilyID[IMAGE_ENCLAVE_SHORT_ID_LENGTH]
 BYTE ImageID[IMAGE_ENCLAVE_SHORT_ID_LENGTH]
 DWORD ImportName
 DWORD Reserved
} IMAGE_ENCLAVE_IMPORT, *PIMAGE_ENCLAVE_IMPORT

IMAGE_ENCLAVE_IMPORT_MATCH_NONE 0x00000000
IMAGE_ENCLAVE_IMPORT_MATCH_UNIQUE_ID 0x00000001
IMAGE_ENCLAVE_IMPORT_MATCH_AUTHOR_ID 0x00000002
IMAGE_ENCLAVE_IMPORT_MATCH_FAMILY_ID 0x00000003
IMAGE_ENCLAVE_IMPORT_MATCH_IMAGE_ID 0x00000004

typedef struct _IMAGE_DEBUG_DIRECTORY {
 DWORD Characteristics
 DWORD TimeDateStamp
 WORD MajorVersion
 WORD MinorVersion
 DWORD Type
 DWORD SizeOfData
 DWORD AddressOfRawData
 DWORD PointerToRawData
} IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY

IMAGE_DEBUG_TYPE_UNKNOWN 0
IMAGE_DEBUG_TYPE_COFF 1
IMAGE_DEBUG_TYPE_CODEVIEW 2
IMAGE_DEBUG_TYPE_FPO 3
IMAGE_DEBUG_TYPE_MISC 4
IMAGE_DEBUG_TYPE_EXCEPTION 5
IMAGE_DEBUG_TYPE_FIXUP 6
IMAGE_DEBUG_TYPE_OMAP_TO_SRC 7
IMAGE_DEBUG_TYPE_OMAP_FROM_SRC 8
IMAGE_DEBUG_TYPE_BORLAND 9
IMAGE_DEBUG_TYPE_RESERVED10 10
IMAGE_DEBUG_TYPE_CLSID 11
IMAGE_DEBUG_TYPE_VC_FEATURE 12
IMAGE_DEBUG_TYPE_POGO 13
IMAGE_DEBUG_TYPE_ILTCG 14
IMAGE_DEBUG_TYPE_MPX 15
IMAGE_DEBUG_TYPE_REPRO 16

typedef struct _IMAGE_COFF_SYMBOLS_HEADER {
 DWORD NumberOfSymbols
 DWORD LvaToFirstSymbol
 DWORD NumberOfLinenumbers
 DWORD LvaToFirstLinenumber
 DWORD RvaToFirstByteOfCode
 DWORD RvaToLastByteOfCode
 DWORD RvaToFirstByteOfData
 DWORD RvaToLastByteOfData
} IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER

FRAME_FPO 0
FRAME_TRAP 1
FRAME_TSS 2
FRAME_NONFPO 3

typedef struct _FPO_DATA {
 DWORD ulOffStart
 DWORD cbProcSize
 DWORD cdwLocals
 WORD cdwParams
 WORD cbProlog : 8
 WORD cbRegs : 3
 WORD fHasSEH : 1
 WORD fUseBP : 1
 WORD reserved : 1
 WORD cbFrame : 2
} FPO_DATA, *PFPO_DATA
SIZEOF_RFPO_DATA 16

IMAGE_DEBUG_MISC_EXENAME 1

typedef struct _IMAGE_DEBUG_MISC {
 DWORD DataType
 DWORD Length

 BOOLEAN Unicode
 BYTE Reserved[ 3 ]
 BYTE Data[ 1 ]
} IMAGE_DEBUG_MISC, *PIMAGE_DEBUG_MISC

typedef struct _IMAGE_FUNCTION_ENTRY {
 DWORD StartingAddress
 DWORD EndingAddress
 DWORD EndOfPrologue
} IMAGE_FUNCTION_ENTRY, *PIMAGE_FUNCTION_ENTRY

typedef struct _IMAGE_FUNCTION_ENTRY64 {
 ULONGLONG StartingAddress
 ULONGLONG EndingAddress
 union {
 ULONGLONG EndOfPrologue
 ULONGLONG UnwindInfoAddress
 } DUMMYUNIONNAME
} IMAGE_FUNCTION_ENTRY64, *PIMAGE_FUNCTION_ENTRY64

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {
 WORD Signature
 WORD Flags
 WORD Machine
 WORD Characteristics
 DWORD TimeDateStamp
 DWORD CheckSum
 DWORD ImageBase
 DWORD SizeOfImage
 DWORD NumberOfSections
 DWORD ExportedNamesSize
 DWORD DebugDirectorySize
 DWORD SectionAlignment
 DWORD Reserved[2]
} IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER

typedef struct _NON_PAGED_DEBUG_INFO {
 WORD Signature
 WORD Flags
 DWORD Size
 WORD Machine
 WORD Characteristics
 DWORD TimeDateStamp
 DWORD CheckSum
 DWORD SizeOfImage
 ULONGLONG ImageBase
} NON_PAGED_DEBUG_INFO, *PNON_PAGED_DEBUG_INFO

#ifndef _MAC
IMAGE_SEPARATE_DEBUG_SIGNATURE 0x4944
NON_PAGED_DEBUG_SIGNATURE 0x494E
#else
IMAGE_SEPARATE_DEBUG_SIGNATURE 0x4449
NON_PAGED_DEBUG_SIGNATURE 0x4E49
#endif

IMAGE_SEPARATE_DEBUG_FLAGS_MASK 0x8000
IMAGE_SEPARATE_DEBUG_MISMATCH 0x8000

typedef struct _ImageArchitectureHeader {
 unsigned int AmaskValue: 1

 int :7
 unsigned int AmaskShift: 8
 int :16
 DWORD FirstEntryRVA
} IMAGE_ARCHITECTURE_HEADER, *PIMAGE_ARCHITECTURE_HEADER

typedef struct _ImageArchitectureEntry {
 DWORD FixupInstRVA
 DWORD NewInst
} IMAGE_ARCHITECTURE_ENTRY, *PIMAGE_ARCHITECTURE_ENTRY

#include "poppack.h"

IMPORT_OBJECT_HDR_SIG2 0xffff

typedef struct IMPORT_OBJECT_HEADER {
 WORD Sig1
 WORD Sig2
 WORD Version
 WORD Machine
 DWORD TimeDateStamp
 DWORD SizeOfData

 union {
 WORD Ordinal
 WORD Hint
 } DUMMYUNIONNAME

 WORD Type : 2
 WORD NameType : 3
 WORD Reserved : 11
} IMPORT_OBJECT_HEADER

typedef enum IMPORT_OBJECT_TYPE
{
 IMPORT_OBJECT_CODE = 0,
 IMPORT_OBJECT_DATA = 1,
 IMPORT_OBJECT_CONST = 2,
} IMPORT_OBJECT_TYPE

typedef enum IMPORT_OBJECT_NAME_TYPE
{
 IMPORT_OBJECT_ORDINAL = 0,
 IMPORT_OBJECT_NAME = 1,
 IMPORT_OBJECT_NAME_NO_PREFIX = 2,
 IMPORT_OBJECT_NAME_UNDECORATE = 3,

 IMPORT_OBJECT_NAME_EXPORTAS = 4,
} IMPORT_OBJECT_NAME_TYPE

#ifndef __IMAGE_COR20_HEADER_DEFINED__
__IMAGE_COR20_HEADER_DEFINED__

typedef enum ReplacesCorHdrNumericDefines
{

 COMIMAGE_FLAGS_ILONLY =0x00000001,
 COMIMAGE_FLAGS_32BITREQUIRED =0x00000002,
 COMIMAGE_FLAGS_IL_LIBRARY =0x00000004,
 COMIMAGE_FLAGS_STRONGNAMESIGNED =0x00000008,
 COMIMAGE_FLAGS_NATIVE_ENTRYPOINT =0x00000010,
 COMIMAGE_FLAGS_TRACKDEBUGDATA =0x00010000,
 COMIMAGE_FLAGS_32BITPREFERRED =0x00020000,

 COR_VERSION_MAJOR_V2 =2,
 COR_VERSION_MAJOR =COR_VERSION_MAJOR_V2,
 COR_VERSION_MINOR =5,
 COR_DELETED_NAME_LENGTH =8,
 COR_VTABLEGAP_NAME_LENGTH =8,

 NATIVE_TYPE_MAX_CB =1,
 COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE=0xFF,

 IMAGE_COR_MIH_METHODRVA =0x01,
 IMAGE_COR_MIH_EHRVA =0x02,
 IMAGE_COR_MIH_BASICBLOCK =0x08,

 COR_VTABLE_32BIT =0x01,
 COR_VTABLE_64BIT =0x02,
 COR_VTABLE_FROM_UNMANAGED =0x04,
 COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN =0x08,
 COR_VTABLE_CALL_MOST_DERIVED =0x10,

 IMAGE_COR_EATJ_THUNK_SIZE =32,

 MAX_CLASS_NAME =1024,
 MAX_PACKAGE_NAME =1024,
} ReplacesCorHdrNumericDefines

typedef struct IMAGE_COR20_HEADER
{

 DWORD cb
 WORD MajorRuntimeVersion
 WORD MinorRuntimeVersion
 IMAGE_DATA_DIRECTORY MetaData
 DWORD Flags

 union {
 DWORD EntryPointToken
 DWORD EntryPointRVA
 } DUMMYUNIONNAME
 IMAGE_DATA_DIRECTORY Resources
 IMAGE_DATA_DIRECTORY StrongNameSignature
 IMAGE_DATA_DIRECTORY CodeManagerTable
 IMAGE_DATA_DIRECTORY VTableFixups
 IMAGE_DATA_DIRECTORY ExportAddressTableJumps
 IMAGE_DATA_DIRECTORY ManagedNativeHeader

} IMAGE_COR20_HEADER, *PIMAGE_COR20_HEADER


#ifndef _SLIST_HEADER_
_SLIST_HEADER_

#if defined(_WIN64)

typedef struct DECLSPEC_ALIGN(16) _SLIST_ENTRY {
 struct _SLIST_ENTRY *Next
} SLIST_ENTRY, *PSLIST_ENTRY

#else

typedef struct _SINGLE_LIST_ENTRY SLIST_ENTRY, *PSLIST_ENTRY

#endif

#if defined(_AMD64_)

typedef union DECLSPEC_ALIGN(16) _SLIST_HEADER {
 struct {
 ULONGLONG Alignment
 ULONGLONG Region
 } DUMMYSTRUCTNAME
 struct {
 ULONGLONG Depth:16
 ULONGLONG Sequence:48
 ULONGLONG Reserved:4
 ULONGLONG NextEntry:60
 } HeaderX64
} SLIST_HEADER, *PSLIST_HEADER

#elif defined(_ARM64_)

typedef union DECLSPEC_ALIGN(16) _SLIST_HEADER {
 struct {
 ULONGLONG Alignment
 ULONGLONG Region
 } DUMMYSTRUCTNAME
 struct {
 ULONGLONG Depth:16
 ULONGLONG Sequence:48
 ULONGLONG Reserved:4
 ULONGLONG NextEntry:60
 } HeaderArm64
} SLIST_HEADER, *PSLIST_HEADER

typedef union _SLIST_HEADER {
 ULONGLONG Alignment
 struct {
 SLIST_ENTRY Next
 WORD Depth
 WORD CpuId
 } DUMMYSTRUCTNAME
} SLIST_HEADER, *PSLIST_HEADER

typedef union _SLIST_HEADER {
 ULONGLONG Alignment
 struct {
 SLIST_ENTRY Next
 WORD Depth
 WORD Reserved
 } DUMMYSTRUCTNAME
} SLIST_HEADER, *PSLIST_HEADER

RTL_RUN_ONCE_INIT {0}

RTL_RUN_ONCE_CHECK_ONLY 0x00000001UL
RTL_RUN_ONCE_ASYNC 0x00000002UL
RTL_RUN_ONCE_INIT_FAILED 0x00000004UL

RTL_RUN_ONCE_CTX_RESERVED_BITS 2

typedef union _RTL_RUN_ONCE {
 PVOID Ptr
} RTL_RUN_ONCE, *PRTL_RUN_ONCE

typedef struct _RTL_BARRIER {
 DWORD Reserved1
 DWORD Reserved2
 ULONG_PTR Reserved3[2]
 DWORD Reserved4
 DWORD Reserved5
} RTL_BARRIER, *PRTL_BARRIER

FAST_FAIL_LEGACY_GS_VIOLATION 0
FAST_FAIL_VTGUARD_CHECK_FAILURE 1
FAST_FAIL_STACK_COOKIE_CHECK_FAILURE 2
FAST_FAIL_CORRUPT_LIST_ENTRY 3
FAST_FAIL_INCORRECT_STACK 4
FAST_FAIL_INVALID_ARG 5
FAST_FAIL_GS_COOKIE_INIT 6
FAST_FAIL_FATAL_APP_EXIT 7
FAST_FAIL_RANGE_CHECK_FAILURE 8
FAST_FAIL_UNSAFE_REGISTRY_ACCESS 9
FAST_FAIL_GUARD_ICALL_CHECK_FAILURE 10
FAST_FAIL_GUARD_WRITE_CHECK_FAILURE 11
FAST_FAIL_INVALID_FIBER_SWITCH 12
FAST_FAIL_INVALID_SET_OF_CONTEXT 13
FAST_FAIL_INVALID_REFERENCE_COUNT 14
FAST_FAIL_INVALID_JUMP_BUFFER 18
FAST_FAIL_MRDATA_MODIFIED 19
FAST_FAIL_CERTIFICATION_FAILURE 20
FAST_FAIL_INVALID_EXCEPTION_CHAIN 21
FAST_FAIL_CRYPTO_LIBRARY 22
FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT 23
FAST_FAIL_INVALID_IMAGE_BASE 24
FAST_FAIL_DLOAD_PROTECTION_FAILURE 25
FAST_FAIL_UNSAFE_EXTENSION_CALL 26
FAST_FAIL_DEPRECATED_SERVICE_INVOKED 27
FAST_FAIL_INVALID_BUFFER_ACCESS 28
FAST_FAIL_INVALID_BALANCED_TREE 29
FAST_FAIL_INVALID_NEXT_THREAD 30
FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED 31
FAST_FAIL_APCS_DISABLED 32
FAST_FAIL_INVALID_IDLE_STATE 33
FAST_FAIL_MRDATA_PROTECTION_FAILURE 34
FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION 35
FAST_FAIL_INVALID_LOCK_STATE 36
FAST_FAIL_GUARD_JUMPTABLE 37
FAST_FAIL_INVALID_LONGJUMP_TARGET 38
FAST_FAIL_INVALID_DISPATCH_CONTEXT 39
FAST_FAIL_INVALID_THREAD 40
FAST_FAIL_INVALID_SYSCALL_NUMBER 41
FAST_FAIL_INVALID_FILE_OPERATION 42
FAST_FAIL_LPAC_ACCESS_DENIED 43
FAST_FAIL_GUARD_SS_FAILURE 44
FAST_FAIL_LOADER_CONTINUITY_FAILURE 45
FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE 46
FAST_FAIL_INVALID_CONTROL_STACK 47
FAST_FAIL_SET_CONTEXT_DENIED 48
FAST_FAIL_INVALID_IAT 49
FAST_FAIL_HEAP_METADATA_CORRUPTION 50
FAST_FAIL_PAYLOAD_RESTRICTION_VIOLATION 51
FAST_FAIL_LOW_LABEL_ACCESS_DENIED 52
FAST_FAIL_ENCLAVE_CALL_FAILURE 53
FAST_FAIL_UNHANDLED_LSS_EXCEPTON 54
FAST_FAIL_ADMINLESS_ACCESS_DENIED 55
FAST_FAIL_UNEXPECTED_CALL 56
FAST_FAIL_CONTROL_INVALID_RETURN_ADDRESS 57
FAST_FAIL_INVALID_FAST_FAIL_CODE 0xFFFFFFFF

HEAP_NO_SERIALIZE 0x00000001
HEAP_GROWABLE 0x00000002
HEAP_GENERATE_EXCEPTIONS 0x00000004
HEAP_ZERO_MEMORY 0x00000008
HEAP_REALLOC_IN_PLACE_ONLY 0x00000010
HEAP_TAIL_CHECKING_ENABLED 0x00000020
HEAP_FREE_CHECKING_ENABLED 0x00000040
HEAP_DISABLE_COALESCE_ON_FREE 0x00000080
HEAP_CREATE_ALIGN_16 0x00010000
HEAP_CREATE_ENABLE_TRACING 0x00020000
HEAP_CREATE_ENABLE_EXECUTE 0x00040000
HEAP_MAXIMUM_TAG 0x0FFF
HEAP_PSEUDO_TAG_FLAG 0x8000
HEAP_TAG_SHIFT 18
HEAP_CREATE_SEGMENT_HEAP 0x00000100
HEAP_CREATE_HARDENED 0x00000200

IS_TEXT_UNICODE_ASCII16 0x0001
IS_TEXT_UNICODE_REVERSE_ASCII16 0x0010
IS_TEXT_UNICODE_STATISTICS 0x0002
IS_TEXT_UNICODE_REVERSE_STATISTICS 0x0020
IS_TEXT_UNICODE_CONTROLS 0x0004
IS_TEXT_UNICODE_REVERSE_CONTROLS 0x0040
IS_TEXT_UNICODE_SIGNATURE 0x0008
IS_TEXT_UNICODE_REVERSE_SIGNATURE 0x0080
IS_TEXT_UNICODE_ILLEGAL_CHARS 0x0100
IS_TEXT_UNICODE_ODD_LENGTH 0x0200
IS_TEXT_UNICODE_DBCS_LEADBYTE 0x0400
IS_TEXT_UNICODE_NULL_BYTES 0x1000
IS_TEXT_UNICODE_UNICODE_MASK 0x000F
IS_TEXT_UNICODE_REVERSE_MASK 0x00F0
IS_TEXT_UNICODE_NOT_UNICODE_MASK 0x0F00
IS_TEXT_UNICODE_NOT_ASCII_MASK 0xF000
"""

COMPRESSION_FORMAT_NONE = 0x0000
COMPRESSION_FORMAT_DEFAULT = 0x0001
COMPRESSION_FORMAT_LZNT1 = 0x0002
COMPRESSION_FORMAT_XPRESS = 0x0003
COMPRESSION_FORMAT_XPRESS_HUFF = 0x0004
COMPRESSION_ENGINE_STANDARD = 0x0000
COMPRESSION_ENGINE_MAXIMUM = 0x0100
COMPRESSION_ENGINE_HIBER = 0x0200

SEF_DACL_AUTO_INHERIT = 0x01
SEF_SACL_AUTO_INHERIT = 0x02
SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT = 0x04
SEF_AVOID_PRIVILEGE_CHECK = 0x08
SEF_AVOID_OWNER_CHECK = 0x10
SEF_DEFAULT_OWNER_FROM_PARENT = 0x20
SEF_DEFAULT_GROUP_FROM_PARENT = 0x40
SEF_MACL_NO_WRITE_UP = 0x100
SEF_MACL_NO_READ_UP = 0x200
SEF_MACL_NO_EXECUTE_UP = 0x400
SEF_AI_USE_EXTRA_PARAMS = 0x800
SEF_AVOID_OWNER_RESTRICTION = 0x1000
SEF_FORCE_USER_MODE = 0x2000

SEF_MACL_VALID_FLAGS = SEF_MACL_NO_WRITE_UP | SEF_MACL_NO_READ_UP | SEF_MACL_NO_EXECUTE_UP

"""
typedef struct _MESSAGE_RESOURCE_ENTRY {
 WORD Length
 WORD Flags
 BYTE Text[ 1 ]
} MESSAGE_RESOURCE_ENTRY, *PMESSAGE_RESOURCE_ENTRY

MESSAGE_RESOURCE_UNICODE = 0x0001

typedef struct _MESSAGE_RESOURCE_BLOCK {
 DWORD LowId
 DWORD HighId
 DWORD OffsetToEntries
} MESSAGE_RESOURCE_BLOCK, *PMESSAGE_RESOURCE_BLOCK

typedef struct _MESSAGE_RESOURCE_DATA {
 DWORD NumberOfBlocks
 MESSAGE_RESOURCE_BLOCK Blocks[ 1 ]
} MESSAGE_RESOURCE_DATA, *PMESSAGE_RESOURCE_DATA
"""


class OSVERSIONINFOA(Structure):
    _fields_ = [
        ("dwOSVersionInfoSize", DWORD),
        ("dwMajorVersion", DWORD),
        ("dwMinorVersion", DWORD),
        ("dwBuildNumber", DWORD),
        ("dwPlatformId", DWORD),
        ("szCSDVersion", CHAR * 128),
    ]


LPOSVERSIONINFOA = POINTER(OSVERSIONINFOA)


class OSVERSIONINFOW(Structure):
    _fields_ = [
        ("dwOSVersionInfoSize", DWORD),
        ("dwMajorVersion", DWORD),
        ("dwMinorVersion", DWORD),
        ("dwBuildNumber", DWORD),
        ("dwPlatformId", DWORD),
        ("szCSDVersion", WCHAR * 128),
    ]


LPOSVERSIONINFOW = POINTER(OSVERSIONINFOW)

"""
typedef struct _OSVERSIONINFOEXA {
 DWORD dwOSVersionInfoSize
 DWORD dwMajorVersion
 DWORD dwMinorVersion
 DWORD dwBuildNumber
 DWORD dwPlatformId
 CHAR szCSDVersion[ 128 ]
 WORD wServicePackMajor
 WORD wServicePackMinor
 WORD wSuiteMask
 BYTE wProductType
 BYTE wReserved
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA, *LPOSVERSIONINFOEXA

typedef struct _OSVERSIONINFOEXW {
 DWORD dwOSVersionInfoSize
 DWORD dwMajorVersion
 DWORD dwMinorVersion
 DWORD dwBuildNumber
 DWORD dwPlatformId
 WCHAR szCSDVersion[ 128 ]
 WORD wServicePackMajor
 WORD wServicePackMinor
 WORD wSuiteMask
 BYTE wProductType
 BYTE wReserved
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW, *LPOSVERSIONINFOEXW, RTL_OSVERSIONINFOEXW, *PRTL_OSVERSIONINFOEXW

VER_EQUAL 1
VER_GREATER 2
VER_GREATER_EQUAL 3
VER_LESS 4
VER_LESS_EQUAL 5
VER_AND 6
VER_OR 7

VER_CONDITION_MASK 7
VER_NUM_BITS_PER_CONDITION_MASK 3

VER_MINORVERSION 0x0000001
VER_MAJORVERSION 0x0000002
VER_BUILDNUMBER 0x0000004
VER_PLATFORMID 0x0000008
VER_SERVICEPACKMINOR 0x0000010
VER_SERVICEPACKMAJOR 0x0000020
VER_SUITENAME 0x0000040
VER_PRODUCT_TYPE 0x0000080

VER_NT_WORKSTATION 0x0000001
VER_NT_DOMAIN_CONTROLLER 0x0000002
VER_NT_SERVER 0x0000003

VER_PLATFORM_WIN32s 0
VER_PLATFORM_WIN32_WINDOWS 1
VER_PLATFORM_WIN32_NT 2

RTL_UMS_VERSION = 0x0100

typedef enum _RTL_UMS_THREAD_INFO_CLASS {
 UmsThreadInvalidInfoClass = 0,
 UmsThreadUserContext,
 UmsThreadPriority,
 UmsThreadAffinity,
 UmsThreadTeb,
 UmsThreadIsSuspended,
 UmsThreadIsTerminated,
 UmsThreadMaxInfoClass
} RTL_UMS_THREAD_INFO_CLASS, *PRTL_UMS_THREAD_INFO_CLASS

typedef enum _RTL_UMS_SCHEDULER_REASON {
 UmsSchedulerStartup = 0,
 UmsSchedulerThreadBlocked,
 UmsSchedulerThreadYield,
} RTL_UMS_SCHEDULER_REASON, *PRTL_UMS_SCHEDULER_REASON

def IS_VALIDATION_ENABLED(C, L):
	return L & C

VRL_PREDEFINED_CLASS_BEGIN = 1 << 0
VRL_CUSTOM_CLASS_BEGIN = 1 << 8

VRL_CLASS_CONSISTENCY = VRL_PREDEFINED_CLASS_BEGIN << 0

VRL_ENABLE_KERNEL_BREAKS = 1 << 31

CTMF_INCLUDE_APPCONTAINER 0x00000001UL
CTMF_INCLUDE_LPAC 0x00000002UL
CTMF_VALID_FLAGS = CTMF_INCLUDE_APPCONTAINER | CTMF_INCLUDE_LPAC

typedef enum _OS_DEPLOYEMENT_STATE_VALUES {
 OS_DEPLOYMENT_STANDARD = 1,
 OS_DEPLOYMENT_COMPACT
} OS_DEPLOYEMENT_STATE_VALUES

typedef struct _NV_MEMORY_RANGE {
 VOID *BaseAddress
 SIZE_T Length
} NV_MEMORY_RANGE, *PNV_MEMORY_RANGE

FLUSH_NV_MEMORY_IN_FLAG_NO_DRAIN = 0x00000001

FLUSH_NV_MEMORY_DEFAULT_TOKEN = ULONG_PTR(-1)

WRITE_NV_MEMORY_FLAG_FLUSH = 0x00000001
WRITE_NV_MEMORY_FLAG_NON_TEMPORAL = 0x00000002
WRITE_NV_MEMORY_FLAG_PERSIST = WRITE_NV_MEMORY_FLAG_FLUSH | WRITE_NV_MEMORY_FLAG_NON_TEMPORAL
WRITE_NV_MEMORY_FLAG_NO_DRAIN = 0x00000100

RTL_CORRELATION_VECTOR_STRING_LENGTH 129
RTL_CORRELATION_VECTOR_VERSION_1 ((CHAR)1)
RTL_CORRELATION_VECTOR_VERSION_2 ((CHAR)2)
RTL_CORRELATION_VECTOR_VERSION_CURRENT RTL_CORRELATION_VECTOR_VERSION_2

RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH (16)
RTL_CORRELATION_VECTOR_V1_LENGTH (64)

RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH (22)
RTL_CORRELATION_VECTOR_V2_LENGTH (128)

typedef struct CORRELATION_VECTOR {
 CHAR Version
 CHAR Vector[RTL_CORRELATION_VECTOR_STRING_LENGTH]
} CORRELATION_VECTOR

typedef struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG {

 DWORD Size
 PCWSTR TriggerId

} CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG, *PCUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG

IMAGE_POLICY_METADATA_VERSION 1
IMAGE_POLICY_SECTION_NAME ".tPolicy"
IMAGE_POLICY_METADATA_NAME __ImagePolicyMetadata

typedef enum _IMAGE_POLICY_ENTRY_TYPE {
 ImagePolicyEntryTypeNone = 0,
 ImagePolicyEntryTypeBool,
 ImagePolicyEntryTypeInt8,
 ImagePolicyEntryTypeUInt8,
 ImagePolicyEntryTypeInt16,
 ImagePolicyEntryTypeUInt16,
 ImagePolicyEntryTypeInt32,
 ImagePolicyEntryTypeUInt32,
 ImagePolicyEntryTypeInt64,
 ImagePolicyEntryTypeUInt64,
 ImagePolicyEntryTypeAnsiString,
 ImagePolicyEntryTypeUnicodeString,
 ImagePolicyEntryTypeOverride,
 ImagePolicyEntryTypeMaximum
} IMAGE_POLICY_ENTRY_TYPE

typedef enum _IMAGE_POLICY_ID {
 ImagePolicyIdNone = 0,
 ImagePolicyIdEtw,
 ImagePolicyIdDebug,
 ImagePolicyIdCrashDump,
 ImagePolicyIdCrashDumpKey,
 ImagePolicyIdCrashDumpKeyGuid,
 ImagePolicyIdParentSd,
 ImagePolicyIdParentSdRev,
 ImagePolicyIdSvn,
 ImagePolicyIdDeviceId,
 ImagePolicyIdCapability,
 ImagePolicyIdScenarioId,
 ImagePolicyIdMaximum
} IMAGE_POLICY_ID

typedef struct _IMAGE_POLICY_ENTRY {
 IMAGE_POLICY_ENTRY_TYPE Type
 IMAGE_POLICY_ID PolicyId
 union {
 const VOID* None
 BOOLEAN BoolValue
 INT8 Int8Value
 UINT8 UInt8Value
 INT16 Int16Value
 UINT16 UInt16Value
 INT32 Int32Value
 UINT32 UInt32Value
 INT64 Int64Value
 UINT64 UInt64Value
 PCSTR AnsiStringValue
 PCWSTR UnicodeStringValue
 } u
} IMAGE_POLICY_ENTRY

typedef struct _IMAGE_POLICY_METADATA {
 BYTE Version
 BYTE Reserved0[7]
 ULONGLONG ApplicationId
 IMAGE_POLICY_ENTRY Policies[]
} IMAGE_POLICY_METADATA

typedef struct _RTL_CRITICAL_SECTION_DEBUG {
 WORD Type
 WORD CreatorBackTraceIndex
 struct _RTL_CRITICAL_SECTION *CriticalSection
 LIST_ENTRY ProcessLocksList
 DWORD EntryCount
 DWORD ContentionCount
 DWORD Flags
 WORD CreatorBackTraceIndexHigh
 WORD SpareWORD
} RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG, RTL_RESOURCE_DEBUG, *PRTL_RESOURCE_DEBUG
"""
RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO = 0x01000000
RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN = 0x02000000
RTL_CRITICAL_SECTION_FLAG_STATIC_INIT = 0x04000000
RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE = 0x08000000
RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO = 0x10000000
RTL_CRITICAL_SECTION_ALL_FLAG_BITS = 0xFF000000
RTL_CRITICAL_SECTION_FLAG_RESERVED = RTL_CRITICAL_SECTION_ALL_FLAG_BITS & (
    ~(
        RTL_CRITICAL_SECTION_FLAG_NO_DEBUG_INFO
        | RTL_CRITICAL_SECTION_FLAG_DYNAMIC_SPIN
        | RTL_CRITICAL_SECTION_FLAG_STATIC_INIT
        | RTL_CRITICAL_SECTION_FLAG_RESOURCE_TYPE
        | RTL_CRITICAL_SECTION_FLAG_FORCE_DEBUG_INFO
    )
)
RTL_CRITICAL_SECTION_DEBUG_FLAG_STATIC_INIT = 0x00000001


class HEAP_INFORMATION_CLASS(CEnum):
    HeapCompatibilityInformation = 0
    HeapEnableTerminationOnCorruption = 1
    HeapOptimizeResources = 3


HEAP_OPTIMIZE_RESOURCES_CURRENT_VERSION = 1

"""
typedef struct _HEAP_OPTIMIZE_RESOURCES_INFORMATION {
 DWORD Version
 DWORD Flags
} HEAP_OPTIMIZE_RESOURCES_INFORMATION, *PHEAP_OPTIMIZE_RESOURCES_INFORMATION

"""
WT_EXECUTEDEFAULT = 0x00000000
WT_EXECUTEINIOTHREAD = 0x00000001
WT_EXECUTEINUITHREAD = 0x00000002
WT_EXECUTEINWAITTHREAD = 0x00000004
WT_EXECUTEONLYONCE = 0x00000008
WT_EXECUTEINTIMERTHREAD = 0x00000020
WT_EXECUTELONGFUNCTION = 0x00000010
WT_EXECUTEINPERSISTENTIOTHREAD = 0x00000040
WT_EXECUTEINPERSISTENTTHREAD = 0x00000080
WT_TRANSFER_IMPERSONATION = 0x00000100


class ACTIVATION_CONTEXT_INFO_CLASS(CEnum):
    ActivationContextBasicInformation = 1
    ActivationContextDetailedInformation = 2
    AssemblyDetailedInformationInActivationContext = 3
    FileInformationInAssemblyOfAssemblyInActivationContext = 4
    RunlevelInformationInActivationContext = 5
    CompatibilityInformationInActivationContext = 6
    ActivationContextManifestResourceName = 7
    MaxActivationContextInfoClass = 8

    # compatibility with old names
    AssemblyDetailedInformationInActivationContxt = 3
    FileInformationInAssemblyOfAssemblyInActivationContxt = 4


ACTIVATIONCONTEXTINFOCLASS = ACTIVATION_CONTEXT_INFO_CLASS

"""
typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX {
 DWORD ulAssemblyIndex
 DWORD ulFileIndexInAssembly
} ACTIVATION_CONTEXT_QUERY_INDEX, * PACTIVATION_CONTEXT_QUERY_INDEX

ACTIVATION_CONTEXT_PATH_TYPE_NONE = 1
ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE = 2
ACTIVATION_CONTEXT_PATH_TYPE_URL = 3
ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF = 4

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION {
 DWORD ulFlags
 DWORD ulFilenameLength
 DWORD ulPathLength

 PCWSTR lpFileName
 PCWSTR lpFilePath
} ASSEMBLY_FILE_DETAILED_INFORMATION, *PASSEMBLY_FILE_DETAILED_INFORMATION

_ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION = _ASSEMBLY_FILE_DETAILED_INFORMATION
ASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION = ASSEMBLY_FILE_DETAILED_INFORMATION
PASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION = PASSEMBLY_FILE_DETAILED_INFORMATION
PCASSEMBLY_DLL_REDIRECTION_DETAILED_INFORMATION = PCASSEMBLY_FILE_DETAILED_INFORMATION

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION {
 DWORD ulFlags
 DWORD ulEncodedAssemblyIdentityLength
 DWORD ulManifestPathType
 DWORD ulManifestPathLength
 LARGE_INTEGER liManifestLastWriteTime
 DWORD ulPolicyPathType
 DWORD ulPolicyPathLength
 LARGE_INTEGER liPolicyLastWriteTime
 DWORD ulMetadataSatelliteRosterIndex

 DWORD ulManifestVersionMajor
 DWORD ulManifestVersionMinor
 DWORD ulPolicyVersionMajor
 DWORD ulPolicyVersionMinor
 DWORD ulAssemblyDirectoryNameLength

 PCWSTR lpAssemblyEncodedAssemblyIdentity
 PCWSTR lpAssemblyManifestPath
 PCWSTR lpAssemblyPolicyPath
 PCWSTR lpAssemblyDirectoryName

 DWORD ulFileCount
} ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, * PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION

typedef enum
{
 ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
 ACTCTX_RUN_LEVEL_AS_INVOKER,
 ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE,
 ACTCTX_RUN_LEVEL_REQUIRE_ADMIN,
 ACTCTX_RUN_LEVEL_NUMBERS
} ACTCTX_REQUESTED_RUN_LEVEL

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION {
 DWORD ulFlags
 ACTCTX_REQUESTED_RUN_LEVEL RunLevel
 DWORD UiAccess
} ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION, * PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION

typedef enum
{
 ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0,
 ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS,
 ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION
} ACTCTX_COMPATIBILITY_ELEMENT_TYPE

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT {
 GUID Id
 ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type
} COMPATIBILITY_CONTEXT_ELEMENT, *PCOMPATIBILITY_CONTEXT_ELEMENT

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION {
 DWORD ElementCount
 COMPATIBILITY_CONTEXT_ELEMENT Elements[]
} ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION, * PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION

typedef struct _SUPPORTED_OS_INFO {
 WORD MajorVersion
 WORD MinorVersion
} SUPPORTED_OS_INFO, *PSUPPORTED_OS_INFO

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION {
 DWORD dwFlags
 DWORD ulFormatVersion
 DWORD ulAssemblyCount
 DWORD ulRootManifestPathType
 DWORD ulRootManifestPathChars
 DWORD ulRootConfigurationPathType
 DWORD ulRootConfigurationPathChars
 DWORD ulAppDirPathType
 DWORD ulAppDirPathChars
 PCWSTR lpRootManifestPath
 PCWSTR lpRootConfigurationPath
 PCWSTR lpAppDirPath
} ACTIVATION_CONTEXT_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_DETAILED_INFORMATION

CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID 0x1

class HARDWARE_COUNTER_DATA(Structure):
 HARDWARE_COUNTER_TYPE Type
 DWORD Reserved
 DWORD64 Value

PERFORMANCE_DATA_VERSION 1

class PERFORMANCE_DATA(Structure):
 WORD Size
 BYTE Version
 BYTE HwCountersCount
 DWORD ContextSwitchCount
 DWORD64 WaitReasonBitMap
 DWORD64 CycleTime
 DWORD RetryCount
 DWORD Reserved
 HARDWARE_COUNTER_DATA HwCounters[MAX_HW_COUNTERS]

READ_THREAD_PROFILING_FLAG_DISPATCHING 0x00000001
READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS 0x00000002

UNIFIEDBUILDREVISION_KEY L"\\Registry\\Machine\\Software\\Microsoft\\Windows NT\\CurrentVersion"
UNIFIEDBUILDREVISION_VALUE L"UBR"
UNIFIEDBUILDREVISION_MIN 0x00000000
DEVICEFAMILYDEVICEFORM_KEY L"\\Registry\\Machine\\Software\\Microsoft\\Windows NT\\CurrentVersion\\OEM"
DEVICEFAMILYDEVICEFORM_VALUE L"DeviceForm"

DEVICEFAMILYINFOENUM_UAP 0x00000000
DEVICEFAMILYINFOENUM_WINDOWS_8X 0x00000001
DEVICEFAMILYINFOENUM_WINDOWS_PHONE_8X 0x00000002
DEVICEFAMILYINFOENUM_DESKTOP 0x00000003
DEVICEFAMILYINFOENUM_MOBILE 0x00000004
DEVICEFAMILYINFOENUM_XBOX 0x00000005
DEVICEFAMILYINFOENUM_TEAM 0x00000006
DEVICEFAMILYINFOENUM_IOT 0x00000007
DEVICEFAMILYINFOENUM_IOT_HEADLESS 0x00000008
DEVICEFAMILYINFOENUM_SERVER 0x00000009
DEVICEFAMILYINFOENUM_HOLOGRAPHIC 0x0000000A
DEVICEFAMILYINFOENUM_XBOXSRA 0x0000000B
DEVICEFAMILYINFOENUM_XBOXERA 0x0000000C
DEVICEFAMILYINFOENUM_SERVER_NANO 0x0000000D
DEVICEFAMILYINFOENUM_8828080 0x0000000E
DEVICEFAMILYINFOENUM_7067329 0x0000000F
DEVICEFAMILYINFOENUM_WINDOWS_CORE 0x00000010
DEVICEFAMILYINFOENUM_MAX 0x00000010
DEVICEFAMILYDEVICEFORM_UNKNOWN 0x00000000
DEVICEFAMILYDEVICEFORM_PHONE 0x00000001
DEVICEFAMILYDEVICEFORM_TABLET 0x00000002
DEVICEFAMILYDEVICEFORM_DESKTOP 0x00000003
DEVICEFAMILYDEVICEFORM_NOTEBOOK 0x00000004
DEVICEFAMILYDEVICEFORM_CONVERTIBLE 0x00000005
DEVICEFAMILYDEVICEFORM_DETACHABLE 0x00000006
DEVICEFAMILYDEVICEFORM_ALLINONE 0x00000007
DEVICEFAMILYDEVICEFORM_STICKPC 0x00000008
DEVICEFAMILYDEVICEFORM_PUCK 0x00000009
DEVICEFAMILYDEVICEFORM_LARGESCREEN 0x0000000A
DEVICEFAMILYDEVICEFORM_HMD 0x0000000B
DEVICEFAMILYDEVICEFORM_INDUSTRY_HANDHELD 0x0000000C
DEVICEFAMILYDEVICEFORM_INDUSTRY_TABLET 0x0000000D
DEVICEFAMILYDEVICEFORM_BANKING 0x0000000E
DEVICEFAMILYDEVICEFORM_BUILDING_AUTOMATION 0x0000000F
DEVICEFAMILYDEVICEFORM_DIGITAL_SIGNAGE 0x00000010
DEVICEFAMILYDEVICEFORM_GAMING 0x00000011
DEVICEFAMILYDEVICEFORM_HOME_AUTOMATION 0x00000012
DEVICEFAMILYDEVICEFORM_INDUSTRIAL_AUTOMATION 0x00000013
DEVICEFAMILYDEVICEFORM_KIOSK 0x00000014
DEVICEFAMILYDEVICEFORM_MAKER_BOARD 0x00000015
DEVICEFAMILYDEVICEFORM_MEDICAL 0x00000016
DEVICEFAMILYDEVICEFORM_NETWORKING 0x00000017
DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE 0x00000018
DEVICEFAMILYDEVICEFORM_PRINTING 0x00000019
DEVICEFAMILYDEVICEFORM_THIN_CLIENT 0x0000001A
DEVICEFAMILYDEVICEFORM_TOY 0x0000001B
DEVICEFAMILYDEVICEFORM_VENDING 0x0000001C
DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER 0x0000001D
DEVICEFAMILYDEVICEFORM_XBOX_ONE 0x0000001E
DEVICEFAMILYDEVICEFORM_XBOX_ONE_S 0x0000001F
DEVICEFAMILYDEVICEFORM_XBOX_ONE_X 0x00000020
DEVICEFAMILYDEVICEFORM_XBOX_ONE_X_DEVKIT 0x00000021
DEVICEFAMILYDEVICEFORM_MAX 0x00000021

DLL_PROCESS_ATTACH 1
DLL_THREAD_ATTACH 2
DLL_THREAD_DETACH 3
DLL_PROCESS_DETACH 0

EVENTLOG_SEQUENTIAL_READ 0x0001
EVENTLOG_SEEK_READ 0x0002
EVENTLOG_FORWARDS_READ 0x0004
EVENTLOG_BACKWARDS_READ 0x0008
EVENTLOG_SUCCESS 0x0000
EVENTLOG_ERROR_TYPE 0x0001
EVENTLOG_WARNING_TYPE 0x0002
EVENTLOG_INFORMATION_TYPE 0x0004
EVENTLOG_AUDIT_SUCCESS 0x0008
EVENTLOG_AUDIT_FAILURE 0x0010
EVENTLOG_START_PAIRED_EVENT 0x0001
EVENTLOG_END_PAIRED_EVENT 0x0002
EVENTLOG_END_ALL_PAIRED_EVENTS 0x0004
EVENTLOG_PAIRED_EVENT_ACTIVE 0x0008
EVENTLOG_PAIRED_EVENT_INACTIVE 0x0010

class EVENTLOGRECORD(Structure):
 DWORD Length
 DWORD Reserved
 DWORD RecordNumber
 DWORD TimeGenerated
 DWORD TimeWritten
 DWORD EventID
 WORD EventType
 WORD NumStrings
 WORD EventCategory
 WORD ReservedFlags
 DWORD ClosingRecordNumber
 DWORD StringOffset
 DWORD UserSidLength
 DWORD UserSidOffset
 DWORD DataLength
 DWORD DataOffset

MAXLOGICALLOGNAMESIZE = 256

KEY_QUERY_VALUE = 0x0001
KEY_SET_VALUE = 0x0002
KEY_CREATE_SUB_KEY = 0x0004
KEY_ENUMERATE_SUB_KEYS = 0x0008
KEY_NOTIFY = 0x0010
KEY_CREATE_LINK = 0x0020
KEY_WOW64_32KEY = 0x0200
KEY_WOW64_64KEY = 0x0100
KEY_WOW64_RES = 0x0300
KEY_READ = (STANDARD_RIGHTS_READ | KEY_QUERY_VALUE | KEY_ENUMERATE_SUB_KEYS | KEY_NOTIFY) & (~SYNCHRONIZE)
KEY_WRITE = STANDARD_RIGHTS_WRITE | KEY_SET_VALUE | KEY_CREATE_SUB_KEY) & (~SYNCHRONIZE)
KEY_EXECUTE = KEY_READ & (~SYNCHRONIZE)
KEY_ALL_ACCESS = (STANDARD_RIGHTS_ALL | KEY_QUERY_VALUE | KEY_SET_VALUE | KEY_CREATE_SUB_KEY | KEY_ENUMERATE_SUB_KEYS | KEY_NOTIFY | KEY_CREATE_LINK) & (~SYNCHRONIZE)

REG_OPTION_RESERVED = 0x00000000
REG_OPTION_NON_VOLATILE = 0x00000000
REG_OPTION_VOLATILE = 0x00000001
REG_OPTION_CREATE_LINK = 0x00000002
REG_OPTION_BACKUP_RESTORE = 0x00000004
REG_OPTION_OPEN_LINK = 0x00000008
REG_OPTION_DONT_VIRTUALIZE = 0x00000010
REG_LEGAL_OPTION = REG_OPTION_RESERVED | REG_OPTION_NON_VOLATILE | REG_OPTION_VOLATILE | REG_OPTION_CREATE_LINK | REG_OPTION_BACKUP_RESTORE | REG_OPTION_OPEN_LINK | REG_OPTION_DONT_VIRTUALIZE
REG_OPEN_LEGAL_OPTION = REG_OPTION_RESERVED | REG_OPTION_BACKUP_RESTORE | REG_OPTION_OPEN_LINK | REG_OPTION_DONT_VIRTUALIZE
REG_CREATED_NEW_KEY = 0x00000001
REG_OPENED_EXISTING_KEY = 0x00000002
REG_STANDARD_FORMAT 1
REG_LATEST_FORMAT 2
REG_NO_COMPRESSION 4
REG_WHOLE_HIVE_VOLATILE = 0x00000001
REG_REFRESH_HIVE = 0x00000002
REG_NO_LAZY_FLUSH = 0x00000004
REG_FORCE_RESTORE = 0x00000008
REG_APP_HIVE = 0x00000010
REG_PROCESS_PRIVATE = 0x00000020
REG_START_JOURNAL = 0x00000040
REG_HIVE_EXACT_FILE_GROWTH = 0x00000080
REG_HIVE_NO_RM = 0x00000100
REG_HIVE_SINGLE_LOG = 0x00000200
REG_BOOT_HIVE = 0x00000400
REG_LOAD_HIVE_OPEN_HANDLE = 0x00000800
REG_FLUSH_HIVE_FILE_GROWTH = 0x00001000
REG_OPEN_READ_ONLY = 0x00002000
REG_IMMUTABLE = 0x00004000
REG_APP_HIVE_OPEN_READ_ONLY = REG_OPEN_READ_ONLY
REG_FORCE_UNLOAD 1
REG_UNLOAD_LEGAL_FLAGS = REG_FORCE_UNLOAD
REG_NOTIFY_CHANGE_NAME = 0x00000001
REG_NOTIFY_CHANGE_ATTRIBUTES = 0x00000002
REG_NOTIFY_CHANGE_LAST_SET = 0x00000004
REG_NOTIFY_CHANGE_SECURITY = 0x00000008
REG_NOTIFY_THREAD_AGNOSTIC = 0x10000000
REG_LEGAL_CHANGE_FILTER = REG_NOTIFY_CHANGE_NAME | REG_NOTIFY_CHANGE_ATTRIBUTES | REG_NOTIFY_CHANGE_LAST_SET | REG_NOTIFY_CHANGE_SECURITY | REG_NOTIFY_THREAD_AGNOSTIC
REG_NONE = 0ul
REG_SZ = 1ul
REG_EXPAND_SZ = 2ul
REG_BINARY = 3ul
REG_DWORD = 4ul
REG_DWORD_LITTLE_ENDIAN = 4ul
REG_DWORD_BIG_ENDIAN = 5ul
REG_LINK = 6ul
REG_MULTI_SZ = 7ul
REG_RESOURCE_LIST = 8ul
REG_FULL_RESOURCE_DESCRIPTOR = 9ul
REG_RESOURCE_REQUIREMENTS_LIST = 10ul
REG_QWORD = 11ul
REG_QWORD_LITTLE_ENDIAN = 11ul

SERVICE_KERNEL_DRIVER 0x00000001
SERVICE_FILE_SYSTEM_DRIVER 0x00000002
SERVICE_ADAPTER 0x00000004
SERVICE_RECOGNIZER_DRIVER 0x00000008
SERVICE_DRIVER = SERVICE_KERNEL_DRIVER | SERVICE_FILE_SYSTEM_DRIVER | SERVICE_RECOGNIZER_DRIVER
SERVICE_WIN32_OWN_PROCESS 0x00000010
SERVICE_WIN32_SHARE_PROCESS 0x00000020
SERVICE_WIN32 = SERVICE_WIN32_OWN_PROCESS | SERVICE_WIN32_SHARE_PROCESS
SERVICE_USER_SERVICE 0x00000040
SERVICE_USERSERVICE_INSTANCE 0x00000080
SERVICE_USER_SHARE_PROCESS = SERVICE_USER_SERVICE | SERVICE_WIN32_SHARE_PROCESS
SERVICE_USER_OWN_PROCESS = SERVICE_USER_SERVICE | SERVICE_WIN32_OWN_PROCESS
SERVICE_INTERACTIVE_PROCESS 0x00000100
SERVICE_PKG_SERVICE 0x00000200
SERVICE_TYPE_ALL = SERVICE_WIN32 | SERVICE_ADAPTER | SERVICE_DRIVER | SERVICE_INTERACTIVE_PROCESS | SERVICE_USER_SERVICE | SERVICE_USERSERVICE_INSTANCE | SERVICE_PKG_SERVICE
SERVICE_BOOT_START 0x00000000
SERVICE_SYSTEM_START 0x00000001
SERVICE_AUTO_START 0x00000002
SERVICE_DEMAND_START 0x00000003
SERVICE_DISABLED 0x00000004
SERVICE_ERROR_IGNORE 0x00000000
SERVICE_ERROR_NORMAL 0x00000001
SERVICE_ERROR_SEVERE 0x00000002
SERVICE_ERROR_CRITICAL 0x00000003

class SERVICE_NODE_TYPE(CEnum):
 DriverType = SERVICE_KERNEL_DRIVER,
 FileSystemType = SERVICE_FILE_SYSTEM_DRIVER,
 Win32ServiceOwnProcess = SERVICE_WIN32_OWN_PROCESS,
 Win32ServiceShareProcess = SERVICE_WIN32_SHARE_PROCESS,
 AdapterType = SERVICE_ADAPTER,
 RecognizerType = SERVICE_RECOGNIZER_DRIVER

class SERVICE_LOAD_TYPE(CEnum):
 BootLoad = SERVICE_BOOT_START,
 SystemLoad = SERVICE_SYSTEM_START,
 AutoLoad = SERVICE_AUTO_START,
 DemandLoad = SERVICE_DEMAND_START,
 DisableLoad = SERVICE_DISABLED

class SERVICE_ERROR_TYPE(CEnum):
 IgnoreError = SERVICE_ERROR_IGNORE,
 NormalError = SERVICE_ERROR_NORMAL,
 SevereError = SERVICE_ERROR_SEVERE,
 CriticalError = SERVICE_ERROR_CRITICAL

CM_SERVICE_NETWORK_BOOT_LOAD 0x00000001
CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD 0x00000002
CM_SERVICE_USB_DISK_BOOT_LOAD 0x00000004
CM_SERVICE_SD_DISK_BOOT_LOAD 0x00000008
CM_SERVICE_USB3_DISK_BOOT_LOAD 0x00000010
CM_SERVICE_MEASURED_BOOT_LOAD 0x00000020
CM_SERVICE_VERIFIER_BOOT_LOAD 0x00000040
CM_SERVICE_WINPE_BOOT_LOAD 0x00000080
CM_SERVICE_RAM_DISK_BOOT_LOAD 0x00000100

CM_SERVICE_VALID_PROMOTION_MASK = CM_SERVICE_NETWORK_BOOT_LOAD | CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD | CM_SERVICE_USB_DISK_BOOT_LOAD | CM_SERVICE_SD_DISK_BOOT_LOAD | CM_SERVICE_USB3_DISK_BOOT_LOAD | CM_SERVICE_MEASURED_BOOT_LOAD | CM_SERVICE_VERIFIER_BOOT_LOAD | CM_SERVICE_WINPE_BOOT_LOAD | CM_SERVICE_RAM_DISK_BOOT_LOAD

TAPE_ERASE_SHORT 0
TAPE_ERASE_LONG 1

class TAPE_ERASE(Structure):
	DWORD Type
	BOOLEAN Immediate

TAPE_LOAD 0
TAPE_UNLOAD 1
TAPE_TENSION 2
TAPE_LOCK 3
TAPE_UNLOCK 4
TAPE_FORMAT 5

class TAPE_PREPARE(Structure):
 DWORD Operation
 BOOLEAN Immediate

TAPE_SETMARKS 0
TAPE_FILEMARKS 1
TAPE_SHORT_FILEMARKS 2
TAPE_LONG_FILEMARKS 3

class TAPE_WRITE_MARKS(Structure):
 DWORD Type
 DWORD Count
 BOOLEAN Immediate

TAPE_ABSOLUTE_POSITION 0
TAPE_LOGICAL_POSITION 1
TAPE_PSEUDO_LOGICAL_POSITION 2

class TAPE_GET_POSITION(Structure):
 DWORD Type
 DWORD Partition
 LARGE_INTEGER Offset

TAPE_REWIND 0
TAPE_ABSOLUTE_BLOCK 1
TAPE_LOGICAL_BLOCK 2
TAPE_PSEUDO_LOGICAL_BLOCK 3
TAPE_SPACE_END_OF_DATA 4
TAPE_SPACE_RELATIVE_BLOCKS 5
TAPE_SPACE_FILEMARKS 6
TAPE_SPACE_SEQUENTIAL_FMKS 7
TAPE_SPACE_SETMARKS 8
TAPE_SPACE_SEQUENTIAL_SMKS 9

class TAPE_SET_POSITION(Structure):
 DWORD Method
 DWORD Partition
 LARGE_INTEGER Offset
 BOOLEAN Immediate

TAPE_DRIVE_FIXED 0x00000001
TAPE_DRIVE_SELECT 0x00000002
TAPE_DRIVE_INITIATOR 0x00000004
TAPE_DRIVE_ERASE_SHORT 0x00000010
TAPE_DRIVE_ERASE_LONG 0x00000020
TAPE_DRIVE_ERASE_BOP_ONLY 0x00000040
TAPE_DRIVE_ERASE_IMMEDIATE 0x00000080
TAPE_DRIVE_TAPE_CAPACITY 0x00000100
TAPE_DRIVE_TAPE_REMAINING 0x00000200
TAPE_DRIVE_FIXED_BLOCK 0x00000400
TAPE_DRIVE_VARIABLE_BLOCK 0x00000800
TAPE_DRIVE_WRITE_PROTECT 0x00001000
TAPE_DRIVE_EOT_WZ_SIZE 0x00002000
TAPE_DRIVE_ECC 0x00010000
TAPE_DRIVE_COMPRESSION 0x00020000
TAPE_DRIVE_PADDING 0x00040000
TAPE_DRIVE_REPORT_SMKS 0x00080000
TAPE_DRIVE_GET_ABSOLUTE_BLK 0x00100000
TAPE_DRIVE_GET_LOGICAL_BLK 0x00200000
TAPE_DRIVE_SET_EOT_WZ_SIZE 0x00400000
TAPE_DRIVE_EJECT_MEDIA 0x01000000
TAPE_DRIVE_CLEAN_REQUESTS 0x02000000
TAPE_DRIVE_SET_CMP_BOP_ONLY 0x04000000
TAPE_DRIVE_RESERVED_BIT 0x80000000
TAPE_DRIVE_LOAD_UNLOAD 0x80000001
TAPE_DRIVE_TENSION 0x80000002
TAPE_DRIVE_LOCK_UNLOCK 0x80000004
TAPE_DRIVE_REWIND_IMMEDIATE 0x80000008
TAPE_DRIVE_SET_BLOCK_SIZE 0x80000010
TAPE_DRIVE_LOAD_UNLD_IMMED 0x80000020
TAPE_DRIVE_TENSION_IMMED 0x80000040
TAPE_DRIVE_LOCK_UNLK_IMMED 0x80000080
TAPE_DRIVE_SET_ECC 0x80000100
TAPE_DRIVE_SET_COMPRESSION 0x80000200
TAPE_DRIVE_SET_PADDING 0x80000400
TAPE_DRIVE_SET_REPORT_SMKS 0x80000800
TAPE_DRIVE_ABSOLUTE_BLK 0x80001000
TAPE_DRIVE_ABS_BLK_IMMED 0x80002000
TAPE_DRIVE_LOGICAL_BLK 0x80004000
TAPE_DRIVE_LOG_BLK_IMMED 0x80008000
TAPE_DRIVE_END_OF_DATA 0x80010000
TAPE_DRIVE_RELATIVE_BLKS 0x80020000
TAPE_DRIVE_FILEMARKS 0x80040000
TAPE_DRIVE_SEQUENTIAL_FMKS 0x80080000
TAPE_DRIVE_SETMARKS 0x80100000
TAPE_DRIVE_SEQUENTIAL_SMKS 0x80200000
TAPE_DRIVE_REVERSE_POSITION 0x80400000
TAPE_DRIVE_SPACE_IMMEDIATE 0x80800000
TAPE_DRIVE_WRITE_SETMARKS 0x81000000
TAPE_DRIVE_WRITE_FILEMARKS 0x82000000
TAPE_DRIVE_WRITE_SHORT_FMKS 0x84000000
TAPE_DRIVE_WRITE_LONG_FMKS 0x88000000
TAPE_DRIVE_WRITE_MARK_IMMED 0x90000000
TAPE_DRIVE_FORMAT 0xA0000000
TAPE_DRIVE_FORMAT_IMMEDIATE 0xC0000000
TAPE_DRIVE_HIGH_FEATURES 0x80000000

class TAPE_GET_DRIVE_PARAMETERS(Structure):
 BOOLEAN ECC
 BOOLEAN Compression
 BOOLEAN DataPadding
 BOOLEAN ReportSetmarks
 DWORD DefaultBlockSize
 DWORD MaximumBlockSize
 DWORD MinimumBlockSize
 DWORD MaximumPartitionCount
 DWORD FeaturesLow
 DWORD FeaturesHigh
 DWORD EOTWarningZoneSize

class TAPE_SET_DRIVE_PARAMETERS(Structure):
 BOOLEAN ECC
 BOOLEAN Compression
 BOOLEAN DataPadding
 BOOLEAN ReportSetmarks
 DWORD EOTWarningZoneSize

class TAPE_GET_MEDIA_PARAMETERS(Structure):
 LARGE_INTEGER Capacity
 LARGE_INTEGER Remaining
 DWORD BlockSize
 DWORD PartitionCount
 BOOLEAN WriteProtected

class TAPE_SET_MEDIA_PARAMETERS(Structure):
 DWORD BlockSize

TAPE_FIXED_PARTITIONS 0
TAPE_SELECT_PARTITIONS 1
TAPE_INITIATOR_PARTITIONS 2

class TAPE_CREATE_PARTITION(Structure):
 DWORD Method
 DWORD Count
 DWORD Size

TAPE_QUERY_DRIVE_PARAMETERS 0
TAPE_QUERY_MEDIA_CAPACITY 1
TAPE_CHECK_FOR_DRIVE_PROBLEM 2
TAPE_QUERY_IO_ERROR_DATA 3
TAPE_QUERY_DEVICE_ERROR_DATA 4

class TAPE_WMI_OPERATIONS(Structure):
 DWORD Method
 DWORD DataBufferSize
 PVOID DataBuffer

class TAPE_DRIVE_PROBLEM_TYPE(CEnum):
 TapeDriveProblemNone, TapeDriveReadWriteWarning,
 TapeDriveReadWriteError, TapeDriveReadWarning,
 TapeDriveWriteWarning, TapeDriveReadError,
 TapeDriveWriteError, TapeDriveHardwareError,
 TapeDriveUnsupportedMedia, TapeDriveScsiConnectionError,
 TapeDriveTimetoClean, TapeDriveCleanDriveNow,
 TapeDriveMediaLifeExpired, TapeDriveSnappedTape

TRANSACTIONMANAGER_QUERY_INFORMATION = 0x0001
TRANSACTIONMANAGER_SET_INFORMATION = 0x0002
TRANSACTIONMANAGER_RECOVER = 0x0004
TRANSACTIONMANAGER_RENAME = 0x0008
TRANSACTIONMANAGER_CREATE_RM = 0x0010
TRANSACTIONMANAGER_BIND_TRANSACTION = 0x0020
TRANSACTIONMANAGER_GENERIC_READ = STANDARD_RIGHTS_READ | TRANSACTIONMANAGER_QUERY_INFORMATION
TRANSACTIONMANAGER_GENERIC_WRITE = STANDARD_RIGHTS_WRITE | TRANSACTIONMANAGER_SET_INFORMATION | TRANSACTIONMANAGER_RECOVER | TRANSACTIONMANAGER_RENAME | TRANSACTIONMANAGER_CREATE_RM
TRANSACTIONMANAGER_GENERIC_EXECUTE = STANDARD_RIGHTS_EXECUTE
TRANSACTIONMANAGER_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | TRANSACTIONMANAGER_GENERIC_READ | TRANSACTIONMANAGER_GENERIC_WRITE | TRANSACTIONMANAGER_GENERIC_EXECUTE | TRANSACTIONMANAGER_BIND_TRANSACTION

TRANSACTION_QUERY_INFORMATION = 0x0001
TRANSACTION_SET_INFORMATION = 0x0002
TRANSACTION_ENLIST = 0x0004
TRANSACTION_COMMIT = 0x0008
TRANSACTION_ROLLBACK = 0x0010
TRANSACTION_PROPAGATE = 0x0020
TRANSACTION_RIGHT_RESERVED1 = 0x0040
TRANSACTION_GENERIC_READ = STANDARD_RIGHTS_READ | TRANSACTION_QUERY_INFORMATION | SYNCHRONIZE
TRANSACTION_GENERIC_WRITE = STANDARD_RIGHTS_WRITE | TRANSACTION_SET_INFORMATION | TRANSACTION_COMMIT | TRANSACTION_ENLIST | TRANSACTION_ROLLBACK | TRANSACTION_PROPAGATE | SYNCHRONIZE
TRANSACTION_GENERIC_EXECUTE = STANDARD_RIGHTS_EXECUTE | TRANSACTION_COMMIT | TRANSACTION_ROLLBACK | SYNCHRONIZE
TRANSACTION_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | TRANSACTION_GENERIC_READ | TRANSACTION_GENERIC_WRITE | TRANSACTION_GENERIC_EXECUTE
TRANSACTION_RESOURCE_MANAGER_RIGHTS = TRANSACTION_GENERIC_READ | STANDARD_RIGHTS_WRITE | TRANSACTION_SET_INFORMATION | TRANSACTION_ENLIST | TRANSACTION_ROLLBACK | TRANSACTION_PROPAGATE | SYNCHRONIZE

RESOURCEMANAGER_QUERY_INFORMATION = 0x0001
RESOURCEMANAGER_SET_INFORMATION = 0x0002
RESOURCEMANAGER_RECOVER = 0x0004
RESOURCEMANAGER_ENLIST = 0x0008
RESOURCEMANAGER_GET_NOTIFICATION = 0x0010
RESOURCEMANAGER_REGISTER_PROTOCOL = 0x0020
RESOURCEMANAGER_COMPLETE_PROPAGATION = 0x0040
RESOURCEMANAGER_GENERIC_READ = STANDARD_RIGHTS_READ | RESOURCEMANAGER_QUERY_INFORMATION | SYNCHRONIZE
RESOURCEMANAGER_GENERIC_WRITE = STANDARD_RIGHTS_WRITE | RESOURCEMANAGER_SET_INFORMATION | RESOURCEMANAGER_RECOVER | RESOURCEMANAGER_ENLIST | RESOURCEMANAGER_GET_NOTIFICATION | RESOURCEMANAGER_REGISTER_PROTOCOL | RESOURCEMANAGER_COMPLETE_PROPAGATION | SYNCHRONIZE
RESOURCEMANAGER_GENERIC_EXECUTE = STANDARD_RIGHTS_EXECUTE | RESOURCEMANAGER_RECOVER | RESOURCEMANAGER_ENLIST | RESOURCEMANAGER_GET_NOTIFICATION | RESOURCEMANAGER_COMPLETE_PROPAGATION | SYNCHRONIZE
RESOURCEMANAGER_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | RESOURCEMANAGER_GENERIC_READ | RESOURCEMANAGER_GENERIC_WRITE | RESOURCEMANAGER_GENERIC_EXECUTE

ENLISTMENT_QUERY_INFORMATION = 0x0001
ENLISTMENT_SET_INFORMATION = 0x0002
ENLISTMENT_RECOVER = 0x0004
ENLISTMENT_SUBORDINATE_RIGHTS = 0x0008
ENLISTMENT_SUPERIOR_RIGHTS = 0x0010
ENLISTMENT_GENERIC_READ = STANDARD_RIGHTS_READ | ENLISTMENT_QUERY_INFORMATION
ENLISTMENT_GENERIC_WRITE = STANDARD_RIGHTS_WRITE | ENLISTMENT_SET_INFORMATION | ENLISTMENT_RECOVER | ENLISTMENT_SUBORDINATE_RIGHTS | ENLISTMENT_SUPERIOR_RIGHTS
ENLISTMENT_GENERIC_EXECUTE = STANDARD_RIGHTS_EXECUTE | ENLISTMENT_RECOVER | ENLISTMENT_SUBORDINATE_RIGHTS | ENLISTMENT_SUPERIOR_RIGHTS
ENLISTMENT_ALL_ACCESS = STANDARD_RIGHTS_REQUIRED | ENLISTMENT_GENERIC_READ | ENLISTMENT_GENERIC_WRITE | ENLISTMENT_GENERIC_EXECUTE

ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION = 1
ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION = 2
ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION = 3
ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION = 4
ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION = 5
ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION = 6
ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION = 7
ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE = 8
ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES = 9
ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS = 10
ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO = 11
"""
